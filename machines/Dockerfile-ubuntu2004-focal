FROM ubuntu:20.04
LABEL Description="Ubuntu 20.04 LTS Focal Fossa with build dependencies for shared"

# Override the language to force UTF-8 output
ENV LANG=C.UTF-8

# Ubuntu 20.04 dropped Python 2 support
# Install apt-utils first, in order to apply package configuration tasks
# Create directory /usr/include/SDL2 because "pkgconf --cflags sdl2" specifies
# "-I/usr/include/x86_64-linux-gnu/SDL2 -I/usr/include/SDL2" without creating it.
RUN \
    export DEBIAN_FRONTEND=noninteractive && \
    dpkg --add-architecture i386 && \
    apt-get -qq update && \
    apt-get install --no-install-recommends --no-install-suggests -qqy apt-utils && \
    apt-get install --no-install-recommends --no-install-suggests -qqy \
        binutils-mingw-w64 \
        cargo \
        clang \
        coq \
        gcc-mingw-w64 \
        gcc-multilib \
        gdb \
        libc-dev \
        libc6-dev-i386 \
        libgmp-dev \
        libgtk-3-dev \
        libmnl-dev \
        libpulse-dev \
        libsdl2-dev \
        libssl-dev \
        linux-headers-generic \
        m4 \
        make \
        musl-dev \
        musl-tools \
        openjdk-11-jdk \
        openssh-client \
        openssl \
        pkgconf \
        python3 \
        python3-cffi \
        python3-crypto \
        python3-dev \
        python3-gmpy2 \
        python3-numpy \
        python3-pil \
        python-argparse \
        python-cffi \
        python-crypto \
        python-numpy \
        python-pil && \
    apt-get install --no-install-recommends --no-install-suggests -qqy \
        wine-stable \
        wine32 \
        wine64 && \
    apt-get clean

WORKDIR /shared
RUN ln -s shared/machines/run_shared_test.sh /run_shared_test.sh
COPY . /shared/

CMD ["/run_shared_test.sh"]

# make list-nobuild:
#    Global blacklist: latex%
#    In sub-directories:
#       c:
#       glossaries:
#       java/keystore:
#       linux:
#       python: z3_example.py
#       python/crypto:
#       python/network:
#       python/network/dnssec:
#       python/qrcode:
#       rust:
#       verification:
#    With gcc -m32:
#       Global blacklist: latex%
#       In sub-directories:
#          c: gmp_functions gtk_alpha_window
#          glossaries:
#          java/keystore:
#          linux: enum_link_addrs pulseaudio_echo sdl_v4l_video
#          python: z3_example.py
#          python/crypto:
#          python/network:
#          python/network/dnssec:
#          python/qrcode:
#          rust:
#          verification:
#    Compilers:
#       gcc -m64: ok
#       gcc -m32: ok
#       clang -m64: ok
#       clang -m32: ok
#       musl-gcc: ok
#       x86_64-w64-mingw32-gcc: ok
#       i686-w64-mingw32-gcc: ok
#    Versions:
#       gcc: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
#       clang: clang version 10.0.0-4ubuntu1
#       x86_64-w64-mingw32-gcc: x86_64-w64-mingw32-gcc (GCC) 9.3-win32 20200320
#       i686-w64-mingw32-gcc: i686-w64-mingw32-gcc (GCC) 9.3-win32 20200320
#       wine: wine-5.0 (Ubuntu 5.0-3ubuntu1)
#       Linux kernel: 5.4.0-52-generic
#       python3: Python 3.8.5
#       javac: javac 11.0.8
#       java: openjdk 11.0.8 2020-07-14
#       rustc: rustc 1.43.0
#       cargo: cargo 1.43.0
#       coqc: The Coq Proof Assistant, version 8.11.0 (March 2020) compiled on Mar 5 2020 20:37:30 with OCaml 4.08.1
