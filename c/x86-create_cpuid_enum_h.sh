#!/bin/sh
# Create x86-cpuid_enum.h by parsing cpufeatures.h from Linux:
# /usr/src/linux/arch/x86/include/asm/cpufeatures.h
# https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/cpufeatures.h
# https://www.intel.com/content/dam/develop/external/us/en/documents/architecture-instruction-set-extensions-programming-reference.pdf

CPU_FEATURE_FILE="x86-linux-cpufeatures.h.tmp"
CPU_SCATTERED_FILE="x86-linux-cpu-scattered.c.tmp"

if ! [ -r "$CPU_FEATURE_FILE" -a -r "$CPU_SCATTERED_FILE" ]
then
    echo >&2 "Unable to read $CPU_FEATURE_FILE or $CPU_SCATTERED_FILE"
    echo >&2 "Use 'make update_cpuid' to update x86-cpuid_enum.h"
    exit 1
fi

# Header
cat << EOF
/**
 * This file is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 *
 * NB: designated initializers are a C99 feature so use __extension__ to be
 *   able to compile with -pendantic.
 */

#ifndef CPUID_ENUM_H
#define CPUID_ENUM_H

#include <assert.h>
EOF

# CPUID fields from /usr/src/linux/arch/x86/include/asm/cpufeatures.h
extract_cpuid_features() {
    cat << EOF

/**
 * $3
 */
__extension__ static const char* $2[32] = {
EOF
    sed -n 's/^#define X86_FEATURE_\(\S\+\)\s\+(\s*'$1'\*32+\s*\([0-9]\+\)\s*).*/    [\2] = "\1",/p' < "$CPU_FEATURE_FILE" | tr '[A-Z]' '[a-z]' | sort -t'[' -k2 -n
    echo '};'
}
extract_cpuid_features  0 cpuidstr_1_edx 'cpuid 0x00000001, edx register' | sed 's/"ds"/"dts"/;s/"xmm/"sse/'
extract_cpuid_features  4 cpuidstr_1_ecx 'cpuid 0x00000001, ecx register' | sed 's/"xmm/"sse/'
extract_cpuid_features 14 cpuidstr_6_eax 'cpuid 0x00000006, eax register (Thermal and Power Management Features)'
extract_cpuid_features  9 cpuidstr_7_ebx 'cpuid 0x00000007:0, ebx register'
extract_cpuid_features 16 cpuidstr_7_ecx 'cpuid 0x00000007:0, ecx register'
extract_cpuid_features 18 cpuidstr_7_edx 'cpuid 0x00000007:0, edx register'
extract_cpuid_features 12 cpuidstr_7_1_eax 'cpuid 0x00000007:1, eax register'
extract_cpuid_features  1 cpuidstr_ext1_edx 'cpuid 0x80000001, edx register'
extract_cpuid_features  6 cpuidstr_ext1_ecx 'cpuid 0x80000001, ecx register'

# CPUID fields from /usr/src/linux/arch/x86/kernel/cpu/scattered.c
extract_cpuid_scat_features() {
    local CPUIDNUM
    CPUIDNUM=$(echo "$1" | sed 's/0x8000000/ext/;s/0x0000000//')
    REG_NAME_UP=$(echo "$2" | tr '[a-z]' '[A-Z]')
    cat << EOF

/**
 * cpuid $1, $2 register
 */
__extension__ static const char* cpuidstr_${CPUIDNUM}_$2[32] = {
EOF
    sed -n 's/^\t*{ X86_FEATURE_\(\S\+\),\s*CPUID_'"$REG_NAME_UP"',\s*\([0-9]\+\),\s*'"$1"',.*/    [\2] = "\1",/p' < "$CPU_SCATTERED_FILE" | tr '[A-Z]' '[a-z]'
    echo '};'
}
extract_cpuid_scat_features 0x00000006 ecx
extract_cpuid_scat_features 0x80000007 edx

# Fix things up
cat << EOF

static void add_manual_cpuid_str(void)
{
    /* From Intel documentation */
    assert(cpuidstr_6_eax[5] == NULL);
    cpuidstr_6_eax[5] = "emcd"; /* Clock modulation duty cycle extension */
    assert(cpuidstr_6_eax[13] == NULL);
    cpuidstr_6_eax[13] = "hdc";
    assert(cpuidstr_7_ebx[22] == NULL);
    cpuidstr_7_ebx[22] = "pcommit"; /* Deprecated pcommit instruction, Linux commit fd1d961dd681 ("x86/insn: remove pcommit") */
    assert(cpuidstr_7_edx[5] == NULL);
    cpuidstr_7_edx[5] = "uintr"; /* user interrupts */

    /* documented in /usr/src/linux/arch/x86/kernel/cpu/{amd.c,intel.c}
     * and also /usr/src/linux/tools/power/x86/turbostat/turbostat.c
     */
    assert(cpuidstr_ext7_edx[8] == NULL);
    cpuidstr_ext7_edx[8] = "constant_tsc";

    /* Documented in
     * https://cdrdv2-public.intel.com/779982/346446-flexible-return-and-event-delivery.pdf
     * Flexible Return and Event Delivery (FRED)
     */
    assert(cpuidstr_7_1_eax[17] == NULL);
    cpuidstr_7_1_eax[17] = "fred";
}
EOF

# Footer
cat << EOF

#endif
EOF
