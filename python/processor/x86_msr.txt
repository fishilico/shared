# List of x86 Model-Specific Registers (MSR)
# https://en.wikipedia.org/wiki/Model-specific_register
#
# The main reference for Intel processors is Intel Software Developer's Manual
# (SDM) Volume 4 "Model-Specific Registers"
# https://www.intel.com/content/dam/develop/external/us/en/documents/335592-sdm-vol-4.pdf
# It defines "architectural MSRs" as existing for a long time, prefixed by "IA32_"
# This reference is abbreviated "Intel-SDM-Vol4" here.
#
# An older version of this document (September 2013, 252046-040) is available on
# https://www.ti.uni-bielefeld.de/html/teaching/WS1920/techinf1/64-ia-32-architectures-software-developers-manual.pdf
# This reference is abbreviated "Intel-SDM-252046-040" here
#
# The main reference for AMD64 processors is AMD64 Architecture Programmer's
# Manual Volume 2: System Programming, Appendix A MSR Cross-Reference
# https://www.amd.com/system/files/TechDocs/24593.pdf
# (Publication 24593 revision 3.40, January 2023)
# This reference is abbreviated "AMD64-Vol2" here
#
# An older reference for AMD processors is Processor Programming Reference (PPR)
# for AMD Family 17h Model 01h, Revision B1 Processors
# https://developer.amd.com/wordpress/media/2017/11/54945_PPR_Family_17h_Models_00h-0Fh.pdf
# (Publication 54945 revision 1.14, April 2017)
# This reference is abbreviated "AMD-2017" here
#
# An older reference for AMD processors is BIOS and Kernel Developer's Guide (BKDG)
# for AMD Family 15h Models 00h-0Fh Processors
# https://www.amd.com/system/files/TechDocs/42301_15h_Mod_00h-0Fh_BKDG.pdf
# (Publication 42301 revision 3.14, January 2013)
# This reference is abbreviated "AMD-2013" here
#
# An older reference for AMD processors is BIOS and Kernel Developer's Guide (BKDG)
# for AMD NPT Family 0Fh Processors
# https://www.amd.com/system/files/TechDocs/32559.pdf
# (Publication 32559 revision 3.08, July 2007)
# This reference is abbreviated "AMD-2007" here
#
# An older reference for AMD processors is AMD-K6-2E+ Embedded Processor Data Sheet
# https://www.amd.com/system/files/TechDocs/23542a.pdf
# (Publication 23542 revision A, September 2000)
# This reference is abbreviated "AMD-K6" here even though it is a AMD-K6-2E+
#
# MSRs are documented in:
# - BIOS bits: https://github.com/biosbits/bits/tree/master/python (in each Python file)
# - Chipsec: https://github.com/chipsec/chipsec/tree/main/chipsec/cfg (with register tags)
# - Coreboot: https://github.com/coreboot/coreboot/blob/master/src/include/cpu/x86/msr.h
#   and many other files such as https://github.com/coreboot/coreboot/blob/master/src/include/cpu/intel/msr.h
# - EDK II: https://github.com/tianocore/edk2/tree/master/MdePkg/Include/Register
#   and UefiCpuPkg/Include/Register/ArchitecturalMsr.h
# - Firecracker: https://github.com/firecracker-microvm/firecracker/blob/main/src/arch_gen/src/x86/msr_index.rs
# - Linux kernel: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h
#   used in https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/tools/perf/trace/beauty/tracepoints/x86_msr.sh
# - Perfmon from Intel: https://github.com/intel/perfmon/blob/main/secure-pmu-access-1.01.csv
# - QEMU: https://gitlab.com/qemu-project/qemu/-/blob/master/target/i386/cpu.h
# - Rowhammer: https://github.com/CMU-SAFARI/rowhammer/blob/master/src/msr.h
# - U-Boot: https://source.denx.de/u-boot/u-boot/-/blob/master/arch/x86/include/asm/msr-index.h
# - x86 module in Rust: https://docs.rs/x86/0.52.0/src/x86/msr.rs.html
# - XEN: https://github.com/xen-project/xen/blob/master/xen/arch/x86/include/asm/msr-index.h

# Intel-SDM-Vol4 See Section 16.10.2, "Pentium Processor Machine-Check Exception Handling."
0x0 IA32_P5_MC_ADDR
0x1 IA32_P5_MC_TYPE

AMDK6 0x0 MCAR # AMD-K6 Machine Check Address Register
AMDK6 0x1 MCTR # AMD-K6 Machine Check Type Register

# http://datasheets.chipdb.org/IDT/x86/C6/c6_data_sheet.pdf IDT WinChip C6 Processor
IDT 0x2 TR1        # Test Register 1
IDT 0xE TR12       # Test Register 12 (also in AMD-K6)
IDT 0x11 EC_CTRL   # Event Counter Control
IDT 0x12 EC0       # Event Counter 0
IDT 0x13 EC1       # Event Counter 1
# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h?h=v6.1 Centaur-Hauls/IDT defined MSRs
IDT 0x107 FCR1     # Feature Control Reg 1
IDT 0x108 FCR2     # Feature Control Reg 2
IDT 0x109 FCR3     # Feature Control Reg 3
IDT 0x10A FCR4     # Feature Control Reg 4
IDT 0x110 MCR0     # Memory Configuration Register
IDT 0x111 MCR1     # Memory Configuration Register
IDT 0x112 MCR2     # Memory Configuration Register
IDT 0x113 MCR3     # Memory Configuration Register
IDT 0x114 MCR4     # Memory Configuration Register
IDT 0x115 MCR5     # Memory Configuration Register
IDT 0x116 MCR6     # Memory Configuration Register
IDT 0x117 MCR7     # Memory Configuration Register
IDT 0x120 MCR_CTRL # Memory Configuration Register

# Intel-SDM-Vol4 See Section 9.10.5, "Monitor/Mwait Address Range Determination."
0x6 IA32_MONITOR_FILTER_SIZE
PENTIUM4 0x6 IA32_MONITOR_FILTER_LINE_SIZE # Intel-SDM-Vol4 (Pentium 4 and Xeon)

# Intel-SDM-Vol4 See Section 18.17, "Time-Stamp Counter."
0x10 IA32_TIME_STAMP_COUNTER

# Intel-SDM-Vol4 (Pentium)
PENTIUM 0x10 TSC  # See Section 18.17, "Time-Stamp Counter."
PENTIUM 0x11 CESR # See Section 20.6.9.1, "Control and Event Select Register (CESR)."
PENTIUM 0x12 CTR0 # Section 20.6.9.3, "Events Counted."
PENTIUM 0x13 CTR1 # Section 20.6.9.3, "Events Counted."

0x17 IA32_PLATFORM_ID # Intel-SDM-Vol4 Platform ID

0x1B IA32_APIC_BASE # Intel-SDM-Vol4 APIC base address

# https://cdrdv2-public.intel.com/315168/315168_TXT_MLE_Development%20Guide_rev_017_3.pdf Intel Trusted Execution Technology (Intel TXT) Software Development Guide (315168-017 Revision 017.3, March 2022) "Actual Public Key Hash is typically available in CPU MSRs 0x20...0x23"
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h defines MSR_ACM_CPU_KEY_HASH_{0,1,2,3}
0x20 ACM_SIGNER_PUBLICKEY_HASH_0
0x21 ACM_SIGNER_PUBLICKEY_HASH_1
0x22 ACM_SIGNER_PUBLICKEY_HASH_2
0x23 ACM_SIGNER_PUBLICKEY_HASH_3

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h?h=v6.1 in MSR_KNC namespace (Knights Corner, ancestor of Xeon Phi)
XEONKNC 0x20 PERFCTR0
XEONKNC 0x21 PERFCTR1
XEONKNC 0x28 EVNTSEL0
XEONKNC 0x29 EVNTSEL1

# Intel-SDM-Vol4 (Core 2, Atom, Silvermont) Processor Hard Power-On Configuration
0x2A EBL_CR_POWERON

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
0x2B THREAD_SMI_ERR_INJ_CONTROL # Enhanced MCA Thread error injection control
0x2C CORE_SMI_ERR_INJ_CONTROL   # Enhanced MCA Core error injection control
0x2D UNCORE_SMI_ERR_INJ_CONTROL # Enhanced MCA Uncore error injection control

PENTIUM4 0x2A EBC_HARD_POWERON # Intel-SDM-Vol4 (Pentium 4 and Xeon) Processor Hard Power-On Configuration
PENTIUM4 0x2B EBC_SOFT_POWERON # Intel-SDM-Vol4 (Pentium 4 and Xeon) Processor Soft Power-On Configuration

# Intel-SDM-Vol4 (Pentium 4) Processor Frequency Configuration
PENTIUM4 0x2C EBC_FREQUENCY_ID

# https://github.com/jmpoep/ElkhartLake_Silicon_reference_and_Platform_Sample_Code/blob/b0149682f932de6bb88199814f9885abcdb97579/Intel/ClientOneSiliconPkg/Include/Library/SocketLga1156Lib.h Socket LGA1156 and LGA1366 based MSR definitions
LGA1156 0x2D CHL_CONTROLS

# https://review.coreboot.org/c/coreboot/+/51796/14/src/include/cpu/intel/msr.h#10
# https://source.denx.de/u-boot/u-boot/-/blob/v2022.10/arch/x86/include/asm/msr-index.h
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
0x2E PIC_MSG_CONTROL # Register for bit PLATFORM_INFO_SET_TDP = 1 << 29 and "Enable APIC TPR updates" = ~(1 << 10). MSR used to control APIC TPR Update messages from the processor's Local APIC.

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
0x31 DCU_MODE_CONTROL # MSR used to select the mode for the Data Cache Unit (DCU). This MSR is only available when more than one DCU Mode is selectable and is only intended for use in early BIOS before the first transition of the CR0.CD from 1 to 0.

# Intel-SDM-Vol4 (P6 Family Processors) Test Control Register
P6 0x33 TEST_CTL

# Intel-SDM-Vol4 (12th and 13th Generation Intel Core Processors) Memory Control Register
CORE12 0x33 MEMORY_CTRL # Memory Control Register

# Intel-SDM-Vol4 (1st Gen Core, Nehalem Microarchitecture) SMI Counter
# https://github.com/intel/perfmon/blob/16447cf3a2bfb0ed2a3c4649878baaefa9b3b332/secure-pmu-access-1.01.csv
CORE1 0x34 SMI_COUNT  # Count System Management Interrupts

# Intel-SDM-Vol4 (4th Gen Core, Haswell Microarchitecture)
# Intel-SDM-Vol4 (Xeon Processor E5 v3)
XEONE5V3 0x35 CORE_THREAD_COUNT # Configured State of Enabled Processor Core Count and Logical Processor Count

# https://github.com/biosbits/bits/blob/bits-2079/python/cpu_gen.py
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x39 SOCKET_ID # The SOCKET_ID MSR is used to reassign the package-specific portions of the APIC ID. This MSR is intended only to be used on scalable DP and high-end MP platforms to resolve legacy-mode APIC ID conflicts

# Bit 3 named IA32_SMRR_ENABLE_BIT in https://github.com/killvxk/LoginDemo/blob/859b3d842c61b130b6ec115373447650759aee9a/ServerCommonPkg/TXT/GetSec/Dxe/Common/x64/txt.inc#L80
# Bit 11 named B_EFI_MSR_IA32_FEATURE_CONTROL_D3ST in https://github.com/killvxk/LoginDemo/blob/859b3d842c61b130b6ec115373447650759aee9a/ServerCommonPkg/Include/CpuRegs.h#L113
0x3A IA32_FEATURE_CONTROL # Intel-SDM-Vol4 Control Features in Intel 64 Processor (bit 0 is Lock ; bit 1 is Enable VMX inside SMX operation : bit 2 is Enable VMX outside SMX operation ; bit 3 is Enable SMRR ; bit 11 is D3ST ; bits 0x7f00 is SENTER Local Functions Enable ; bit 15 is SENTER Global Enable ; bit 17 is SGX Launch Control Enable ; bit 18 is SGX Global Enable ; bit 20 is "LMCE" Turn Local Machine Check On)

0x3B IA32_TSC_ADJUST # Intel-SDM-Vol4 Per Logical Processor TSC Adjust

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ClientOneSiliconPkg/Cpu/Include/Register/CommonhMsr.h
XEONSCAL4 0x3E SMM_SAVE_CONTROL # Contains bits that determine what additional state SMI/RSM must save and restore FSCP Crunch - 1:32

# https://github.com/chipsec/chipsec/blob/1.10.0/chipsec/cfg/8086/qrk.xml
QUARK 0x40 MTRRCAP # MTRR Capabilities

# Intel-SDM-Vol4 (Intel Core Solo and Duo) Last Branch Record 0
CORESOLO 0x40 LASTBRANCH_0
CORESOLO 0x41 LASTBRANCH_1
CORESOLO 0x42 LASTBRANCH_2
CORESOLO 0x43 LASTBRANCH_3
CORESOLO 0x44 LASTBRANCH_4
CORESOLO 0x45 LASTBRANCH_5
CORESOLO 0x46 LASTBRANCH_6
CORESOLO 0x47 LASTBRANCH_7

# Intel-SDM-Vol4 (Intel Core Microarchitecture) Last Branch Record 0 From IP
0x40 LASTBRANCH_0_FROM_IP
0x41 LASTBRANCH_1_FROM_IP
0x42 LASTBRANCH_2_FROM_IP
0x43 LASTBRANCH_3_FROM_IP
0x44 LASTBRANCH_4_FROM_IP
0x45 LASTBRANCH_5_FROM_IP
0x46 LASTBRANCH_6_FROM_IP
0x47 LASTBRANCH_7_FROM_IP

# https://www.intel.com/content/www/us/en/developer/articles/technical/software-security-guidance/technical-documentation/cpuid-enumeration-and-architectural-msrs.html
# IBRS = Indirect Branch Restricted Speculation
# STIBP = Single Thread Indirect Branch Predictors
# SSBD = Speculative Store Bypass Disable
# PSFD = disable Fast Store Forwarding Predictor
0x48 IA32_SPEC_CTRL # Intel-SDM-Vol4 Speculation Control (bit 0 is IBRS, bit 1 is STIBP, bit 2 is SSBD, bit 3 is IPRED_DIS_U, bit 4 is IPRED_DIS_S, bit 5 is RRSBA_DIS_U, bit 6 is RRSBA_DIS_S, bit 7 is PSFD, bit 8 is DDPD_U, bit 10 is BHI_DIS_S)
# IBPB = Indirect Branch Prediction Barrier
# SBPB = Selective Branch Prediction Barrier
0x49 IA32_PRED_CMD  # Intel-SDM-Vol4 Prediction Command (bit 0 is IBPB, bit 7 is SBPB)
0x4E IA32_PPIN_CTL  # Intel-SDM-Vol4 Protected Processor Inventory Number Enable Control
0x4F IA32_PPIN      # Intel-SDM-Vol4 Protected Processor Inventory Number

# https://github.com/jmpoep/ElkhartLake_Silicon_reference_and_Platform_Sample_Code/blob/b0149682f932de6bb88199814f9885abcdb97579/Intel/ClientOneSiliconPkg/Include/Library/SocketLga1156Lib.h Socket LGA1156 and LGA1366 based MSR definitions
LGA1156 0x4B VLW_CONTROL

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
0x50 QUIESCE_CTL1 # MSR that is used to initiate quiesce and unquiesce of CSI links
0x51 QUIESCE_CTL2 # MSR that is used for PSMI handshake before initiating a RAS quiesce
0x52 CLOAKING     # Cloaking error Virtual MSR in core Creg PLA

# Intel-SDM-Vol4 (Xeon Processor E5 v3)
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/SprMsr.h defines it as SPR_MSR_THD_LOGICAL_ID
XEONE5V3 0x53 THREAD_ID_INFO # A Hardware Assigned ID for the Logical Processor

# https://github.com/jmpoep/ElkhartLake_Silicon_reference_and_Platform_Sample_Code/blob/b0149682f932de6bb88199814f9885abcdb97579/Intel/ClientOneSiliconPkg/Include/Library/SocketLga1156Lib.h Socket LGA1156 and LGA1366 based MSR definitions
LGA1156 0x54 PECI_DNSTRM_WRITE_EN

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/SprMsr.h
XEONSCAL4 0x56 ADR_CACHE_FLUSH # new MSR to flush caches

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
0x57 SMM_CLEAR_SMI   # Clear SMI (bit 0). Bit 1 to enable MSMI to MCE morphing
0x58 SMM_CFG_OPTIONS # This MSR reads/writes bit 0 in smm_cfg_options fscp
0x5E THERM_EVENT_FFM # This register provides support for the Firmware-First-Mode thermal interrupt feature.

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x60 SUPPRESS_SHUTDOWN # Shutdown suppression feature
XEONSCAL4 0x61 MCA_ON_NONNEM_CACHABLEMMIO_EN # This MSR reads/writes CBO_CR_CBO_COH_CONFIG[0]

# Intel-SDM-Vol4 (Intel Core Microarchitecture) Last Branch Record 0 To IP
0x60 LASTBRANCH_0_TO_IP
0x61 LASTBRANCH_1_TO_IP
0x62 LASTBRANCH_2_TO_IP
0x63 LASTBRANCH_3_TO_IP
0x64 LASTBRANCH_4_TO_IP
0x65 LASTBRANCH_5_TO_IP
0x66 LASTBRANCH_6_TO_IP
0x67 LASTBRANCH_7_TO_IP

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ClientOneSiliconPkg/Cpu/Include/Register/CommonhMsr.h
XEONSCAL4 0x62 ACE_SPI_COMMAND  # command reg in ACE IP
XEONSCAL4 0x63 ACE_SPI_DATA     # command reg in ACE IP
XEONSCAL4 0x64 ACE_SPI_STATUS   # status reg in ACE IP
XEONSCAL4 0x65 ACE_SPI_CONFIG   # config reg in ACE IP
XEONSCAL4 0x66 PFR_EXIT         # Used to exit out of PFR VCM. Write only command MSR. Read will #GP
XEONSCAL4 0x67 PFR_VCM_PROVISION # MSR to provision VCM key hash to CPU
XEONSCAL4 0x68 PFR_VCM_PROVISION_STATUS # MSR to read PFR provision status

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/SprMsr.h
XEONSCAL4 0x69 IIO_ERRPINSTS    # Holds the error pin status

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/GnrMsr.h
XEONSCAL4 0x6B PROBE_MODE_OCCURRED # Probe Mode Occurred Value

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/SprMsr.h
XEONSCAL4 0x6C PREF_TUNING      # Register to tune HL configuration
XEONSCAL4 0x6D FEATURE_TUNING_1 # Register to tune HL configuration

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
0x6E QOS_2LM_CONFIG1 # Contains Leakybkt counter Sat value and time window cntr value
0x6F QOS_2LM_CONFIG5 # Contains Remote Leakybkt counter Sat value and time window counter value

# https://twitter.com/_markel___/status/1578749396547932160 2022-10 Alder Lake
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
0x70 PROBE_TO_FROM_PDR  # Probe mode MSR used to move data from/to PDR
0x71 PROBE_GP_REG       # Probe mode MSR used for copying EDX, EAX, EFLAGS, ST0 and the SMMEM bit to/from the scratch pad
0x72 PROBE_SEG_REG_1    # Probe mode MSR used for copying SS, CS, ES, LDTR, and GDTR to the scratch pad for probe mode.
0x73 PROBE_PL_REG       # Probe mode MSR added in SKL i1350201 that on RD/WRMSR does the following operations: R16/R17 to/from CTAP_CR_PROBE_MODE_DR/FSCP_CR_REGISTER_1 ; BND_STATUS to/from FSCP_CR_REGISTER_2 ; BNDCFG3_BASE_FIELD to/from FSCP_CR_REGISTER_3
0x74 PROBE_MMX2_REG     # Probe mode MSR used for copying XMM0 and MXCSR to the scratch pad for probe mode.
0x75 PROBE_SEG_REG_3    # Probe mode MSR used for copying shadow copies of ES, DS, FS, and GS to the scratch pad for probe mode.
0x76 PROBE_LT_SPC_CYC   # Probe mode MSR Register used for issuing Special Cycles to the LT chipset.
0x77 PROBE_CHANGE_PG    # Probe mode MSR used for changing CR0.PG to the value specified in bit 31 of EAX. It allows ITP (In Target Probe) to transition into and back out of Pseudo-64-bit mode (Long Mode, but with paging turned off).

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ClientOneSiliconPkg/Cpu/Include/Register/ArchMsr.h
0x78 BIOS_DYNAMIC_UPDATE_PTR # This is a read only BIOS MSR to return the dynamic update (aka push patch) pointer stored in the PCH

# Intel-SDM-Vol4 BIOS Update Trigger (to trigger the load of a microcode update)
0x79 IA32_BIOS_UPDT_TRIG

# https://github.com/coreboot/coreboot/blob/4.18/src/soc/intel/common/block/include/intelblocks/msr.h
0x7A BIOS_UPGD_TRIG

# https://github.com/jmpoep/ElkhartLake_Silicon_reference_and_Platform_Sample_Code/blob/b0149682f932de6bb88199814f9885abcdb97579/Intel/ClientOneSiliconPkg/IpBlock/MemoryInit/Tgl/MiniBios/Common/CpuRegs.h for Tiger Lake (11th gen Core)
CORE11 0x7A IA32_BIOS_ENBL_XU

# https://cdrdv2-public.intel.com/782715/356111-ucode-update.pdf Runtime Microcode Update (June 2023, 356111-001US)
0x7B IA32_MCU_ENUMERATION   # information about the microcode update capabilities of the processor
0x7C IA32_MCU_STATUS        # status information for the most recent attempt to load a microcode update

# https://twitter.com/_markel___/status/1578749396547932160 2022-10 Alder Lake
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
0x7D SE_RDINFO_CMD # Allows Probe Mode ITP (In Target Probe) software to access relevant information located in the SECS and EPCM that is not accessible using EDBGRD instruction
0x7E EINIT_FAIL_CTR

# Intel-SDM-Vol4 (7th and 8th Generation Intel Core Processors)
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h defines MSR_NPK_STH_ACPIBAR_BASE
CORE7 0x80 TRACE_HUB_STH_ACPIBAR_BASE  # This register is used by BIOS to program Trace Hub (NPK) STH base address that will be used by AET (Architectural Event Trace) messages

# https://twitter.com/_markel___/status/1578690635539677184 2022-10 "MSRs, for the newest CPU"
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
0x81 FME_ACTIVATE       # Rd/Wr register to generate or restore Far Memory Keys

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/ArchMsr.h
0x82 FZM_RANGE_INDEX        # FZM Range Index register to R/W Domain|Index
0x83 FZM_DOMAIN_CONFIG      # FZM Domain ConfigValue Read Only
0x84 FZM_RANGE_STARTADDR    # FZM Domain Start Address - Ready Only
0x85 FZM_RANGE_ENDADDR      # FZM Domain End Address - Ready Only
0x86 FZM_RANGE_WRITESTATUS  # FZM Domain Write Status - Ready Only

# https://www.intel.com/content/dam/develop/external/us/en/documents/intel-tdx-cpu-architectural-specification.pdf Intel Trust Domain CPU Architectural Extensions
0x87 IA32_MKTME_KEYID_PARTITIONING # Multi-Key Total Memory Encryption (MKTME) KeyID Partitioning Enumeration

# Intel-SDM-Vol4 (P6 Family Processors) Chunk 0 data register D[63:0]: used to write to and read from the L2
P6 0x88 BBL_CR_D0
P6 0x89 BBL_CR_D1
P6 0x8A BBL_CR_D2
P6 0x8B BBL_CR_D3

# Intel-SDM-Vol4 BIOS Update Signature
0x8B IA32_BIOS_SIGN_ID

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h?h=v6.1
AMD64 0x8B PATCH_LEVEL

# Intel-SDM-Vol4 SHA256 digest of the SIGSTRUCT.MODULUS for SGX Launch Enclave. Launch Enclave Provider signing key hash
0x8C IA32_SGXLEPUBKEYHASH0
0x8D IA32_SGXLEPUBKEYHASH1
0x8E IA32_SGXLEPUBKEYHASH2
0x8F IA32_SGXLEPUBKEYHASH3

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/SprMsr.h
XEONSCAL4 0x90 TIO_DEBUG_STATUS # emulated by xucode --> cause pppe exit, described in SNC HSD 1304290485 - HCTIO/SoftCE: SoftCE ISA support  and in SNC HSD 1304428988 - HCTIO/SoftCE: uArch support for TIO_DEBUG_STATUS MSRs
# https://twitter.com/_markel___/status/1578690635539677184 2022-10 "MSRs, for the newest CPU" (related to xucode)
XEONSCAL4 0x91 TIO_UNWRAP
XEONSCAL4 0x92 TIO_PRM_CLEANUP
XEONSCAL4 0x93 TIO_COPY_ENCRYPT
XEONSCAL4 0x95 ENABLE_DISABLE_CACHE_QOS # Used to enable or disable cache QoS
XEONSCAL4 0x96 TIORR_PHYSBASE # Address Match Range Register - Physical Mask Control Register
XEONSCAL4 0x97 TIORR_PHYSMASK # Address Match Range Register - Physical Mask Control Register

# https://www.intel.com/content/dam/develop/external/us/en/documents-tps/intel-tdx-cpu-architectural-specification.pdf Intel Trust Domain CPU Architectural Extensions (May 2021, 343754-002US) cache management interface to SEAM (Secure Arbitration Mode) VMX root operation
# https://kib.kiev.ua/x86docs/Intel/TDX/348551-001.pdf Intel Trust Domain Extensions (Intel TDX) Module Architecture Application Binary Interface (ABI) Reference Specification (September 2021, 348551-001US)
# https://cdrdv2-public.intel.com/733568/tdx-module-1.0-public-spec-344425004.pdf Architecture Specification: Intel Trust Domain Extensions (Intel TDX) Module (June 2022, 344425-004US)
0x98 WBINVDP    # SEAM Write-Back and Invalidate cache sub-blocks. Virtual MSR to perform partial WBINVD
0x99 WBNOINVDP  # SEAM Write-Back cache sub-blocks. Virtual MSR to perform partial WBINVD

# https://www.intel.com/content/dam/develop/external/us/en/documents/intel-tdx-cpu-architectural-specification.pdf Intel Trust Domain CPU Architectural Extensions defines an incorrect value 0x981 for MSR INTR_PENDING
# https://kib.kiev.ua/x86docs/Intel/TDX/348551-001.pdf Intel Trust Domain Extensions (Intel TDX) Module Architecture Application Binary Interface (ABI) Reference Specification defines the correct one
# https://cdrdv2-public.intel.com/733568/tdx-module-1.0-public-spec-344425004.pdf Architecture Specification: Intel Trust Domain Extensions (Intel TDX) Module (June 2022, 344425-004US)
0x9A INTR_PENDING # Determine if there are pending interrupts or events

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h defines MSR_VMX_MSEG_BASE
0x9B IA32_SMM_MONITOR_CTL # Intel-SDM-Vol4 SMM Monitor Configuration

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
0x9D SMM_PROT_MODE_BASE   # SMM Protected Mode Base MSR

0x9E IA32_SMBASE          # Intel-SDM-Vol4 Base address of the logical processor's SMRAM image

# Intel-SDM-Vol4 (Intel Core Microarchitecture)
0xA0 SMRR_PHYSBASE # System Management Mode Base Address register
0xA1 SMRR_PHYSMASK # System Management Mode Base Mask register

# Intel-SDM-Vol4 (10th Generation Intel Core)
CORE10 0xA0 BIOS_MCU_ERRORCODE
CORE10 0xA5 FIT_BIOS_ERROR     # BIOS Firmware Table error code

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0xA0 SGX_MCU_ERRORCODE # MSR to expose the MCHECK error code to BIOS
XEONSCAL4 0xA1 PRID_0_0          # SGX PRID values
XEONSCAL4 0xA2 PRID_1_1          # SGX PRID values
XEONSCAL4 0xA3 SGX_RAS           # MSR to opt in to SGX (bit 0) and opt out of advanced RAS features
XEONSCAL4 0xA4 BIOS_PKG_CONFIG   # SGX QoS MSR
XEONSCAL4 0xA5 FIT_BIOS_ERROR    # FIT BIOS and ACM error type and code
XEONSCAL4 0xA6 MPX_FUSE_OVERRIDE # Override MPX Fuse
XEONSCAL4 0xAF BIOS_AVX_DIS      # Virtual MSR to disable AVX instructions from BIOS

# Intel-SDM-Vol4 (11th Generation Intel Core)
CORE11 0xA7 BIOS_DEBUG

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0xB0 VMSR_U2P_0_0     # vMSRs for power mgmt
XEONSCAL4 0xB1 VMSR_U2P_1_1     # vMSRs for power mgmt
XEONSCAL4 0xB2 VMSR_U2P_2_2     # vMSRs for power mgmt
XEONSCAL4 0xB3 VMSR_U2P_3_3     # vMSRs for power mgmt

0xBC IA32_MISC_PACKAGE_CTLS     # Intel-SDM-Vol4 Power Filtering Control

# https://www.intel.com/content/www/us/en/developer/articles/technical/software-security-guidance/technical-documentation/cpuid-enumeration-and-architectural-msrs.html
0xBD IA32_XAPIC_DISABLE_STATUS  # Intel-SDM-Vol4 xAPIC Disable Status

# Intel-SDM-Vol4 General Performance Counter 0
# https://github.com/intel/perfmon/blob/16447cf3a2bfb0ed2a3c4649878baaefa9b3b332/secure-pmu-access-1.01.csv
0xC1 IA32_PMC0  # Value of counter 0
0xC2 IA32_PMC1  # Value of counter 1
0xC3 IA32_PMC2  # Value of counter 2
0xC4 IA32_PMC3  # Value of counter 3
0xC5 IA32_PMC4  # Value of counter 4
0xC6 IA32_PMC5  # Value of counter 5
0xC7 IA32_PMC6  # Value of counter 6
0xC8 IA32_PMC7  # Value of counter 7

0xCD FSB_FREQ # Intel-SDM-Vol4 (Intel Core Microarchitecture) Scalable Bus Speed

# https://github.com/coreboot/coreboot/blob/4.18/src/soc/intel/braswell/include/soc/msr.h
ATOMBRASWELL 0xCD BSEL_CR_OVERCLOCK_CONTROL

# Intel-SDM-Vol4 (1st Gen Core, Nehalem Microarchitecture)
CORE1 0xCE PLATFORM_INFO # Platform Information

# Intel-SDM-Vol4 IA32 Core Capabilities Register
0xCF IA32_CORE_CAPABILITIES

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0xD0 SSKU_DATA        # SoftSKU data MSR
XEONSCAL4 0xD1 SSKU_CMD         # SoftSKU cmd MSR
XEONSCAL4 0xD2 SSKU_SMM_ADDR    # SoftSKU SMM access to LB regs
XEONSCAL4 0xD3 SSKU_SMM_DATA    # SoftSKU SMM access to LB regs
XEONSCAL4 0xD4 SSKU_ENFORCE     # SoftSKU enforcement MSR

# Intel-SDM-Vol4 UMWAIT Control
0xE1 IA32_UMWAIT_CONTROL

# Intel-SDM-Vol4 (1st Gen Core, Nehalem Microarchitecture)
CORE1 0xE2 PKG_CST_CONFIG_CONTROL # C-State Configuration Control
CORE1 0xE4 PMG_IO_CAPTURE_BASE    # Power Management IO Redirection in C-state

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0xE2 CLOCK_CST_CONFIG_CONTROL # C-State Configuration register

# https://github.com/coreboot/coreboot/blob/4.18/src/include/cpu/intel/speedstep.h
0xE3 PMG_IO_BASE_ADDR

0xE7 IA32_MPERF  # Intel-SDM-Vol4 TSC Frequency Clock Counter (Maximum Performance Frequency Clock Count)
0xE8 IA32_APERF  # Intel-SDM-Vol4 Actual Performance Clock Counter

# https://github.com/coreboot/coreboot/blob/4.18/src/include/cpu/intel/speedstep.h
0xEE EXTENDED_CONFIG

# Intel-SDM-Vol4 (4th Generation Intel Xeon Scalable Processor Family)
XEONSCAL4 0xED RAR_CONTROL            # RAR Control
XEONSCAL4 0xEE RAR_ACTION_VECTOR_BASE # Pointer to RAR Action Vector
XEONSCAL4 0xEF RAR_PAYLOAD_TABLE_BASE # Pointer to Base of RAR Payload Table
XEONSCAL4 0xF0 RAR_INFO               # Read Only RAR Information

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0xF1 RAR_TIMER_CONFIG       # Control for RAR UC load timeout
XEONSCAL4 0x101 PROBE_CPL                       # Probe mode MSR used to modify CPL
XEONSCAL4 0x102 PAIR_WEIGHT_OVERRIDE            # Software PAIR weight override
XEONSCAL4 0x103 PAIR_PKG_THREAD_PARTICIPATION   # Pair package level thread participation
XEONSCAL4 0x104 PAIR_THREAD_PARTICIPATION       # Register to specify a thread's inclusion or exclusion in Power Aware Interrupt Routing

# Intel-SDM-Vol4 (4th Generation Intel Xeon Scalable Processor Family)
XEONSCAL4 0x105 CORE_BIST # Controls Array PBIST triggered from ucode as part of FUSA

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x106 CORE_ARRAY_ERROR_INJECTION # Controls error injections to FUSA BIST Arrays
XEONSCAL4 0x107 PERRINJ_AT_IP              # Specified IDI Parity Error Injection SRC Agent
XEONSCAL4 0x108 PERRINJ_CTRL               # Control Parity Error Injection
XEONSCAL4 0x10B DCU_FLUSH_CMD              # Write-only virtual MSR to activate DCU flush command

0xFE IA32_MTRRCAP            # Intel-SDM-Vol4 MTRR Capability

# https://www.intel.com/content/www/us/en/developer/articles/technical/software-security-guidance/technical-documentation/cpuid-enumeration-and-architectural-msrs.html
# RDCL = Rogue Data Cache Load
# IBRS = Indirect Branch Restriction Speculation
# RSBA = Return Stack Buffer Alternate
# SSB = Speculative Store Bypass
# MDS = Microarchitectural Data Sampling
# TSX = Transactional Synchronization Extensions
# TAA = TSX Asynchronous Abort
# DOITM = Data Operand Independent Timing Mode
# SBDR = Shared Buffers Data Read
# SSDP = Sideband Stale Data Propagator
# FBSDP = Fill Buffer Stale Data Propagator
# PSDP = Primary Stale Data Propagator
# PBRSB = Post-Barrier Return Stack Buffer Prediction
0x10A IA32_ARCH_CAPABILITIES # Intel-SDM-Vol4 Enumeration of Architectural Features (bit 0 is RDCL_NO, bit 1 is IBRS_ALL, bit 2 is RSBA, bit 3 is SKIP_L1DFL_VMENTRY, bit 4 is SSB_NO, bit 5 is MDS_NO, bit 6 is IF_PSCHANGE_MC_NO, bit 7 is TSX_CTRL, bit 8 is TAA_NO, bit 10 is MISC_PACKAGE_CTRLS, bit 11 is ENERGY_FILTERING_CTL, bit 12 is DOITM, bit 13 is SBDR_SSDP_NO, bit 14 is FBSDP_NO, bit 15 is PSDP_NO, bit 16 is for Microcode Update Enumeration and Status, bit 17 is FB_CLEAR, bit 19 is RRSBA, bit 20 is BHI_NO, bit 21 is XAPIC_DISABLE_STATUS, bit 23 is OVERCLOCKING_STATUS, bit 24 is PBRSB_NO, bit 25 is GDS_CTRL, bit 26 is GDS_NO)

# https://www.intel.com/content/www/us/en/developer/articles/technical/software-security-guidance/technical-documentation/cpuid-enumeration-and-architectural-msrs.html
# https://www.intel.com/content/dam/develop/external/us/en/documents/336996-speculative-execution-side-channel-mitigations.pdf
0x10B IA32_FLUSH_CMD         # Intel-SDM-Vol4 Flush Command (bit 0 is L1D_FLUSH)

# https://www.intel.com/content/www/us/en/developer/articles/technical/software-security-guidance/technical-documentation/cpuid-enumeration-and-architectural-msrs.html
0x10F IA32_TSX_FORCE_ABORT   # Intel-SDM-Vol4 TSX Force Abort (bit 0 is RTM_FORCE_ABORT or FORCE_ABORT_RTM, bit 1 is TSX_CPUID_CLEAR, bit 2 is SDV_ENABLE_RTM)

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x110 PLAT_FRMW_PROT_CTRL       # Platform Firmware Control MSR
XEONSCAL4 0x111 PLAT_FRMW_PROT_HASH_0     # Platform Firmware Hash Value 063:000
XEONSCAL4 0x112 PLAT_FRMW_PROT_HASH_1     # Platform Firmware Hash Value 127:064
XEONSCAL4 0x113 PLAT_FRMW_PROT_HASH_2     # Platform Firmware Hash Value 191:128
XEONSCAL4 0x114 PLAT_FRMW_PROT_HASH_3     # Platform Firmware Hash Value 255:192
XEONSCAL4 0x115 PLAT_FRMW_PROT_TRIG_PARAM # This registers contains the 64-bit physical address of the start of the PFAT DIRECTORY
XEONSCAL4 0x116 PLAT_FRMW_PROT_TRIGGER    # This is a Write-Only command MSR. A write triggers the command. A Rd will GP Fault
XEONSCAL4 0x117 PFAT_EC_PASSWORD          # MSR to enable PFAT support on embedded controller discrete flash
XEONSCAL4 0x118 PFAT_GT_SLEEP_CMDSTS      # send to Sleep MSR

# Intel-SDM-Vol4 (P6 Family Processors)
P6 0x116 BBL_CR_ADDR # Address register: used to send specified address (A31-A3) to L2 during cache initialization accesses
P6 0x118 BBL_CR_DECC # Data ECC register D[7:0]: used to write ECC and read ECC to/from L2
P6 0x119 BBL_CR_CTL  # Control register: used to program L2 commands to be issued via cache configuration accesses mechanism
P6 0x11A BBL_CR_TRIG # Trigger register: used to initiate a cache configuration accesses access
P6 0x11B BBL_CR_BUSY # Busy register: indicates when a cache configuration accesses L2 command is in progress
P6 0x11E BBL_CR_CTL3 # Control register 3: used to configure the L2 Cache

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x11F BIOS_INFO_FLAGS # Read bits 23:16 of uncore SCP (storage for this 8b MSR)

# https://github.com/coreboot/coreboot/blob/4.18/src/soc/intel/braswell/include/soc/msr.h
# https://twitter.com/_markel___/status/1747727699798306878 : bit 8 is WBINVAL_DL1, used to flush L1D cache to L2 on Atom processors
ATOMBRASWELL 0x120 POWER_MISC

# https://github.com/coreboot/coreboot/blob/4.18/src/soc/intel/common/block/include/intelblocks/msr.h
0x121 EMULATE_PM_TIMER

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x121 BIOS_UCODE_PM_TMR_EMULATION_CFG # his is a read/write MSR that will control the ucode emulation of the PM_TMR. BIOS will program this register

# https://www.intel.com/content/www/us/en/developer/articles/technical/software-security-guidance/technical-documentation/cpuid-enumeration-and-architectural-msrs.html
0x122 IA32_TSX_CTRL     # Intel-SDM-Vol4 TSX Control (bit 0 is RTM_DISABLE, bit 1 is TSX_CPUID_CLEAR)
# https://www.intel.com/content/www/us/en/developer/articles/technical/software-security-guidance/technical-documentation/gather-data-sampling.html
0x123 IA32_MCU_OPT_CTRL # Intel-SDM-Vol4 Microcode Update Option Control (bit 0 is RNGDS_MITG_DIS, bit 1 is RTM_ALLOW, bit 2 is RTM_LOCKED, bit 3 is FB_CLEAR_DIS, bit 4 is GDS_MITG_DIS, bit 5 is GDS_MITG_LOCK)

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x128 CPU_BUSNUMBER # This RO MSR will be used to read the Ubox CPUBUSNO/CPUBUSNO1/CPUBUSNO_VALID CSRs
XEONSCAL4 0x129 MMCFG_RULE_CFG
XEONSCAL4 0x12A MMCFG_RULE_TARGET_LIST

# From https://github.com/intel/seam-loader/blob/eadff76d36d214419c801f1cee1828ea437c91a5/np-seam-loader/seamldr_src/Core/Include/common.h
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h defines MSR_ANC_BOOT_POLICY_0_0, MSR_ANC_BOOT_POLICY_1_1... "Base addr is 0xFED58000 and reads are consecutive"
0x130 BTG_BOOT_POLICY # BootGuard Boot Policy
0x131 BTG_BP_KEY0
0x132 BTG_BP_KEY1
0x133 BTG_BP_KEY2
0x134 BTG_BP_KEY3
0x135 BTG_BP_KEY4
0x136 BTG_BP_KEY5
0x137 BTG_BP_RSVD3
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h defines MSR_ANC_FORCE_BOOT_POLICY_ENFORCED: Anchor Cove MSR to indicate that the initial boot block is complete, and to re-enable events. Write-only and accessible via the ACM
0x138 BTG_BOOT_STATUS # BootGuard Boot Status

# https://github.com/jmpoep/ElkhartLake_Silicon_reference_and_Platform_Sample_Code/blob/b0149682f932de6bb88199814f9885abcdb97579/Intel/ClientOneSiliconPkg/Include/Library/SocketLga1156Lib.h Socket LGA1156 and LGA1366 based MSR definitions
LGA1156 0x130 CPUID1_FEATURE_MASK
LGA1156 0x131 CPUID80000001_FEATURE_MASK
LGA1156 0x13D PCID_ENABLE_FEATURE

# https://github.com/coreboot/coreboot/blob/4.18/src/include/cpu/intel/msr.h
0x139 BC_PBEC

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x139 ANC_INITIAL_BOOT_BLOCK_COMPLETE # Anchor Cove MSR to tell PCH that the ACM has successfully launched and to stop the deadman timer countdown. Write-only and accessible via the ACM

# https://github.com/coreboot/coreboot/blob/4.18/src/include/cpu/intel/msr.h
0x13A BOOT_GUARD_SACM_INFO

# Intel-SDM-Vol4 (2nd Gen Core, Sandy Bridge Microarchitecture)
CORE2 0x13C FEATURE_CONFIG # AES Configuration

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x13D CORE_SPECIFIC_SPARE_0_0 # Spare core MSRs supported by the cregpla. Ucode (instead of the PLA) will signal #GP on access
XEONSCAL4 0x13E CORE_SPECIFIC_SPARE_1_1
XEONSCAL4 0x13F CORE_SPECIFIC_SPARE_2_2

# Intel-SDM-Vol4 (Intel Xeon Phi)
XEONPHI 0x140 MISC_FEATURE_ENABLES # Enable User Mode MONITOR and MWAIT

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x140 MISC_THD_FEATURE_ENABLES # Miscellaneous enables for thread specific features
XEONSCAL4 0x141 SMM_SUPOVR_STATE_LOCK    # SMM-only MSR which allows locking of various states while in SMM mode
XEONSCAL4 0x142 THREAD_SPECIFIC_SPARE_0_0 # Spare thread MSRs supported by the cregpla. Ucode (instead of the PLA) will signal #GP on access
XEONSCAL4 0x143 THREAD_SPECIFIC_SPARE_1_1
XEONSCAL4 0x144 THREAD_SPECIFIC_SPARE_2_2
XEONSCAL4 0x145 THREAD_SPECIFIC_SPARE_3_3
XEONSCAL4 0x146 THREAD_SPECIFIC_SPARE_4_4
XEONSCAL4 0x147 THREAD_SPECIFIC_SPARE_5_5
XEONSCAL4 0x148 THREAD_SPECIFIC_SPARE_6_6
XEONSCAL4 0x149 THREAD_SPECIFIC_SPARE_7_7
XEONSCAL4 0x14A THREAD_SPECIFIC_SPARE_8_8
XEONSCAL4 0x14B THREAD_SPECIFIC_SPARE_9_9
XEONSCAL4 0x14C THREAD_SPECIFIC_SPARE_10_10
XEONSCAL4 0x14D THREAD_SPECIFIC_SPARE_11_11
XEONSCAL4 0x14E THREAD_SPECIFIC_SPARE_12_12
XEONSCAL4 0x14F THREAD_SPECIFIC_SPARE_13_13

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/drivers/platform/x86/intel/turbo_max_3.c?h=v6.1 defines MSR_OC_MAILBOX
# https://github.com/mihic/linux-intel-undervolt/tree/6f911700236c5b0c4dd20028ed3936ffe5d7155e documents how to use this MSR for under-voltage where the CPU has an integrated voltage controller (FIVR)
# https://github.com/georgewhewell/undervolt/blob/e39aea12f665695d7ef7f1b66467c5138caea52a/undervolt.py defines it as "voltage offset" with planes (Core, GPU, Cache, Uncore, Analog IO, Digital IO)
# https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00289.html CVE-2019-11157 restricts this MSR (https://www.usenix.org/system/files/sec21summer_chen-zitai.pdf)
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
CORE4 0x150 OVERCLOCKING_MAILBOX # An Interface to perform various overclocking oriented commands

# Intel-SDM-Vol4 (10th Generation Intel Core)
CORE10 0x151 BIOS_DONE

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x152 SNC_CONFIG
XEONSCAL4 0x153 SNC_RANGE0_BASE
XEONSCAL4 0x154 SNC_RANGE1_BASE
XEONSCAL4 0x155 SNC_RANGE2_BASE
XEONSCAL4 0x156 SNC_RANGE3_BASE
XEONSCAL4 0x157 SNC_RANGE4_BASE
XEONSCAL4 0x158 THREAD_SMI_ERR_SRC  # Core SMI Error Source
XEONSCAL4 0x159 SNC_UPPER_BASE      # SNC range upper 6 bits per range register
XEONSCAL4 0x15B SPCL_UNCORE_USAGE   # Special uncore usage msr, work in PFAT or in SMM BIOS flash

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ClientOneSiliconPkg/Cpu/Include/Register/CommonMsr.h
XEONSCAL4 0x15C PERMEM_CONFIG_INFO  # Read-only MSR that specifies the maximum number of memory controllers on the platform capable of supporting memory persistence
XEONSCAL4 0x15D PERMEM_CTRLR_INDEX  # Index into the list of persistent memory addresses which is accessed when the PERMEM_CTRLR_ID MSR is read/written
XEONSCAL4 0x15E PERMEM_CTRLR_ID     # Read-only MSR that specifies the maximum number of memory controllers on the platform capable of supporting memory persistence

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x160 REGISTER_0  # Probe mode MSR, used also in cache flush and segmentation. C6NoSave Candidate
XEONSCAL4 0x161 REGISTER_1
XEONSCAL4 0x162 REGISTER_2
XEONSCAL4 0x163 REGISTER_3
XEONSCAL4 0x164 REGISTER_4
XEONSCAL4 0x165 REGISTER_5
XEONSCAL4 0x166 REGISTER_6
XEONSCAL4 0x167 REGISTER_7
XEONSCAL4 0x168 REGISTER_8
XEONSCAL4 0x169 REGISTER_9
XEONSCAL4 0x16A REGISTER_10
XEONSCAL4 0x16B REGISTER_11
XEONSCAL4 0x16C REGISTER_12
XEONSCAL4 0x16D REGISTER_13
XEONSCAL4 0x16E TASK_SWITCH_OR_SMI_RIP         # SCP used by Task Switch and SMI code to save RIP. Probe mode MSR, used also in PDM flows
XEONSCAL4 0x16F TASK_SWITCH_OR_PROBE_MODE_MISC # Probe mode MSR, used also in task switch. C6NoSave Candidate
XEONSCAL4 0x170 P6_CR_SMREVID # SMM revision identifier
XEONSCAL4 0x171 P6_CR_SMBASE  # SMM Base register
XEONSCAL4 0x172 PROBE_MODE_PPPE_REDIRECTION # Used to save PPPE exit reason for probe mode redirection. C6NoSave Candidate
XEONSCAL4 0x173 PROBE_MODE_DR # Probe mode data register result

0x174 IA32_SYSENTER_CS  # Intel-SDM-Vol4
0x175 IA32_SYSENTER_ESP # Intel-SDM-Vol4
0x176 IA32_SYSENTER_EIP # Intel-SDM-Vol4

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x178 MCG_CONTAIN # Register that contains the poison and viral bit valid / invalid state

0x179 IA32_MCG_CAP      # Intel-SDM-Vol4 Global Machine Check Capability
0x17A IA32_MCG_STATUS   # Intel-SDM-Vol4 Global Machine Check Status
0x17B IA32_MCG_CTL      # Intel-SDM-Vol4 Global Machine Check Control

# https://github.com/liuwei142536/BIOS_Amesterdam/blob/3014c18c7c467266c5a86aff39fce25bc462e812/GrantleyPkg/Ras/Include/mca_msr.h#L232
# https://github.com/marktsai0316/RAIDOOBMODULE/blob/abf3a08719182c16769d5549db1235e05ec97fc0/PurleySktPkg/Include/mca_msr.h#L228
# https://www.intel.com/content/dam/develop/external/us/en/documents/emca2-integration-validation-guide-556978.pdf
# (Reliability, Availability and Serviceability (RAS) Integration and Validation Guide for the Intel Xeon Processor E7- v3 Family
# Error Reporting through EMCA Gen 2, April 2015)
# documents page 12 for MCA (Machine Check Architecture): Two new MSRs:
# CORE_SMI_ERR_SRC and UNCORE_SMI_ERR_SRC are used by SMM handler to determine
# if the SMI was caused by a MCE or CMCI that was rerouted to a SMI.
# SMM will clear the MSR when return.
0x17C CORE_SMI_ERR_SRC # Core SMI Error Source

# Intel-SDM-Vol4 (4th Gen Core, Haswell Microarchitecture)
CORE4 0x17D SMM_MCA_CAP # Enhanced SMM MCA Capabilities

# https://github.com/liuwei142536/BIOS_Amesterdam/blob/3014c18c7c467266c5a86aff39fce25bc462e812/GrantleyPkg/Ras/Include/mca_msr.h#L233
# https://github.com/marktsai0316/RAIDOOBMODULE/blob/abf3a08719182c16769d5549db1235e05ec97fc0/PurleySktPkg/Include/mca_msr.h#L229
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
0x17E UNCORE_SMI_ERR_SRC # Uncore SMI Error Source

# Intel-SDM-Vol4 (Xeon Processor E5)
XEONE5 0x17F ERROR_CONTROL # MC Bank Error Configuration

# Intel-SDM-Vol4 (Pentium 4 and Xeon)
PENTIUM4 0x180 MCG_RAX               # Machine Check EAX/RAX Save State
PENTIUM4 0x181 MCG_RBX               # Machine Check EBX/RBX Save State
PENTIUM4 0x182 MCG_RCX               # Machine Check ECX/RCX Save State
PENTIUM4 0x183 MCG_RDX               # Machine Check EDX/RDX Save State
PENTIUM4 0x184 MCG_RSI               # Machine Check ESI/RSI Save State
PENTIUM4 0x185 MCG_RDI               # Machine Check EDI/RDI Save State
PENTIUM4 0x186 MCG_RBP               # Machine Check EBP/RBP Save State
PENTIUM4 0x187 MCG_RSP               # Machine Check ESP/RSP Save State
PENTIUM4 0x188 MCG_RFLAGS            # Machine Check EFLAGS/RFLAG Save State
PENTIUM4 0x189 MCG_RIP               # Machine Check EIP/RIP Save State
PENTIUM4 0x18A MCG_MISC              # Machine Check Miscellaneous
PENTIUM4 0x18B MCG_RESERVED1         # Reserved
PENTIUM4 0x18C MCG_RESERVED2         # Reserved
PENTIUM4 0x18D MCG_RESERVED3         # Reserved
PENTIUM4 0x18E MCG_RESERVED4         # Reserved
PENTIUM4 0x18F MCG_RESERVED5         # Reserved
PENTIUM4 0x190 MCG_R8                # Machine Check R8
PENTIUM4 0x191 MCG_R9                # Machine Check R9D/R9
PENTIUM4 0x192 MCG_R10               # Machine Check R10
PENTIUM4 0x193 MCG_R11               # Machine Check R11
PENTIUM4 0x194 MCG_R12               # Machine Check R12
PENTIUM4 0x195 MCG_R13               # Machine Check R13
PENTIUM4 0x196 MCG_R14               # Machine Check R14
PENTIUM4 0x197 MCG_R15               # Machine Check R15

# Intel-SDM-Vol4 Performance Event Select Registers
0x186 IA32_PERFEVTSEL0
0x187 IA32_PERFEVTSEL1
0x188 IA32_PERFEVTSEL2
0x189 IA32_PERFEVTSEL3
0x18A IA32_PERFEVTSEL4
0x18B IA32_PERFEVTSEL5
0x18C IA32_PERFEVTSEL6
0x18D IA32_PERFEVTSEL7

# https://github.com/coreboot/coreboot/blob/4.18/src/cpu/intel/haswell/haswell.h
# https://github.com/coreboot/coreboot/blob/4.18/src/soc/intel/common/block/include/intelblocks/msr.h
0x194 FLEX_RATIO # This 'flexible boot' register is written by BIOS in order to modify the maximum non-turbo ratio on the next reset

0x195 IA32_OVERCLOCKING_STATUS # Intel-SDM-Vol4 Overclocking Status
0x198 IA32_PERF_STATUS         # Intel-SDM-Vol4 Current Performance Status
0x199 IA32_PERF_CTL            # Intel-SDM-Vol4 Performance Control
0x19A IA32_CLOCK_MODULATION    # Intel-SDM-Vol4 Clock Modulation Control
0x19B IA32_THERM_INTERRUPT     # Intel-SDM-Vol4 Thermal Interrupt Control
0x19C IA32_THERM_STATUS        # Intel-SDM-Vol4 Thermal Status Information
0x19D THERM2_CTL               # Intel-SDM-Vol4 Thermal Monitor 2 Control

0x1A0 IA32_MISC_ENABLE # Intel-SDM-Vol4 Enable Miscellaneous Processor Features

# Intel-SDM-Vol4 (Pentium 4 and Xeon)
PENTIUM4 0x1A1 PLATFORM_BRV          # Platform Feature Requirements

# Intel-SDM-Vol4 (1st Gen Core, Nehalem Microarchitecture)
CORE1 0x1A2 TEMPERATURE_TARGET   # Temperature Target
CORE1 0x1A4 MISC_FEATURE_CONTROL # Miscellaneous Feature Control
CORE1 0x1A6 OFFCORE_RSP_0        # Offcore Response Event Select Register
CORE1 0x1AA MISC_PWR_MGMT        # Miscellaneous Power Management Control
CORE1 0x1AC TURBO_POWER_CURRENT_LIMIT # Power Current Limit
CORE1 0x1AD TURBO_RATIO_LIMIT   # Maximum Ratio Limit of Turbo Mode

# Intel-SDM-Vol4 (Xeon Processor 5600)
XEON5600 0x1A7 OFFCORE_RSP_1     # Offcore Response Event Select Register

# Intel-SDM-Vol4 (12th and 13th Generation Intel Core Processors)
# Intel-SDM-Vol4 (4th Generation Intel Xeon Scalable Processor Family)
CORE12 0x1AD PRIMARY_TURBO_RATIO_LIMIT # Primary Maximum Turbo Ratio Limit

# Intel-SDM-Vol4 (Atom Goldmont Microarchitecture)
ATOM 0x1AE TURBO_GROUP_CORECNT #  Group Size of Active Cores for Turbo Mode Operation

# Intel-SDM-Vol4 (Xeon Processor E5 v2)
XEONE5V2 0x1AE TURBO_RATIO_LIMIT1 # Maximum Ratio Limit of Turbo Mode

# Intel-SDM-Vol4 (Xeon Processor E5 v3)
XEONE5V3 0x1AF TURBO_RATIO_LIMIT2 # Maximum Ratio Limit of Turbo Mode

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x1A1 PACKAGE_THERM_MARGIN # Temperature margin in PECI temperature counts from the thermal profile specification. Platform fan control SW is expected to read therm_margin value to control fan or blower speed
XEONSCAL4 0x1A2 TEMPERATURE_TARGET   # Legacy register holding temperature related constants for Platform use
XEONSCAL4 0x1A3 MCP_THERMAL_REPORT_1 # MCP Thermal reporting

# Intel-SDM-Vol4 (4th Generation Intel Xeon Scalable Processor Family)
XEONSCAL4 0x1A4 PREFETCH_CONTROL          # Prefetch Disable Bits
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x1A5 MCP_THERMAL_REPORT_2 # MCP Thermal reporting
XEONSCAL4 0x1A6 OFFCORE_RSP_0_0      # Offcore Response Event Select Register
XEONSCAL4 0x1A7 OFFCORE_RSP_1_1      # Offcore Response Event Select Register
XEONSCAL4 0x1A8 THREAD_SW_DEFEATURE  # MSR for thread specific defeature
XEONSCAL4 0x1AD BIGCORE_TURBO_RATIO_LIMIT # This MSR indicates the factory configured values for of 1-core, 2-core, 3-core and 4-core turbo ratio limits for all processors and also allows configuration of those values on parts with PLATFORM_INFO MSR 0CEh[28]==1
XEONSCAL4 0x1AE BIGCORE_TURBO_RATIO_LIMIT_CORES # This register defines the active core ranges for each frequency point

# Intel-SDM-Vol4 (Xeon Processor D)
XEOND 0x1AC TURBO_RATIO_LIMIT3     # Config Ratio Limit of Turbo Mode

0x1B0 IA32_ENERGY_PERF_BIAS        # Intel-SDM-Vol4 Performance Energy Bias Hint
0x1B1 IA32_PACKAGE_THERM_STATUS    # Intel-SDM-Vol4 Package Thermal Status Information
0x1B2 IA32_PACKAGE_THERM_INTERRUPT # Intel-SDM-Vol4 Pkg Thermal Interrupt Control

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/ArchMsr.h
0x1C2 HW_GET_LP_PM_META_DATA    # Current Logical Processor PM Meta Data and CTC data
0x1C3 HW_HW_SET_LP_PM_META_DATA # Deliver the LP PM Meta Data into the H/W

0x1C4 IA32_XFD     # Intel-SDM-Vol4 Extended Feature Disable Control
0x1C5 IA32_XFD_ERR # Intel-SDM-Vol4 Extended Feature Disable Error Code

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x1C6 DEBUG_RESOURCE_STATUS # This MSR return the status of debug resources (Used to be in MISC_ENABLES MSR)

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/ArchMsr.h
0x1C7 DD_THROTTLE_DEACTIVATE # Command reg in ACE IP

# Intel-SDM-Vol4 (1st Gen Core, Nehalem Microarchitecture)
CORE1 0x1C8 LBR_SELECT # Last Branch Record Filtering Select Register

0x1C9 LASTBRANCH_TOS # Intel-SDM-Vol4 (Intel Core Microarchitecture) Last Branch Record Stack TOS

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/ArchMsr.h
0x1CA DD_DI_CAPABILITY  # Read only register for DEDUP capability
0x1CB DD_DI_ACTIVATE    # Rd/Wr register to specify keyID for dedup domain isolation

# https://cdrdv2-public.intel.com/779982/346446-flexible-return-and-event-delivery.pdf Flexible Return and Event Delivery (FRED)
0x1CC IA32_FRED_RSP0    # FRED Stack Pointer when transitioning from ring 3 to 0
0x1CD IA32_FRED_RSP1
0x1CE IA32_FRED_RSP2
0x1CF IA32_FRED_RSP3
0x1D0 IA32_FRED_STKLVLS # FRED Stack levels for exceptions
0x1D1 IA32_FRED_SSP1    # FRED Supervisor Shadow Stack (FRED_SSP0 is IA32_PL0_SSP at 0x6A4)
0x1D2 IA32_FRED_SSP2    # FRED Supervisor Shadow Stack
0x1D3 IA32_FRED_SSP3    # FRED Supervisor Shadow Stack
0x1D4 IA32_FRED_CONFIG  # FRED configuration

# Also known as MSR_DEBUGCTLMSR in 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/ArchMsr.h
0x1D9 IA32_DEBUGCTL # Intel-SDM-Vol4 Trace/Profile Resource Control

# Intel-SDM-Vol4 (Pentium 4 and Xeon)
PENTIUM4 0x1D7 LER_FROM_LIP          # Last Exception Record From Linear IP
PENTIUM4 0x1D8 LER_TO_LIP            # Last Exception Record To Linear IP
PENTIUM4 0x1D9 DEBUGCTLA             # Debug Control
PENTIUM4 0x1DA LASTBRANCH_TOS        # Last Branch Record Stack TOS
PENTIUM4 0x1DB LASTBRANCH_0          # Last Branch Record 0
PENTIUM4 0x1DC LASTBRANCH_1          # Last Branch Record 1
PENTIUM4 0x1DD LASTBRANCH_2          # Last Branch Record 2
PENTIUM4 0x1DE LASTBRANCH_3          # Last Branch Record 3

# Intel-SDM-Vol4 (P6 Family Processors)
P6 0x1DB LASTBRANCHFROMIP # 32-bit register for recording the instruction pointers for the last branch, interrupt, or exception that the processor took prior to a debug exception being generated
P6 0x1DC LASTBRANCHTOIP   # 32-bit register for recording the instruction pointers for the last branch, interrupt, or exception that the processor took prior to a debug exception being generated
P6 0x1DD LASTINTFROMIP    # Last INT from IP
P6 0x1DE LASTINTTOIP     #  Last INT to IP

# Intel-SDM-Vol4 (Intel Core Solo and Duo) Last Branch Record 0
# Warning: many other sources swap LER_FROM_LIP and LER_TO_LIP:
# - https://github.com/tianocore/edk2/blob/edk2-stable202211/MdePkg/Include/Register/Intel/Msr/PentiumMMsr.h
# - https://github.com/gz/rust-x86/blob/0.52.0/src/msr.rs
CORESOLO 0x1DD LER_FROM_LIP # Last Exception Record From Linear IP
CORESOLO 0x1DE LER_TO_LIP   # Last Exception Record To Linear IP

0x1DD IA32_LER_FROM_IP # Intel-SDM-Vol4 Last Event Record Source IP Register
0x1DE IA32_LER_TO_IP   # Intel-SDM-Vol4 Last Event Record Destination IP Register

# https://twitter.com/_markel___/status/1384607442328334337 2021-04 "Probe Mode redirection is a microcode feature of modern Intel CPUs allowing to halt CPU and jump into JTAG debugger due to many arch events. It's controlled by undocumented ICECTLPMR MSR (0x1DF)"
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
0x1DF ICECTLPMR # Probe mode control and status register. 16 bit. (Mrm roctlregc/roctlregd/icectlpmrSM306L)

0x1E0 IA32_LER_INFO    # Intel-SDM-Vol4 Last Event Record Info Register

# https://github.com/tianocore/edk2/commit/e0d87abe8f7d135837af4447450e3892d5ec9104 "Add Core Solo/Duo MSRs from: Intel 64 and IA-32 Architectures Software Developer's Manual, Volume 3, December 2015, Chapter 35 Model-Specific-Registers (MSR), Section 35-17." (and removed in https://github.com/tianocore/edk2/commit/f49bbeda3ecaedf89b0190292980a84e80824a9b)
# https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developers-manual.pdf
CORESOLO 0x1E0 ROB_CR_BKUPTMPDR6

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x1E1 CPU_TYPE # This RO MSR will be used to report the fuse_cpu_type bits from PCU Package Config CSR

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ClientOneSiliconPkg/Cpu/Include/Register/CommonMsr.h
XEONSCAL4 0x1E2 CUSTOMER_SPECIFIC_FEATURE_ENABLE # Register used to enable customer specific features (Bit 1 is user-level mwait)

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x1E3 DEBUG_ERR_INJ_CTL # This MSR holds the capability of error spoofing. Bit 1 for unlock MCA/CMCI generation capability (allows event injection), bit 0 to unlock writing to MC banks
XEONSCAL4 0x1E4 DEBUG_ERR_INJ_CTL2 # This MSR will be used to trigger MCA(bit0)/CMCI(bit1)

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ClientOneSiliconPkg/Cpu/Include/Register/CommonMsr.h
XEONSCAL4 0x1E5 ULI_VECTOR_INFO # User-level Interrupts Vector
XEONSCAL4 0x1E7 ULI_TARGET_RIP  # User-level Interrupts Target RIP

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x1F0 VLW_CAPABILITY # VLW capability MSR that reports information about the VLW messages that are supported

# https://github.com/jmpoep/ElkhartLake_Silicon_reference_and_Platform_Sample_Code/blob/b0149682f932de6bb88199814f9885abcdb97579/Intel/ClientOneSiliconPkg/Include/Library/SocketLga1156Lib.h Socket LGA1156 and LGA1366 based MSR definitions
LGA1156 0x1F0 VLW_CAPABILITY
LGA1156 0x1F1 FERR_CAPABILITY

# Intel-SDM-Vol4 (10th Generation Intel Core)
CORE10 0x1F1 CRASHLOG_CONTROL # Write Data to a Crash Log Configuration

0x1F2 IA32_SMRR_PHYSBASE  # Intel-SDM-Vol4 SMRR Base Address
0x1F3 IA32_SMRR_PHYSMASK  # Intel-SDM-Vol4 SMRR Range Mask

# Intel-SDM-Vol4 (7th and 8th Generation Intel Core Processors)
CORE7 0x1F4 PRMRR_PHYS_BASE  # Processor Reserved Memory Range Register - Physical Base Control Register
CORE7 0x1F5 PRMRR_PHYS_MASK  # Processor Reserved Memory Range Register - Physical Mask Control Register

# https://github.com/jmpoep/ElkhartLake_Silicon_reference_and_Platform_Sample_Code/blob/b0149682f932de6bb88199814f9885abcdb97579/Intel/ClientOneSiliconPkg/Include/Library/SocketLga1156Lib.h Socket LGA1156 and LGA1366 based MSR definitions
LGA1156 0x1F4 EMRR_PHYSBASE
LGA1156 0x1F5 EMRR_PHYSMASK

# From https://github.com/intel/seam-loader/blob/eadff76d36d214419c801f1cee1828ea437c91a5/np-seam-loader/seamldr_src/Core/Include/common.h
0x1F5 PRMRR_MASK # Mask for PRMRR_BASE=0x2A0

# From https://github.com/intel/seam-loader/blob/eadff76d36d214419c801f1cee1828ea437c91a5/np-seam-loader/seamldr_src/Core/Include/common.h
# https://services.google.com/fh/files/misc/intel_tdx_-_full_report_041423.pdf
0x1F6 SMRR2_PHYBASE # SMM Range Register #2 - Physical Base Control Register
0x1F7 SMRR2_PHYMASK # SMM Range Register Base #2 - Physical Mask Control Register

0x1F8 IA32_PLATFORM_DCA_CAP # Intel-SDM-Vol4 DCA Capability
0x1F9 IA32_CPU_DCA_CAP      # Intel-SDM-Vol4 If set, CPU supports Prefetch-Hint type
0x1FA IA32_DCA_0_CAP        # Intel-SDM-Vol4 DCA type 0 Status and Control register

# Intel-SDM-Vol4 (7th and 8th Generation Intel Core Processors)
CORE7 0x1FB PRMRR_VALID_CONFIG  # Valid PRMRR Configurations

# Intel-SDM-Vol4 (1st Gen Core, Nehalem Microarchitecture)
# https://download.gigabyte.com/FileList/Manual/server_manual_r161-r12_e_10.pdf Bit 20 is Race to Halt (RtH)
CORE1 0x1FC POWER_CTL # Power Control Register

# https://review.coreboot.org/c/coreboot/+/51796/14
# https://github.com/tianocore/edk2-platforms/blob/aa3f6fd542e99dde4206537b095f1a2201275e75/Silicon/Intel/CoffeelakeSiliconPkg/Cpu/Include/CpuRegs.h#L22
# https://www.mail-archive.com/devel@edk2.groups.io/msg27241.html
0x1FE SPCL_CHIPSET_USAGE # Special Chipset Usage

# Intel-SDM-Vol4 See Section 12.11.2.3, "Variable Range MTRRs"
0x200 IA32_MTRR_PHYSBASE0
0x201 IA32_MTRR_PHYSMASK0
0x202 IA32_MTRR_PHYSBASE1
0x203 IA32_MTRR_PHYSMASK1
0x204 IA32_MTRR_PHYSBASE2
0x205 IA32_MTRR_PHYSMASK2
0x206 IA32_MTRR_PHYSBASE3
0x207 IA32_MTRR_PHYSMASK3
0x208 IA32_MTRR_PHYSBASE4
0x209 IA32_MTRR_PHYSMASK4
0x20A IA32_MTRR_PHYSBASE5
0x20B IA32_MTRR_PHYSMASK5
0x20C IA32_MTRR_PHYSBASE6
0x20D IA32_MTRR_PHYSMASK6
0x20E IA32_MTRR_PHYSBASE7
0x20F IA32_MTRR_PHYSMASK7
0x210 IA32_MTRR_PHYSBASE8
0x211 IA32_MTRR_PHYSMASK8
0x212 IA32_MTRR_PHYSBASE9
0x213 IA32_MTRR_PHYSMASK9
0x250 IA32_MTRR_FIX64K_00000
0x258 IA32_MTRR_FIX16K_80000
0x259 IA32_MTRR_FIX16K_A0000

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x25B ICECTLPMR_2 # Scratch Pad register P6_CR_ICECTLPMR_2

# Intel-SDM-Vol4 See Section 12.11.2.2, "Fixed Range MTRRs."
0x268 IA32_MTRR_FIX4K_C0000
0x269 IA32_MTRR_FIX4K_C8000
0x26A IA32_MTRR_FIX4K_D0000
0x26B IA32_MTRR_FIX4K_D8000
0x26C IA32_MTRR_FIX4K_E0000
0x26D IA32_MTRR_FIX4K_E8000
0x26E IA32_MTRR_FIX4K_F0000
0x26F IA32_MTRR_FIX4K_F8000

# https://kib.kiev.ua/x86docs/Intel/TDX/348551-001.pdf Intel Trust Domain Extensions (Intel TDX) Module Architecture Application Binary Interface (ABI) Reference Specification (September 2021, 348551-001US)
# https://cdrdv2-public.intel.com/733568/tdx-module-1.0-public-spec-344425004.pdf Architecture Specification: Intel Trust Domain Extensions (Intel TDX) Module (June 2022, 344425-004US)
0x276 SLAM_ENABLE

# Intel-SDM-Vol4
0x277 IA32_PAT

# Intel-SDM-Vol4 MSR Enable/disable CMCI capability for bank 0
0x280 IA32_MC0_CTL2
0x281 IA32_MC1_CTL2
0x282 IA32_MC2_CTL2
0x283 IA32_MC3_CTL2
0x284 IA32_MC4_CTL2
0x285 IA32_MC5_CTL2
0x286 IA32_MC6_CTL2
0x287 IA32_MC7_CTL2
0x288 IA32_MC8_CTL2
0x289 IA32_MC9_CTL2
0x28A IA32_MC10_CTL2
0x28B IA32_MC11_CTL2
0x28C IA32_MC12_CTL2
0x28D IA32_MC13_CTL2
0x28E IA32_MC14_CTL2
0x28F IA32_MC15_CTL2
0x290 IA32_MC16_CTL2
0x291 IA32_MC17_CTL2
0x292 IA32_MC18_CTL2
0x293 IA32_MC19_CTL2
0x294 IA32_MC20_CTL2
0x295 IA32_MC21_CTL2
0x296 IA32_MC22_CTL2
0x297 IA32_MC23_CTL2
0x298 IA32_MC24_CTL2
0x299 IA32_MC25_CTL2
0x29A IA32_MC26_CTL2
0x29B IA32_MC27_CTL2
0x29C IA32_MC28_CTL2
0x29D IA32_MC29_CTL2
0x29E IA32_MC30_CTL2
0x29F IA32_MC31_CTL2

# Intel-SDM-Vol4 (10th Generation Intel Core)
CORE10 0x2A0 PRMRR_BASE_0 # Processor Reserved Memory Range Register - Physical Base Control Register

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x2A1 PRMRR_BASE_1_1 # Processor Reserved Memory Range Register - Physical Base Control Register
XEONSCAL4 0x2A2 PRMRR_BASE_2_2
XEONSCAL4 0x2A3 PRMRR_BASE_3_3
XEONSCAL4 0x2A4 PRMRR_BASE_4_4
XEONSCAL4 0x2A5 PRMRR_BASE_5_5
XEONSCAL4 0x2A6 PRMRR_BASE_6_6
XEONSCAL4 0x2A7 PRMRR_BASE_7_7

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/GnrMsr.h
XEONSCAL4 0x2BC ACTIVATE_SBFT # Runs SBFT program (structurally based functional test)
XEONSCAL4 0x2BD SBFT_STATUS  # Returns the result of most recent WRMSR(ACTIVATE_SBFT)
XEONSCAL4 0x2C0 FUSARR_BASE # Address Match Range Register - Physical Base Control Register for Hidden Lake

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x2C1 FUSARR_MASK # Address Match Range Register - Physical Mask Control Register for Hidden Lake

# Intel-SDM-Vol4 (4th Generation Intel Xeon Scalable Processor Family)
XEONSCAL4 0x2C2 COPY_SCAN_HASHES   # linear address of the SCAN Test HASH Binary loaded into memory
XEONSCAL4 0x2C3 SCAN_HASHES_STATUS
XEONSCAL4 0x2C4 AUTHENTICATE_AND_COPY_CHUNK
XEONSCAL4 0x2C5 CHUNKS_AUTHENTICATION_STATUS
XEONSCAL4 0x2C6 ACTIVATE_SCAN
XEONSCAL4 0x2C7 SCAN_STATUS
XEONSCAL4 0x2C8 SCAN_MODULE_ID
XEONSCAL4 0x2C9 LAST_SAF_WP

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/GnrMsr.h
XEONSCAL4 0x2D8 ENABLE_LSM # virtual CR for Lock-Step-Mode

# Intel-SDM-Vol4 (4th Generation Intel Xeon Scalable Processor Family)
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/GnrMsr.h defines GNR_MSR_FUSA_CAPABILITIES
XEONSCAL4 0x2D9 INTEGRITY_CAPABILITIES

# https://github.com/coreboot/coreboot/blob/4.18/src/soc/intel/common/block/include/intelblocks/msr.h
0x2E0 EVICT_CTL # No Evict Mode (for the BIOS to disable Cache as RAM)

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x2E0 NEM # No-Evict Mode MSR

# https://github.com/jmpoep/ElkhartLake_Silicon_reference_and_Platform_Sample_Code/blob/b0149682f932de6bb88199814f9885abcdb97579/Intel/ClientOneSiliconPkg/Include/Library/SocketLga1156Lib.h Socket LGA1156 and LGA1366 based MSR definitions
LGA1156 0x2E2 UNCORE_CR_MEMLOCK_COMMANDS
LGA1156 0x2E3 UNCORE_CR_UNCORE_MC_CFG_CONTROL

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
0x2E6 LT_UNLOCK_MEMORY # Used by Intel TXT enabled BIOS to unlock memory after checking that the TPM is valid

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
0x2E7 LTCTRLSTS # Also known as LT_CONTROL

# https://github.com/coreboot/coreboot/blob/4.18/src/soc/intel/skylake/include/soc/msr.h
CORE6 0x2E7 LT_LOCK_MEMORY

# From https://github.com/intel/seam-loader/blob/eadff76d36d214419c801f1cee1828ea437c91a5/np-seam-loader/seamldr_src/Core/Include/common.h
0x2E8 EDRAM_ACM # ACM Only MSR for EDRAM management

# Intel-SDM-Vol4 (7th and 8th Generation Intel Core Processors)
CORE7 0x2F4 UNCORE_PRMRR_PHYS_BASE
CORE7 0x2F5 UNCORE_PRMRR_PHYS_MASK

# Intel-SDM-Vol4
0x2FF IA32_MTRR_DEF_TYPE

# From https://github.com/intel/seam-loader/blob/eadff76d36d214419c801f1cee1828ea437c91a5/np-seam-loader/seamldr_src/Core/Include/common.h
0x300 BUS_NUM

# https://github.com/jmpoep/ElkhartLake_Silicon_reference_and_Platform_Sample_Code/blob/b0149682f932de6bb88199814f9885abcdb97579/Intel/ClientOneSiliconPkg/Include/Library/SocketLga1156Lib.h Socket LGA1156 and LGA1366 based MSR definitions
LGA1156 0x300 PCIEXBAR

# Intel-SDM-Vol4 (6th-13th Xeon Processor) Lower 64 Bit CR_SGXOWNEREPOCH
XEON6 0x300 SGXOWNEREPOCH0

# Intel-SDM-Vol4 (Pentium 4 and Xeon)
PENTIUM4 0x300 BPU_COUNTER0   # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x301 BPU_COUNTER1   # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x302 BPU_COUNTER2   # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x303 BPU_COUNTER3   # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x304 MS_COUNTER0    # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x305 MS_COUNTER1    # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x306 MS_COUNTER2    # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x307 MS_COUNTER3    # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x308 FLAME_COUNTER0 # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x309 FLAME_COUNTER1 # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x30A FLAME_COUNTER2 # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x30B FLAME_COUNTER3 # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x30C IQ_COUNTER0    # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x30D IQ_COUNTER1    # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x30E IQ_COUNTER2    # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x30F IQ_COUNTER3    # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x310 IQ_COUNTER4    # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x311 IQ_COUNTER5    # See Section 20.6.3.2, "Performance Counters."
PENTIUM4 0x360 BPU_CCCR0      # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x361 BPU_CCCR1      # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x362 BPU_CCCR2      # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x363 BPU_CCCR3      # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x364 MS_CCCR0       # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x365 MS_CCCR1       # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x366 MS_CCCR2       # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x367 MS_CCCR3       # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x368 FLAME_CCCR0    # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x369 FLAME_CCCR1    # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x36A FLAME_CCCR2    # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x36B FLAME_CCCR3    # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x36C IQ_CCCR0       # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x36D IQ_CCCR1       # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x36E IQ_CCCR2       # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x36F IQ_CCCR3       # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x370 IQ_CCCR4       # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x371 IQ_CCCR5       # See Section 20.6.3.3, "CCCR MSRs."
PENTIUM4 0x3A0 BSU_ESCR0      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3A1 BSU_ESCR1      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3A2 FSB_ESCR0      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3A3 FSB_ESCR1      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3A4 FIRM_ESCR0     # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3A5 FIRM_ESCR1     # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3A6 FLAME_ESCR0    # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3A7 FLAME_ESCR1    # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3A8 DAC_ESCR0      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3A9 DAC_ESCR1      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3AA MOB_ESCR0      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3AB MOB_ESCR1      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3AC PMH_ESCR0      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3AD PMH_ESCR1      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3AE SAAT_ESCR0     # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3AF SAAT_ESCR1     # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3B0 U2L_ESCR0      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3B1 U2L_ESCR1      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3B2 BPU_ESCR0      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3B3 BPU_ESCR1      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3B4 IS_ESCR0       # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3B5 IS_ESCR1       # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3B6 ITLB_ESCR0     # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3B7 ITLB_ESCR1     # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3B8 CRU_ESCR0      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3B9 CRU_ESCR1      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3BA IQ_ESCR0       # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3BB IQ_ESCR1       # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3BC RAT_ESCR0      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3BD RAT_ESCR1      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3BE SSU_ESCR0      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3BF SSU_ESCR1      # Guessed in https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h?h=v6.1
PENTIUM4 0x3C0 MS_ESCR0       # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3C1 MS_ESCR1       # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3C2 TBPU_ESCR0     # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3C3 TBPU_ESCR1     # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3C4 TC_ESCR0       # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3C5 TC_ESCR1       # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3C8 IX_ESCR0       # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3C9 IX_ESCR1       # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3CA ALF_ESCR0      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3CB ALF_ESCR1      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3CC CRU_ESCR2      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3CD CRU_ESCR3      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3E0 CRU_ESCR4      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3E1 CRU_ESCR5      # See Section 20.6.3.1, "ESCR MSRs."
PENTIUM4 0x3F0 TC_PRECISE_EVENT # See Section 20.6.3.1, "ESCR MSRs."

# Intel-SDM-Vol4 (6th-13th Xeon Processor) Upper 64 Bit CR_SGXOWNEREPOCH
XEON6 0x301 SGXOWNEREPOCH1

# Intel-SDM-Vol4 (Intel Xeon Processor 5500 and 3400 Series)
XEON5000 0x301 GQ_SNOOP_MESF

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x300 SE_EPOCH_0 # External 128-bit entropy for SGX keys derivation
XEONSCAL4 0x301 SE_EPOCH_1

# https://github.com/chipsec/chipsec/blob/1.10.0/chipsec/cfg/8086/common.xml
0x302 BIOS_SE_SVN # Non-architectural MSR to read and update the SGX SVN by BIOS. The MSR is logically divided into eight 8-bit components, where each of the components is either reserved (MBZ) or tracks the minimum SGX SVN of a particular ACM that was launched on the platform since last reset. Bits[15:0] is PrResetSvn (Writing non-zero value results in #GP(0)). Bits[23:16] is SinitSeSvn (SINIT ACM). Bits[31:24] is ScleanSeSvn (SCLEAN ACM). Bits[39:32] is AncSeSvn (SGX HW). Bits[47:40] is PfatSeSvn (PFAT ACM). Bits[63:56] is SeamldrSeSvn (SEAMLDR).

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x304 MCHECK_BOOT_SCENARIO # BOOT MSR for communicating boot protocol to MCHECK uses NcuScratchpad26

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/GnrMsr.h
XEONSCAL4 0x305 PERF_OCCUPANCY_CTRS # Perfcntd Occupancy Counter

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x306 COMPOUND_CTR_CTRL # PerfMon Compound Counter enhancement
XEONSCAL4 0x307 COMPOUND_PERF_CTR # PerfMon Compound Counter enhancement

# Intel-SDM-Vol4 Fixed-Function Performance Counters
# https://github.com/intel/intel-cmt-cat/blob/6f385efba25682bc1d3dd2332fd177639ac8d0c7/lib/cpu_registers.h defines some names: IA32_MSR_INST_RETIRED_ANY=0x309, IA32_MSR_CPU_UNHALTED_THREAD=0x30A
# https://github.com/intel/perfmon/blob/16447cf3a2bfb0ed2a3c4649878baaefa9b3b332/secure-pmu-access-1.01.csv
0x309 IA32_FIXED_CTR0   # Value of fixed counter 0 (cycles)
0x30A IA32_FIXED_CTR1   # Value of fixed counter 1 (instructions)
0x30B IA32_FIXED_CTR2   # Value of fixed counter 2 (reference cycles)

# https://github.com/jmpoep/ElkhartLake_Silicon_reference_and_Platform_Sample_Code/blob/b0149682f932de6bb88199814f9885abcdb97579/Intel/ClientOneSiliconPkg/IpBlock/MemoryInit/Tgl/MiniBios/Common/CpuRegs.h for Tiger Lake (11th gen Core)
CORE11 0x30B IA32_BIOS_MEM_DUMP_XU

# Intel-SDM-Vol4 (10th Generation Intel Core)
0x30C IA32_FIXED_CTR3 # Fixed-Function Performance Counter Register 3
CORE10 0x329 PERF_METRICS # Performance Metrics

# https://kib.kiev.ua/x86docs/Intel/TDX/348551-001.pdf Intel Trust Domain Extensions (Intel TDX) Module Architecture Application Binary Interface (ABI) Reference Specification (September 2021, 348551-001US)
# https://cdrdv2-public.intel.com/733568/tdx-module-1.0-public-spec-344425004.pdf Architecture Specification: Intel Trust Domain Extensions (Intel TDX) Module (June 2022, 344425-004US)
0x329 IA32_PERF_METRICS # Performance Metrics

0x345 IA32_PERF_CAPABILITIES # Intel-SDM-Vol4 Read Only MSR that enumerates the existence of performance monitoring features

# Intel-SDM-Vol4 (8th Generation Intel Core i3)
CORE8 0x350 BR_DETECT_CTRL   # Branch Monitoring Global Control
CORE8 0x351 BR_DETECT_STATUS # Branch Monitoring Global Status
CORE8 0x354 BR_DETECT_COUNTER_CONFIG_0 # Branch Monitoring Detect Counter Configuration
CORE8 0x355 BR_DETECT_COUNTER_CONFIG_1 # Branch Monitoring Detect Counter Configuration

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ClientOneSiliconPkg/Cpu/Include/Register/CommonMsr.h
XEONSCAL4 0x350 ROP_DETECT_CTRL         # The BM_DETECT_CTRL is used to enable Branch Monitoring detection (BM), enable PMI exceptions on BM detect, set BM window size, determine counting method for BM window, and determine if trip is due to all counting conditions being met
XEONSCAL4 0x351 ROP_DETECT_STATUS       # Branch Monitoring detect status - threshold tripped, which counter tripped, and tripping count
XEONSCAL4 0x352 ROP_DETECT_CAPABILITIES # Branch Monitoring Detect Capabilities
XEONSCAL4 0x354 ROP_COUNTER_CONFIG_0    # Counter_0: Counter enables, events selection, counter trip threshold
XEONSCAL4 0x355 ROP_COUNTER_CONFIG_1    # Counter_1: Counter enables, events selection, counter trip threshold
XEONSCAL4 0x360 ROP_EVENT_FILTER0       # Branch Monitoring event filter 0
XEONSCAL4 0x361 ROP_EVENT_FILTER0_DATA  # ROP event filter 0 Data

0x38D IA32_FIXED_CTR_CTRL           # Intel-SDM-Vol4 Fixed-Function Performance Counter Control
0x38E IA32_PERF_GLOBAL_STATUS       # Intel-SDM-Vol4 Global Performance Counter Status
0x38F IA32_PERF_GLOBAL_CTRL         # Intel-SDM-Vol4 Global Performance Counter Control
0x390 IA32_PERF_GLOBAL_STATUS_RESET # Intel-SDM-Vol4 Global Performance Counter Overflow Reset Control
0x391 IA32_PERF_GLOBAL_STATUS_SET   # Intel-SDM-Vol4 Global Performance Counter Overflow Set Control
0x392 IA32_PERF_GLOBAL_INUSE        # Intel-SDM-Vol4 Indicator that core perfmon interface is in use

CORE 0x390 IA32_PERF_GLOBAL_OVF_CTRL # Intel-SDM-Vol4 Global Performance Counter Overflow Control (old name)

# Intel-SDM-Vol4 (2nd Generation Intel Core Processors)
CORE2 0x391 UNC_PERF_GLOBAL_CTRL   # Uncore PMU Global Control
CORE2 0x392 UNC_PERF_GLOBAL_STATUS # Uncore PMU Main Status
CORE2 0x394 UNC_PERF_FIXED_CTRL    # Uncore Fixed Counter Control
CORE2 0x395 UNC_PERF_FIXED_CTR     # Uncore Fixed Counter
CORE2 0x396 UNC_CBO_CONFIG         # Uncore C-Box Configuration Information
CORE2 0x3B0 UNC_ARB_PERFCTR0       # Uncore Arb Unit, Performance Counter 0
CORE2 0x3B1 UNC_ARB_PERFCTR1       # Uncore Arb Unit, Performance Counter 1
CORE2 0x3B2 UNC_ARB_PERFEVTSEL0    # Uncore Arb Unit, Counter 0 Event Select MSR
CORE2 0x3B3 UNC_ARB_PERFEVTSEL1    # Uncore Arb Unit, Counter 1 Event Select MSR

# Intel-SDM-Vol4 (Intel Xeon Processor 5500 and 3400 Series) See Section 20.3.1.2.1, "Uncore Performance Monitoring Management Facility."
XEON5500 0x391 UNCORE_PERF_GLOBAL_CTRL
XEON5500 0x392 UNCORE_PERF_GLOBAL_STATUS
XEON5500 0x393 UNCORE_PERF_GLOBAL_OVF_CTRL
XEON5500 0x394 UNCORE_FIXED_CTR0
XEON5500 0x395 UNCORE_FIXED_CTR_CTRL
# Intel-SDM-Vol4 (Intel Xeon Processor 5500 and 3400 Series) See Section 20.3.1.2.3, "Uncore Address/Opcode Match MSR."
XEON5500 0x396 UNCORE_ADDR_OPCODE_MATCH
# Intel-SDM-Vol4 (Intel Xeon Processor 5500 and 3400 Series) See Section 20.3.1.2.2, "Uncore Performance Event Configuration Facility."
XEON5500 0x3B0 UNCORE_PMC0
XEON5500 0x3B1 UNCORE_PMC1
XEON5500 0x3B2 UNCORE_PMC2
XEON5500 0x3B3 UNCORE_PMC3
XEON5500 0x3B4 UNCORE_PMC4
XEON5500 0x3B5 UNCORE_PMC5
XEON5500 0x3B6 UNCORE_PMC6
XEON5500 0x3B7 UNCORE_PMC7
# Intel-SDM-Vol4 (Intel Xeon Processor 5500 and 3400 Series) See Section 20.3.1.2.2, "Uncore Performance Event Configuration Facility."
XEON5500 0x3C0 UNCORE_PERFEVTSEL0
XEON5500 0x3C1 UNCORE_PERFEVTSEL1
XEON5500 0x3C2 UNCORE_PERFEVTSEL2
XEON5500 0x3C3 UNCORE_PERFEVTSEL3
XEON5500 0x3C4 UNCORE_PERFEVTSEL4
XEON5500 0x3C5 UNCORE_PERFEVTSEL5
XEON5500 0x3C6 UNCORE_PERFEVTSEL6
XEON5500 0x3C7 UNCORE_PERFEVTSEL7

# Intel-SDM-Vol4 (Intel Xeon Processor E5)
XEONE5 0x39C PEBS_NUM_ALT # Enable alternate PEBS counting logic

# Intel-SDM-Vol4 (Intel Xeon Processor 7500 Series)
XEON7500 0x394 W_PMON_FIXED_CTR     # Uncore W-box perfmon fixed counter
XEON7500 0x395 W_PMON_FIXED_CTR_CTL # Uncore U-box perfmon fixed counter control MSR

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x392 EMON_PERF_RES_PROGRAMMED # This MSR displays the programming status of all the PerfMon counters
XEONSCAL4 0x396 NCUPMONCONFIG # This is MSR that shows to user configuration of uncore PMON's

0x3F1 IA32_PEBS_ENABLE # Intel-SDM-Vol4 PEBS Control

# Intel-SDM-Vol4 (Pentium 4 and Xeon)
PENTIUM4 0x3F2 PEBS_MATRIX_VERT

# Intel-SDM-Vol4 (10th Generation Intel Core)
CORE10 0x3F2 PEBS_DATA_CFG # PEBS Data Configuration

# Intel-SDM-Vol4 (1st Gen Core, Nehalem Microarchitecture) See Section 20.3.1.1.2, "Load Latency Performance Monitoring Facility."
CORE1 0x3F6 PEBS_LD_LAT

# Intel-SDM-Vol4 (12th and 13th Generation Intel Core Processors) FrontEnd Precise Event Condition Select
# Intel-SDM-Vol4 (6th-13th Xeon Processor) FrontEnd Precise Event Condition Select
CORE12 0x3F7 PEBS_FRONTEND

# Intel-SDM-Vol4 (Atom)
ATOM 0x3F8 PKG_C2_RESIDENCY  # Package C2 Residency Counter
ATOM 0x3F9 PKG_C4_RESIDENCY  # Package C4 Residency Counter
ATOM 0x3FA PKG_C6_RESIDENCY  # Package C6 Residency Counter

# Intel-SDM-Vol4 (1st Gen Core, Nehalem Microarchitecture)
CORE1 0x3F8 PKG_C3_RESIDENCY  # Package C3 Residency Counter
CORE1 0x3F9 PKG_C6_RESIDENCY  # Package C6 Residency Counter
CORE1 0x3FA PKG_C7_RESIDENCY  # Package C7 Residency Counter
CORE1 0x3FC CORE_C3_RESIDENCY # CORE C3 Residency Counter
CORE1 0x3FD CORE_C6_RESIDENCY # CORE C6 Residency Counter

# Intel-SDM-Vol4 (2nd Gen Core, Sandy Bridge Microarchitecture)
CORE2 0x3FE CORE_C7_RESIDENCY # CORE C7 Residency Counter

# Intel-SDM-Vol4 (Intel Xeon Phi)
XEONPHI 0x3FC MC0_RESIDENCY     # Module C0 Residency Counter
XEONPHI 0x3FD MC6_RESIDENCY     # Module C6 Residency Counter
XEONPHI 0x3FF CORE_C6_RESIDENCY # CORE C6 Residency Counter

# Intel-SDM-Vol4
0x400 IA32_MC0_CTL
0x401 IA32_MC0_STATUS
0x402 IA32_MC0_ADDR
0x403 IA32_MC0_MISC
0x404 IA32_MC1_CTL
0x405 IA32_MC1_STATUS
0x406 IA32_MC1_ADDR
0x407 IA32_MC1_MISC
0x408 IA32_MC2_CTL
0x409 IA32_MC2_STATUS
0x40A IA32_MC2_ADDR
0x40B IA32_MC2_MISC
0x40C IA32_MC3_CTL
0x40D IA32_MC3_STATUS
0x40E IA32_MC3_ADDR
0x40F IA32_MC3_MISC
0x410 IA32_MC4_CTL
0x411 IA32_MC4_STATUS
0x412 IA32_MC4_ADDR
0x413 IA32_MC4_MISC
0x414 IA32_MC5_CTL
0x415 IA32_MC5_STATUS
0x416 IA32_MC5_ADDR
0x417 IA32_MC5_MISC
0x418 IA32_MC6_CTL
0x419 IA32_MC6_STATUS
0x41A IA32_MC6_ADDR
0x41B IA32_MC6_MISC
0x41C IA32_MC7_CTL
0x41D IA32_MC7_STATUS
0x41E IA32_MC7_ADDR
0x41F IA32_MC7_MISC
0x420 IA32_MC8_CTL
0x421 IA32_MC8_STATUS
0x422 IA32_MC8_ADDR
0x423 IA32_MC8_MISC
0x424 IA32_MC9_CTL
0x425 IA32_MC9_STATUS
0x426 IA32_MC9_ADDR
0x427 IA32_MC9_MISC
0x428 IA32_MC10_CTL
0x429 IA32_MC10_STATUS
0x42A IA32_MC10_ADDR
0x42B IA32_MC10_MISC
0x42C IA32_MC11_CTL
0x42D IA32_MC11_STATUS
0x42E IA32_MC11_ADDR
0x42F IA32_MC11_MISC
0x430 IA32_MC12_CTL
0x431 IA32_MC12_STATUS
0x432 IA32_MC12_ADDR
0x433 IA32_MC12_MISC
0x434 IA32_MC13_CTL
0x435 IA32_MC13_STATUS
0x436 IA32_MC13_ADDR
0x437 IA32_MC13_MISC
0x438 IA32_MC14_CTL
0x439 IA32_MC14_STATUS
0x43A IA32_MC14_ADDR
0x43B IA32_MC14_MISC
0x43C IA32_MC15_CTL
0x43D IA32_MC15_STATUS
0x43E IA32_MC15_ADDR
0x43F IA32_MC15_MISC
0x440 IA32_MC16_CTL
0x441 IA32_MC16_STATUS
0x442 IA32_MC16_ADDR
0x443 IA32_MC16_MISC
0x444 IA32_MC17_CTL
0x445 IA32_MC17_STATUS
0x446 IA32_MC17_ADDR
0x447 IA32_MC17_MISC
0x448 IA32_MC18_CTL
0x449 IA32_MC18_STATUS
0x44A IA32_MC18_ADDR
0x44B IA32_MC18_MISC
0x44C IA32_MC19_CTL
0x44D IA32_MC19_STATUS
0x44E IA32_MC19_ADDR
0x44F IA32_MC19_MISC
0x450 IA32_MC20_CTL
0x451 IA32_MC20_STATUS
0x452 IA32_MC20_ADDR
0x453 IA32_MC20_MISC
0x454 IA32_MC21_CTL
0x455 IA32_MC21_STATUS
0x456 IA32_MC21_ADDR
0x457 IA32_MC21_MISC
0x458 IA32_MC22_CTL
0x459 IA32_MC22_STATUS
0x45A IA32_MC22_ADDR
0x45B IA32_MC22_MISC
0x45C IA32_MC23_CTL
0x45D IA32_MC23_STATUS
0x45E IA32_MC23_ADDR
0x45F IA32_MC23_MISC
0x460 IA32_MC24_CTL
0x461 IA32_MC24_STATUS
0x462 IA32_MC24_ADDR
0x463 IA32_MC24_MISC
0x464 IA32_MC25_CTL
0x465 IA32_MC25_STATUS
0x466 IA32_MC25_ADDR
0x467 IA32_MC25_MISC
0x468 IA32_MC26_CTL
0x469 IA32_MC26_STATUS
0x46A IA32_MC26_ADDR
0x46B IA32_MC26_MISC
0x46C IA32_MC27_CTL
0x46D IA32_MC27_STATUS
0x46E IA32_MC27_ADDR
0x46F IA32_MC27_MISC
0x470 IA32_MC28_CTL
0x471 IA32_MC28_STATUS
0x472 IA32_MC28_ADDR
0x473 IA32_MC28_MISC
0x474 IA32_MC29_CTL
0x475 IA32_MC29_STATUS
0x476 IA32_MC29_ADDR
0x477 IA32_MC29_MISC
0x478 IA32_MC30_CTL
0x479 IA32_MC30_STATUS
0x47A IA32_MC30_ADDR
0x47B IA32_MC30_MISC
0x47C IA32_MC31_CTL
0x47D IA32_MC31_STATUS
0x47E IA32_MC31_ADDR
0x47F IA32_MC31_MISC

# Intel-SDM-Vol4 (Intel Core Solo and Duo): MC4 and MC3 are swapped
CORESOLO 0x40C IA32_MC4_CTL
CORESOLO 0x40D IA32_MC4_STATUS
CORESOLO 0x40E IA32_MC4_ADDR
CORESOLO 0x40F IA32_MC4_MISC
CORESOLO 0x410 IA32_MC3_CTL
CORESOLO 0x411 IA32_MC3_STATUS
CORESOLO 0x412 IA32_MC3_ADDR
CORESOLO 0x413 IA32_MC3_MISC

0x480 IA32_VMX_BASIC               # Intel-SDM-Vol4 Reporting Register of Basic VMX Capabilities
0x481 IA32_VMX_PINBASED_CTLS       # Intel-SDM-Vol4 Capability Reporting Register of Pin-Based VM-Execution Controls
0x482 IA32_VMX_PROCBASED_CTLS      # Intel-SDM-Vol4 Capability Reporting Register of Primary Processor-Based VM-Execution Controls
0x483 IA32_VMX_EXIT_CTLS           # Intel-SDM-Vol4 Capability Reporting Register of Primary VM-Exit Controls
0x484 IA32_VMX_ENTRY_CTLS          # Intel-SDM-Vol4 Capability Reporting Register of VM-Entry Control
0x485 IA32_VMX_MISC                # Intel-SDM-Vol4 Reporting Register of Miscellaneous VMX Capabilities
0x486 IA32_VMX_CR0_FIXED0          # Intel-SDM-Vol4 Capability Reporting Register of CR0 Bits Fixed to
0x487 IA32_VMX_CR0_FIXED1          # Intel-SDM-Vol4 Capability Reporting Register of CR0 Bits Fixed to 1
0x488 IA32_VMX_CR4_FIXED0          # Intel-SDM-Vol4 Capability Reporting Register of CR4 Bits Fixed to 0
0x489 IA32_VMX_CR4_FIXED1          # Intel-SDM-Vol4 Capability Reporting Register of CR4 Bits Fixed to 1
0x48A IA32_VMX_VMCS_ENUM           # Intel-SDM-Vol4 Capability Reporting Register of VMCS Field Enumeration
0x48B IA32_VMX_PROCBASED_CTLS2     # Intel-SDM-Vol4 Capability Reporting Register of Secondary Processor-Based VM-Execution Controls
0x48C IA32_VMX_EPT_VPID_CAP        # Intel-SDM-Vol4 Capability Reporting Register of EPT and VPID
0x48D IA32_VMX_TRUE_PINBASED_CTLS  # Intel-SDM-Vol4 Capability Reporting Register of Pin-Based VM-Execution Flex Controls
0x48E IA32_VMX_TRUE_PROCBASED_CTLS # Intel-SDM-Vol4 Capability Reporting Register of Primary Processor-Based VM-Execution Flex Controls
0x48F IA32_VMX_TRUE_EXIT_CTLS      # Intel-SDM-Vol4 Capability Reporting Register of VM-Exit Flex Controls
0x490 IA32_VMX_TRUE_ENTRY_CTLS     # Intel-SDM-Vol4 Capability Reporting Register of VM-Entry Flex Controls
0x491 IA32_VMX_VMFUNC              # Intel-SDM-Vol4 Capability Reporting Register of VMFunction Controls
0x492 IA32_VMX_PROCBASED_CTLS3     # Intel-SDM-Vol4 Capability Reporting Register of Tertiary Processor-Based VM-Execution Controls
0x493 IA32_VMX_EXIT_CTLS2          # Intel-SDM-Vol4 Capability Reporting Register of Secondary VM-Exit Controls

# Intel-SDM-Vol4 (2nd Gen Core, Sandy Bridge Microarchitecture)
CORE2 0x48C IA32_VMX_EPT_VPID_ENUM # Capability Reporting Register of EPT and VPID

# Intel-SDM-Vol4 (Intel Xeon Phi Processor 7215, 7285, 7295 Series)
XEONPHI7215 0x491 IA32_VMX_FMFUNC  # Capability Reporting Register of VM-Function Controls

# https://github.com/intel/perfmon/blob/16447cf3a2bfb0ed2a3c4649878baaefa9b3b332/secure-pmu-access-1.01.csv
0x4C1 IA32_A_PMC0 # Intel-SDM-Vol4 Full Width Writable IA32_PMC0 Alias
0x4C2 IA32_A_PMC1 # Intel-SDM-Vol4 Full Width Writable IA32_PMC1 Alias
0x4C3 IA32_A_PMC2 # Intel-SDM-Vol4 Full Width Writable IA32_PMC2 Alias
0x4C4 IA32_A_PMC3 # Intel-SDM-Vol4 Full Width Writable IA32_PMC3 Alias
0x4C5 IA32_A_PMC4 # Intel-SDM-Vol4 Full Width Writable IA32_PMC4 Alias
0x4C6 IA32_A_PMC5 # Intel-SDM-Vol4 Full Width Writable IA32_PMC5 Alias
0x4C7 IA32_A_PMC6 # Intel-SDM-Vol4 Full Width Writable IA32_PMC6 Alias
0x4C8 IA32_A_PMC7 # Intel-SDM-Vol4 Full Width Writable IA32_PMC7 Alias

0x4D0 IA32_MCG_EXT_CTL # Intel-SDM-Vol4 Allows software to signal some MCEs to only a single logical processor in the system

# Intel-SDM-Vol4 (4th Gen Core, Haswell Microarchitecture)
# https://github.com/LongJohnCoder/zprj/blob/b7c51c9cf4864df6aabb99a1ae843becd577237c/ReferenceCode/Haswell/Include/CpuRegs.h#L463-L469
CORE4 0x4E0 SMM_FEATURE_CONTROL # Enhanced SMM Feature Control
CORE4 0x4E1 SMM_ENABLE          # SMM Enable
CORE4 0x4E2 SMM_DELAYED         # SMM Delayed
CORE4 0x4E3 SMM_BLOCKED         # SMM Blocked

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x4E8 SMM_ENABLE_MATCH # This SMM_ENABLE_MASK and MATCH registers are used to select threads (Logical thread Id's) that should be servicing a Targeted SMI. BIOS programs the MASK register to indicate which bits should be masked before doing a MATCH check
XEONSCAL4 0x4EA SMM_ENABLE_MASK

# Intel-SDM-Vol4 Status and SVN Threshold of SGX Support for ACM
# From Intel SDM 38.11.3 Interactions with Authenticated Code Modules (ACMs)
# https://www.intel.com/content/dam/develop/external/us/en/documents-tps/intel-tdx-cpu-architectural-specification.pdf Intel Trust Domain CPU Architectural Extensions
0x500 IA32_SGX_SVN_STATUS # SGX SVN Status MSR. Bits[23:16] is SinitSeSvn. Bits[63:56] is SeamldrSeSvn

# From https://github.com/intel/seam-loader/blob/eadff76d36d214419c801f1cee1828ea437c91a5/p-seam-loader/src/common/x86_defs/msr_defs.h
0x503 IA32_SGX_DEBUG_MODE

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x504 PROBE_MODE_VMEXIT_REDIRECTION_REASON # Scratch Pad register PROBE_MODE_4. C6NoSave Candidate
XEONSCAL4 0x505 PROBE_MODE_VMX_REDIRECTION_INFO # VMX Redirection info used for Probe Mode
XEONSCAL4 0x508 PROBE_TLB_FLUSH # Probe mode MSR used to flush all TLBs
XEONSCAL4 0x509 PROBE_VMX_POINTER # Probe mode MSR used to read/write VMX pointers

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/SprMsr.h
XEONSCAL4 0x50A TIO_PM_DEBUG_STATUS # emulated by xucode --> cause pppe exit, described in SNC HSD 1304428988 - HCTIO/SoftCE: uArch support for TIO_DEBUG_STATUS MSRs

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x510 EPTP # Extended Page Table Pointer
XEONSCAL4 0x511 AET_MISC_ENABLE # Programmed in Probe mode, used in PDM. Need to save in C6 (AET = Architectural Event Trace ; PDM = Probeless Debug Methodology)
XEONSCAL4 0x512 AET_EVENT_CTRL # AET (PDM) Event Control Register
XEONSCAL4 0x513 PROBE_MODE_PPPE_REDIRECTION_INFO # PPPE Redirection info used for Probe Mode
XEONSCAL4 0x514 PROBE_MODE_RESERVED_1_1 # This define is used to reserve some MSR addresses for probe mode. Ucode would have a dedicated handler for these MSRs
XEONSCAL4 0x515 PROBE_MODE_RESERVED_2_2
XEONSCAL4 0x516 PROBE_MODE_RESERVED_3_3
XEONSCAL4 0x517 PROBE_MODE_RESERVED_4_4
XEONSCAL4 0x518 PROBE_MODE_RESERVED_5_5
XEONSCAL4 0x519 PROBE_MODE_RESERVED_6_6
XEONSCAL4 0x51A PROBE_MODE_RESERVED_7_7
XEONSCAL4 0x51B PROBE_MODE_RESERVED_8_8
XEONSCAL4 0x51C PROBE_MODE_RESERVED_9_9
XEONSCAL4 0x51D PROBE_MODE_RESERVED_10_10
XEONSCAL4 0x51E PROBE_MODE_RESERVED_11_11
XEONSCAL4 0x51F PROBE_MODE_RESERVED_12_12
XEONSCAL4 0x520 ICECTLPMR_PRIOR_STATE # Scratch Pad register ICECTLPMR_PRIOR_STATE. Used only by probe mode. C6NoSave candidate
XEONSCAL4 0x521 AET_BASE_ADDRESS # AET base address. programmed by probe mode software. Ucode will use it as the address where it will send all PDM messages

# https://twitter.com/_markel___/status/1450854279267459077 2021-10 "Found undocumented Intel PDM (Probe-less Debug Methodology) mechanism implemented in microcode. FSCP_CR_PDM_CTRL is exposed via MSR 0x512 for Goldmont"
?ATOMGOLDMONT 0x512 FSCP_CR_PDM_CTRL # Probe-less Debug Methodology Control

# Intel-SDM-Vol4 (12th and 13th Generation Intel Core Processors)
CORE12 0x540 THREAD_UARCH_CTL # Thread Microarchitectural Control

# Intel-SDM-Vol4 (10th Generation Intel Core)
CORE10 0x541 CORE_UARCH_CTL   # Core Microarchitecture Control

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/GnrMsr.h
XEONSCAL4 0x550 SEAM_SAI_MODE # Used by SEAM loader ACM to set the SEAM SAI from the core

0x560 IA32_RTIT_OUTPUT_BASE      # Intel-SDM-Vol4 Trace Output Base Register
0x561 IA32_RTIT_OUTPUT_MASK_PTRS # Intel-SDM-Vol4 Trace Output Mask Pointers Register
0x570 IA32_RTIT_CTL              # Intel-SDM-Vol4 Trace Control Register
0x571 IA32_RTIT_STATUS           # Intel-SDM-Vol4 Tracing Status Register
0x572 IA32_RTIT_CR3_MATCH        # Intel-SDM-Vol4 Trace Filter CR3 Match Register
0x580 IA32_RTIT_ADDR0_A          # Intel-SDM-Vol4 Region 0 Start Address
0x581 IA32_RTIT_ADDR0_B          # Intel-SDM-Vol4 Region 0 End Address
0x582 IA32_RTIT_ADDR1_A          # Intel-SDM-Vol4 Region 1 Start Address
0x583 IA32_RTIT_ADDR1_B          # Intel-SDM-Vol4 Region 1 End Address
0x584 IA32_RTIT_ADDR2_A          # Intel-SDM-Vol4 Region 2 Start Address
0x585 IA32_RTIT_ADDR2_B          # Intel-SDM-Vol4 Region 2 End Address
0x586 IA32_RTIT_ADDR3_A          # Intel-SDM-Vol4 Region 3 Start Address
0x587 IA32_RTIT_ADDR3_B          # Intel-SDM-Vol4 Region 3 End Address

# https://github.com/coreboot/coreboot/blob/4.18/src/cpu/intel/model_6fx/model_6fx_init.c
0x5A0 IA32_PECI_CTL

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/SprMsr.h
XEONSCAL4 0x5F0 DD_HASH_SEED_INIT         # addr conver msr in dedup for dlid
XEONSCAL4 0x5F1 DD_THROTTLE_DISABLE       # command reg in ACE IP
XEONSCAL4 0x5F2 DD_REVERSE_ADDR_CONV_SA   # addr conv msr in dedup
XEONSCAL4 0x5F3 DD_REVERSE_ADDR_CONV_DLID # addr conver msr in dedup for dlid
XEONSCAL4 0x5F4 DD_REVERSE_ADDR_CONV_SA1  # addr conver msr in dedup SA1
XEONSCAL4 0x5F5 DD_REVERSE_ADDR_CONV_SA2  # ddr conver msr in dedup SA2
XEONSCAL4 0x5F6 DD_REMAP_LIST             # remap list msr

# In SgxLateInitSPR UEFI module 4th Generation Intel Xeon Scalable Processor Family), it is named MCHECK_CMCS_MSR
0x600 IA32_DS_AREA               # Intel-SDM-Vol4 DS Save Area

# Intel-SDM-Vol4 (11th Generation Intel Core)
CORE11 0x601 VR_CURRENT_CONFIG # Power Limit 4 (PL4). It is Icc limit on some power-delivery board element, mapped into W. It is proactive, instantaneous limit.

# https://github.com/coreboot/coreboot/blob/4.18/src/cpu/intel/model_206ax/model_206ax.h
INTEL206AX 0x601 PP0_CURRENT_CONFIG
INTEL206AX 0x602 PP1_CURRENT_CONFIG

# https://github.com/coreboot/coreboot/blob/4.18/src/cpu/intel/haswell/haswell.h
CORE4 0x603 VR_MISC_CONFIG # Input voltage regulator configuration parameters.

# Intel-SDM-Vol4 (4th Gen Core, Haswell Microarchitecture)
# Intel-SDM-Vol4 (Xeon Processor E5 v3)
CORE4 0x606 RAPL_POWER_UNIT # Unit Multipliers Used in RAPL (Run Time Average Power Limiting) Interfaces

# https://github.com/coreboot/coreboot/blob/4.18/src/soc/intel/braswell/include/soc/msr.h
ATOMBRASWELL 0x606 PKG_POWER_SKU_UNIT # Defines units for calculating SKU power and timing parameters

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x607 BIOS_MAILBOX_INTERFACE # Control and Status register for the BIOS-to-PCODE mailbox. This mailbox is implemented as a means for accessing statistics and implementing PCODE patches. This register is used in conjunction with BIOS_MAILBOX_DATA
XEONSCAL4 0x608 BIOS_MAILBOX_DATA # Data register for the BIOS-to-PCODE mailbox
XEONSCAL4 0x609 PST_CONFIG_CONTROL # This MSR reads/writes THREAD_P_REQ[P_STATE_OFFSET]

# Intel-SDM-Vol4 (2nd Gen Core, Sandy Bridge Microarchitecture)
CORE2 0x60A PKGC3_IRTL        # Package C3 Interrupt Response Limit
CORE2 0x60B PKGC6_IRTL        # Package C6 Interrupt Response Limit
CORE2 0x60C PKGC7_IRTL        # Package C7 Interrupt Response Limit
CORE2 0x60D PKG_C2_RESIDENCY  # Package C2 Residency Counter
# https://github.com/intel/powergov/blob/cdfd69c063db50679b8dd453067c889f24a219dc/msr.h
CORE2 0x610 PKG_POWER_LIMIT   # PKG RAPL Power Limit Control
CORE2 0x611 PKG_ENERGY_STATUS # PKG Energy Status
CORE2 0x614 PKG_POWER_INFO    # PKG RAPL Parameters

# https://github.com/coreboot/coreboot/blob/4.18/src/soc/intel/skylake/include/soc/msr.h
CORE6 0x615 PL3_CONTROL

# Intel-SDM-Vol4 (4th Gen Core, Haswell Microarchitecture)
CORE4 0x60B PKGC_IRTL1        # Package C6/C7 Interrupt Response Limit 1
CORE4 0x60C PKGC_IRTL2        # Package C6/C7 Interrupt Response Limit 2

# https://github.com/coreboot/coreboot/blob/4.18/src/cpu/intel/haswell/haswell.h
CORE4HASWELL 0x60A C_STATE_LATENCY_CONTROL_0  # Same as PKGC3_IRTL
CORE4HASWELL 0x60B C_STATE_LATENCY_CONTROL_1  # Same as PKGC_IRTL1
CORE4HASWELL 0x60C C_STATE_LATENCY_CONTROL_2  # Same as PKGC_IRTL2

# Intel-SDM-Vol4 (7th and 8th Generation Intel Core Processors, Intel Core i3)
CORE7 0x620 RING_RATIO_LIMIT # Ring Ratio Limit

# Intel-SDM-Vol4 (3rd Generation Intel Xeon Scalable Processor Family)
XEONSCAL3 0x612 PACKAGE_ENERGY_TIME_STATUS # Package energy consumed by the entire CPU

# Intel-SDM-Vol4 (Intel Xeon Processor E5)
# https://github.com/intel/powergov/blob/cdfd69c063db50679b8dd453067c889f24a219dc/msr.h
XEONE5 0x613 PKG_PERF_STATUS    # Package RAPL Perf Status
XEONE5 0x618 DRAM_POWER_LIMIT   # DRAM RAPL Power Limit Control
XEONE5 0x619 DRAM_ENERGY_STATUS # DRAM Energy Status
XEONE5 0x61B DRAM_PERF_STATUS   # DRAM Performance Throttling Status
XEONE5 0x61C DRAM_POWER_INFO    # DRAM RAPL Parameters

# Intel-SDM-Vol4 (Xeon Processor E5 v3)
XEONE5V3 0x61E PCIE_PLL_RATIO     # Configuration of PCIE PLL Relative to BCLK
XEONE5V3 0x620 UNCORE_RATIO_LIMIT # Uncore Ratio Limit

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x610 PACKAGE_RAPL_LIMIT # This register allows platform BIOS to limit the power consumption of the processor to the specified values
XEONSCAL4 0x611 PACKAGE_ENERGY_STATUS # Package energy consumed by the entire CPU (including IA, GT and uncore). The counter will wrap around and continue counting when it reaches its limit. The energy status is reported in units which are defined in PACKAGE_POWER_SKU_UNIT_MSR[ENERGY_UNIT]
XEONSCAL4 0x612 PACKAGE_ENERGY_TIME_STATUS # Package energy consumed by the entire CPU (including IA, GT and uncore). The counter will wrap around and continue counting when it reaches its limit. The energy status is reported in units which are defined in PACKAGE_POWER_SKU_UNIT_MSR[ENERGY_UNIT]
XEONSCAL4 0x613 PACKAGE_RAPL_PERF_STATUS # Package RAPL Performance Status Register. This register provides information on the performance impact of the RAPL power limit and indicates the duration for processor went below the requested P-state due to package power constraint
XEONSCAL4 0x614 PACKAGE_POWER_SKU # Defines allowed SKU power and timing parameters. PCODE will update the contents of this register
XEONSCAL4 0x615 PL3_CONTROL # Read/write data from/to pcode through internal mailbox
XEONSCAL4 0x618 DRAM_PLANE_POWER_LIMIT # Allows software to set power limits for the DRAM domain and measurement attributes associated with each limit
XEONSCAL4 0x619 DDR_ENERGY_STATUS # Accumulates the energy consumed by the DIMMs (summed across all channels)
XEONSCAL4 0x61B DDR_RAPL_PERF_STATUS # Memory RAPL performance excursion counter. This register can report the performance impact of power limiting
XEONSCAL4 0x61C DRAM_POWER_INFO_CFG
XEONSCAL4 0x61D LLC_FLUSHED_RCNTR # Time spent with LLC flushed. Count at the same frequency as the TSC
XEONSCAL4 0x620 UNCORE_RATIO_LIMIT # Min/Max Ratio Limits for Uncore
XEONSCAL4 0x621 UNCORE_PERF_STATUS # Ring and Last Level Cache Performance Status
XEONSCAL4 0x622 PCH_EA_CONTROL # Gives SW ability to trigger a PMReq through Pcode to put the chipset and other devices off of the chipset into a low power state
XEONSCAL4 0x623 PCH_EA_STATUS # Reflect the value of control when PCH has responded to request from PCH_EA_CONTROL

# Intel-SDM-Vol4 (4th Gen Core, Haswell Microarchitecture)
CORE4 0x630 PKG_C8_RESIDENCY  # Package C8 Residency Counter
CORE4 0x631 PKG_C9_RESIDENCY  # Package C9 Residency Counter
CORE4 0x632 PKG_C10_RESIDENCY # Package C10 Residency Counter

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h?h=v6.1 (put in "CORE4" to be consistent with PKG_C8_RESIDENCY)
CORE4 0x633 PKGC8_IRTL   # Package C8 Interrupt Response Limit
CORE4 0x634 PKGC9_IRTL   # Package C9 Interrupt Response Limit
CORE4 0x635 PKGC10_IRTL  # Package C10 Interrupt Response Limit

# https://github.com/coreboot/coreboot/blob/4.18/src/cpu/intel/haswell/haswell.h
CORE4HASWELL 0x633 C_STATE_LATENCY_CONTROL_3  # Same as PKGC8_IRTL
CORE4HASWELL 0x634 C_STATE_LATENCY_CONTROL_4  # Same as PKGC9_IRTL
CORE4HASWELL 0x635 C_STATE_LATENCY_CONTROL_5  # Same as PKGC10_IRTL
CORE4 0x636 VR_MISC_CONFIG2 # Input voltage regulator configuration parameters

# https://github.com/coreboot/coreboot/blob/4.18/src/soc/intel/common/block/include/intelblocks/msr.h
0x637 COUNTER_24_MHZ

# https://github.com/coreboot/coreboot/blob/4.18/src/soc/intel/braswell/include/soc/msr.h
ATOMBRASWELL 0x638 PP1_POWER_LIMIT

# Intel-SDM-Vol4 (2nd Gen Core, Sandy Bridge Microarchitecture)
# https://github.com/intel/powergov/blob/cdfd69c063db50679b8dd453067c889f24a219dc/msr.h
CORE2 0x638 PP0_POWER_LIMIT   # PP0 RAPL Power Limit Control
CORE2 0x639 PP0_ENERGY_STATUS # PP0 Energy Status
CORE2 0x63A PP0_POLICY        # PP0 Balance Policy

# Intel-SDM-252046-040 (2nd Gen Core, Sandy Bridge Microarchitecture)
CORE2 0x63B PP0_PERF_STATUS   # PP0 Performance Throttling Status

# Intel-SDM-Vol4 (2nd Gen Core, Sandy Bridge Microarchitecture)
# https://github.com/intel/powergov/blob/cdfd69c063db50679b8dd453067c889f24a219dc/msr.h
CORE2 0x640 PP1_POWER_LIMIT   # PP1 RAPL Power Limit Control
CORE2 0x641 PP1_ENERGY_STATUS # PP1 Energy Status
CORE2 0x642 PP1_POLICY        # PP1 Balance Policy

# Intel-SDM-Vol4 (3rd Gen Core, Ivy Bridge Microarchitecture)
CORE3 0x648 CONFIG_TDP_NOMINAL     # Base TDP Ratio
CORE3 0x649 CONFIG_TDP_LEVEL1      # ConfigTDP Level 1 ratio and power level
CORE3 0x64A CONFIG_TDP_LEVEL2      # ConfigTDP Level 2 ratio and power level
CORE3 0x64B CONFIG_TDP_CONTROL     # ConfigTDP Control
CORE3 0x64C TURBO_ACTIVATION_RATIO # ConfigTDP Control

# Intel-SDM-Vol4 (12th and 13th Generation Intel Core Processors)
CORE12 0x650 SECONDARY_TURBO_RATIO_LIMIT # Secondary Maximum Turbo Ratio Limit

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x651 ATOM_TURBO_RATIO_LIMIT_CORES # This register defines the active core ranges for each frequency point
XEONSCAL4 0x654 THREAD_INFO # Contains software threads information for the current ia_thread

# Intel-SDM-Vol4 (10th Generation Intel Core)
CORE10 0x657 FAST_UNCORE_MSRS_CTL        # Thread Fast WRMSR/RDMSR Control MSR
CORE10 0x65E FAST_UNCORE_MSRS_STATUS     # Indication of Uncore MSRs, Post Write Activates
CORE10 0x65F FAST_UNCORE_MSRS_CAPABILITY # Fast WRMSR/RDMSR Enumeration MSR

# Intel-SDM-Vol4 (6th-13th Xeon Processor)
# https://github.com/intel/powergov/blob/cdfd69c063db50679b8dd453067c889f24a219dc/msr.h
XEON6 0x64D PLATFORM_ENERGY_COUNTER   # Platform Energy Counter
XEON6 0x64E PPERF                     # Productive Performance Count
XEON6 0x64F CORE_PERF_LIMIT_REASONS   # Indicator of Frequency Clipping in Processor Cores
XEON6 0x652 PKG_HDC_CONFIG            # HDC Configuration
XEON6 0x653 CORE_HDC_RESIDENCY        # Core HDC Idle Residency
XEON6 0x655 PKG_HDC_SHALLOW_RESIDENCY # Accumulate the cycles the package was in C2 state and at least one logical processor was in forced idle
XEON6 0x656 PKG_HDC_DEEP_RESIDENCY    # Package Cx HDC Idle Residency
XEON6 0x658 WEIGHTED_CORE_C0          # Core-count Weighted C0 Residency
XEON6 0x659 ANY_CORE_C0               # Any Core C0 Residency
XEON6 0x65A ANY_GFXE_C0               # Any Graphics Engine C0 Residency
XEON6 0x65B CORE_GFXE_OVERLAP_C0      # Core and Graphics Engine Overlapped C0 Residency
XEON6 0x65C PLATFORM_POWER_LIMIT      # Platform Power Limit Control

# Intel-SDM-Vol4 (8th Generation Intel Core i3)
CORE8 0x660 CORE_C1_RESIDENCY  # Core C1 Residency Counter
CORE8 0x662 CORE_C3_RESIDENCY  # Core C3 Residency Counter

# Intel-SDM-Vol4 (12th and 13th Generation Intel Core Processors) Module C6 Residency Counter
CORE12 0x664 MC6_RESIDENCY_COUNTER # Time that this module is in module-specific C6 states since last reset. Counts at 1 Mhz frequency.

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x665 PLATFORM_POWER_INFO # Package energy consumed by the entire CPU (including IA, GT and uncore). The counter will wrap around and continue counting when it reaches its limit. The energy status is reported in units which are defined in PACKAGE_POWER_SKU_UNIT_MSR[ENERGY_UNIT]
XEONSCAL4 0x666 PLATFORM_RAPL_SOCKET_PERF_STATUS # Package energy consumed by the entire CPU (including IA, GT and uncore). The counter will wrap around and continue counting when it reaches its limit. The energy status is reported in units which are defined in PACKAGE_POWER_SKU_UNIT_MSR[ENERGY_UNIT]

# Intel-SDM-Vol4 (Intel Atom Processor E3000 Series)
ATOME3000 0x668 CC6_DEMOTION_POLICY_CONFIG # Core C6 Demotion Policy Config MSR
ATOME3000 0x669 MC6_DEMOTION_POLICY_CONFIG # Module C6 Demotion Policy Config MSR

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h?h=v6.1
ATOM 0x66A CORE_RATIOS
ATOM 0x66B CORE_VIDS
ATOM 0x66C CORE_TURBO_RATIOS
ATOM 0x66D CORE_TURBO_VIDS

# Intel-SDM-Vol4 (Intel Atom Processor C2000 Series)
ATOMC2000 0x66E PKG_POWER_INFO # PKG RAPL Parameter

# https://github.com/coreboot/coreboot/blob/4.18/src/soc/intel/braswell/include/soc/msr.h
ATOMBRASWELL 0x670 PKG_TURBO_CFG1
ATOMBRASWELL 0x671 CPU_TURBO_WKLD_CFG1
ATOMBRASWELL 0x672 CPU_TURBO_WKLD_CFG2
ATOMBRASWELL 0x673 CPU_THERM_CFG1
ATOMBRASWELL 0x674 CPU_THERM_CFG2
ATOMBRASWELL 0x675 CPU_THERM_SENS_CFG

# Intel-SDM-Vol4 (1st Gen Core, Nehalem Microarchitecture) Last Branch Record 0 From IP
CORE1 0x680 LASTBRANCH_0_FROM_IP
CORE1 0x681 LASTBRANCH_1_FROM_IP
CORE1 0x682 LASTBRANCH_2_FROM_IP
CORE1 0x683 LASTBRANCH_3_FROM_IP
CORE1 0x684 LASTBRANCH_4_FROM_IP
CORE1 0x685 LASTBRANCH_5_FROM_IP
CORE1 0x686 LASTBRANCH_6_FROM_IP
CORE1 0x687 LASTBRANCH_7_FROM_IP
CORE1 0x688 LASTBRANCH_8_FROM_IP
CORE1 0x689 LASTBRANCH_9_FROM_IP
CORE1 0x68A LASTBRANCH_10_FROM_IP
CORE1 0x68B LASTBRANCH_11_FROM_IP
CORE1 0x68C LASTBRANCH_12_FROM_IP
CORE1 0x68D LASTBRANCH_13_FROM_IP
CORE1 0x68E LASTBRANCH_14_FROM_IP
CORE1 0x68F LASTBRANCH_15_FROM_IP

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x680 POWERPERF_CTL

# Intel-SDM-Vol4 (6th-13th Xeon Processor) Last Branch Record 16 From IP
CORE1 0x690 LASTBRANCH_16_FROM_IP
CORE1 0x691 LASTBRANCH_17_FROM_IP
CORE1 0x692 LASTBRANCH_18_FROM_IP
CORE1 0x693 LASTBRANCH_19_FROM_IP
CORE1 0x694 LASTBRANCH_20_FROM_IP
CORE1 0x695 LASTBRANCH_21_FROM_IP
CORE1 0x696 LASTBRANCH_22_FROM_IP
CORE1 0x697 LASTBRANCH_23_FROM_IP
CORE1 0x698 LASTBRANCH_24_FROM_IP
CORE1 0x699 LASTBRANCH_25_FROM_IP
CORE1 0x69A LASTBRANCH_26_FROM_IP
CORE1 0x69B LASTBRANCH_27_FROM_IP
CORE1 0x69C LASTBRANCH_28_FROM_IP
CORE1 0x69D LASTBRANCH_29_FROM_IP
CORE1 0x69E LASTBRANCH_30_FROM_IP
CORE1 0x69F LASTBRANCH_31_FROM_IP

# Intel-SDM-Vol4 (Xeon Processor E5 v3)
# Intel-SDM-Vol4 (4th Gen Core, Haswell Microarchitecture)
CORE4 0x690 CORE_PERF_LIMIT_REASONS # Indicator of Frequency Clipping in Processor Cores

0x6A0 IA32_U_CET   # Intel-SDM-Vol4 Configure User Mode CET
0x6A2 IA32_S_CET   # Intel-SDM-Vol4 Configure Supervisor Mode CET
0x6A4 IA32_PL0_SSP # Intel-SDM-Vol4 Linear address to be loaded into SSP on transition to privilege level 0
0x6A5 IA32_PL1_SSP # Intel-SDM-Vol4 Linear address to be loaded into SSP on transition to privilege level 1
0x6A6 IA32_PL2_SSP # Intel-SDM-Vol4 Linear address to be loaded into SSP on transition to privilege level 2
0x6A7 IA32_PL3_SSP # Intel-SDM-Vol4 Linear address to be loaded into SSP on transition to privilege level 3
0x6A8 IA32_INTERRUPT_SSP_TABLE_ADDR # Intel-SDM-Vol4 Linear address of a table of seven shadow stack pointers that are selected in IA-32e mode using the IST index (when not 0) from the interrupt gate descriptor

# Intel-SDM-Vol4 (4th Gen Core, Haswell Microarchitecture)
CORE4 0x6B0 GRAPHICS_PERF_LIMIT_REASONS # Indicator of Frequency Clipping in the Processor
CORE4 0x6B1 RING_PERF_LIMIT_REASONS     # Indicator of Frequency Clipping in the Ring Interconnect

# Intel-SDM-Vol4 (1st Gen Core, Nehalem Microarchitecture) Last Branch Record 0 To IP
CORE1 0x6C0 LASTBRANCH_0_TO_IP
CORE1 0x6C1 LASTBRANCH_1_TO_IP
CORE1 0x6C2 LASTBRANCH_2_TO_IP
CORE1 0x6C3 LASTBRANCH_3_TO_IP
CORE1 0x6C4 LASTBRANCH_4_TO_IP
CORE1 0x6C5 LASTBRANCH_5_TO_IP
CORE1 0x6C6 LASTBRANCH_6_TO_IP
CORE1 0x6C7 LASTBRANCH_7_TO_IP
CORE1 0x6C8 LASTBRANCH_8_TO_IP
CORE1 0x6C9 LASTBRANCH_9_TO_IP
CORE1 0x6CA LASTBRANCH_10_TO_IP
CORE1 0x6CB LASTBRANCH_11_TO_IP
CORE1 0x6CC LASTBRANCH_12_TO_IP
CORE1 0x6CD LASTBRANCH_13_TO_IP
CORE1 0x6CE LASTBRANCH_14_TO_IP
CORE1 0x6CF LASTBRANCH_15_TO_IP

# Intel-SDM-Vol4 (6th-13th Xeon Processor) Last Branch Record 16 To IP
CORE6 0x6D0 LASTBRANCH_16_TO_IP
CORE6 0x6D1 LASTBRANCH_17_TO_IP
CORE6 0x6D2 LASTBRANCH_18_TO_IP
CORE6 0x6D3 LASTBRANCH_19_TO_IP
CORE6 0x6D4 LASTBRANCH_20_TO_IP
CORE6 0x6D5 LASTBRANCH_21_TO_IP
CORE6 0x6D6 LASTBRANCH_22_TO_IP
CORE6 0x6D7 LASTBRANCH_23_TO_IP
CORE6 0x6D8 LASTBRANCH_24_TO_IP
CORE6 0x6D9 LASTBRANCH_25_TO_IP
CORE6 0x6DA LASTBRANCH_26_TO_IP
CORE6 0x6DB LASTBRANCH_27_TO_IP
CORE6 0x6DC LASTBRANCH_28_TO_IP
CORE6 0x6DD LASTBRANCH_29_TO_IP
CORE6 0x6DE LASTBRANCH_30_TO_IP
CORE6 0x6DF LASTBRANCH_31_TO_IP

0x6E0 IA32_TSC_DEADLINE  # Intel-SDM-Vol4 TSC Target of Local APIC's TSC Deadline Mode
0x6E1 IA32_PKRS          # Intel-SDM-Vol4 Specifies the PK permissions associated with each protection domain for supervisor page

# Intel-SDM-Vol4 (2nd Gen Core, Sandy Bridge Microarchitecture)
CORE2 0x700 UNC_CBO_0_PERFEVTSEL0 # Uncore C-Box 0, Counter 0 Event Select MSR
CORE2 0x701 UNC_CBO_0_PERFEVTSEL1 # Uncore C-Box 0, Counter 1 Event Select MSR
CORE2 0x702 UNC_CBO_0_PERFEVTSEL2 # Uncore C-Box 0, Counter 2 Event Select MSR
CORE2 0x703 UNC_CBO_0_PERFEVTSEL3 # Uncore C-Box 0, Counter 3 Event Select MSR
CORE2 0x705 UNC_CBO_0_UNIT_STATUS # Uncore C-Box 0, Unit Status for Counter 0-3
CORE2 0x706 UNC_CBO_0_PERFCTR0    # Uncore C-Box 0, Performance Counter 0
CORE2 0x707 UNC_CBO_0_PERFCTR1    # Uncore C-Box 0, Performance Counter 1
CORE2 0x708 UNC_CBO_0_PERFCTR2    # Uncore C-Box 0, Performance Counter 2
CORE2 0x709 UNC_CBO_0_PERFCTR3    # Uncore C-Box 0, Performance Counter 3
CORE2 0x710 UNC_CBO_1_PERFEVTSEL0 # Uncore C-Box 1, Counter 0 Event Select MSR
CORE2 0x711 UNC_CBO_1_PERFEVTSEL1 # Uncore C-Box 1, Counter 1 Event Select MSR
CORE2 0x712 UNC_CBO_1_PERFEVTSEL2 # Uncore C-Box 1, Counter 2 Event Select MSR
CORE2 0x713 UNC_CBO_1_PERFEVTSEL3 # Uncore C-Box 1, Counter 3 Event Select MSR
CORE2 0x715 UNC_CBO_1_UNIT_STATUS # Uncore C-Box 1, Unit Status for Counter 0-3
CORE2 0x716 UNC_CBO_1_PERFCTR0    # Uncore C-Box 1, Performance Counter 0
CORE2 0x717 UNC_CBO_1_PERFCTR1    # Uncore C-Box 1, Performance Counter 1
CORE2 0x718 UNC_CBO_1_PERFCTR2    # Uncore C-Box 1, Performance Counter 2
CORE2 0x719 UNC_CBO_1_PERFCTR3    # Uncore C-Box 1, Performance Counter 3
CORE2 0x720 UNC_CBO_2_PERFEVTSEL0 # Uncore C-Box 2, Counter 0 Event Select MSR
CORE2 0x721 UNC_CBO_2_PERFEVTSEL1 # Uncore C-Box 2, Counter 1 Event Select MSR
CORE2 0x722 UNC_CBO_2_PERFEVTSEL2 # Uncore C-Box 2, Counter 2 Event Select MSR
CORE2 0x723 UNC_CBO_2_PERFEVTSEL3 # Uncore C-Box 2, Counter 3 Event Select MSR
CORE2 0x725 UNC_CBO_2_UNIT_STATUS # Uncore C-Box 2, Unit Status for Counter 0-3
CORE2 0x726 UNC_CBO_2_PERFCTR0    # Uncore C-Box 2, Performance Counter 0
CORE2 0x727 UNC_CBO_2_PERFCTR1    # Uncore C-Box 2, Performance Counter 1
CORE2 0x728 UNC_CBO_2_PERFCTR2    # Uncore C-Box 2, Performance Counter 2
CORE2 0x729 UNC_CBO_2_PERFCTR3    # Uncore C-Box 2, Performance Counter 3
CORE2 0x730 UNC_CBO_3_PERFEVTSEL0 # Uncore C-Box 3, Counter 0 Event Select MSR
CORE2 0x731 UNC_CBO_3_PERFEVTSEL1 # Uncore C-Box 3, Counter 1 Event Select MSR
CORE2 0x732 UNC_CBO_3_PERFEVTSEL2 # Uncore C-Box 3, Counter 2 Event Select MSR
CORE2 0x733 UNC_CBO_3_PERFEVTSEL3 # Uncore C-Box 3, counter 3 Event Select MSR
CORE2 0x735 UNC_CBO_3_UNIT_STATUS # Uncore C-Box 3, Unit Status for Counter 0-3
CORE2 0x736 UNC_CBO_3_PERFCTR0    # Uncore C-Box 3, Performance Counter 0
CORE2 0x737 UNC_CBO_3_PERFCTR1    # Uncore C-Box 3, Performance Counter 1
CORE2 0x738 UNC_CBO_3_PERFCTR2    # Uncore C-Box 3, Performance Counter 2
CORE2 0x739 UNC_CBO_3_PERFCTR3    # Uncore C-Box 3, Performance Counter 3
CORE2 0x740 UNC_CBO_4_PERFEVTSEL0 # Uncore C-Box 4, Counter 0 Event Select MSR
CORE2 0x741 UNC_CBO_4_PERFEVTSEL1 # Uncore C-Box 4, Counter 1 Event Select MSR
CORE2 0x742 UNC_CBO_4_PERFEVTSEL2 # Uncore C-Box 4, Counter 2 Event Select MSR
CORE2 0x743 UNC_CBO_4_PERFEVTSEL3 # Uncore C-Box 4, Counter 3 Event Select MSR
CORE2 0x745 UNC_CBO_4_UNIT_STATUS # Uncore C-Box 4, Unit status for Counter 0-3
CORE2 0x746 UNC_CBO_4_PERFCTR0    # Uncore C-Box 4, Performance Counter 0
CORE2 0x747 UNC_CBO_4_PERFCTR1    # Uncore C-Box 4, Performance Counter 1
CORE2 0x748 UNC_CBO_4_PERFCTR2    # Uncore C-Box 4, Performance Counter 2
CORE2 0x749 UNC_CBO_4_PERFCTR3    # Uncore C-Box 4, Performance Counter 3

# Intel-SDM-Vol4 (Intel Xeon Processor E5 v3)
XEONE5V3 0x700 PMON_GLOBAL_CTL       # Uncore Perfmon Per-Socket Global Control
XEONE5V3 0x701 PMON_GLOBAL_STATUS    # Uncore Perfmon Per-Socket Global Status
XEONE5V3 0x702 PMON_GLOBAL_CONFIG    # Uncore Perfmon Per-Socket Global Configuration
XEONE5V3 0x703 U_PMON_UCLK_FIXED_CTL # Uncore U-Box UCLK Fixed Counter Control
XEONE5V3 0x704 U_PMON_UCLK_FIXED_CTR # Uncore U-Box UCLK Fixed Counter
XEONE5V3 0x705 U_PMON_EVNTSEL0       # Uncore U-Box Perfmon Event Select for U-Box Counter 0
XEONE5V3 0x706 U_PMON_EVNTSEL1       # Uncore U-Box Perfmon Event Select for U-Box Counter 1
XEONE5V3 0x708 U_PMON_BOX_STATUS     # Uncore U-Box Perfmon U-Box Wide Status
XEONE5V3 0x709 U_PMON_CTR0           # Uncore U-Box Perfmon Counter 0
XEONE5V3 0x70A U_PMON_CTR1           # Uncore U-Box Perfmon Counter 1
XEONE5V3 0x710 PCU_PMON_BOX_CTL      # Uncore PCU Perfmon for PCU-Box-Wide Control
XEONE5V3 0x711 PCU_PMON_EVNTSEL0     # Uncore PCU Perfmon Event Select for PCU Counter 0
XEONE5V3 0x712 PCU_PMON_EVNTSEL1     # Uncore PCU Perfmon Event Select for PCU Counter 1
XEONE5V3 0x713 PCU_PMON_EVNTSEL2     # Uncore PCU Perfmon Event Select for PCU Counter 2
XEONE5V3 0x714 PCU_PMON_EVNTSEL3     # Uncore PCU Perfmon Event Select for PCU Counter 3
XEONE5V3 0x715 PCU_PMON_BOX_FILTER   # Uncore PCU Perfmon Box-Wide Filter
XEONE5V3 0x716 PCU_PMON_BOX_STATUS   # Uncore PCU Perfmon Box Wide Status
XEONE5V3 0x717 PCU_PMON_CTR0         # Uncore PCU Perfmon Counter 0
XEONE5V3 0x718 PCU_PMON_CTR1         # Uncore PCU Perfmon Counter 1
XEONE5V3 0x719 PCU_PMON_CTR2         # Uncore PCU Perfmon Counter 2
XEONE5V3 0x71A PCU_PMON_CTR3         # Uncore PCU Perfmon Counter 3
XEONE5V3 0x720 S0_PMON_BOX_CTL       # Uncore SBo 0 Perfmon for SBo 0 Box-Wide Control
XEONE5V3 0x721 S0_PMON_EVNTSEL0      # Uncore SBo 0 Perfmon Event Select for SBo 0 Counter 0
XEONE5V3 0x722 S0_PMON_EVNTSEL1      # Uncore SBo 0 Perfmon Event Select for SBo 0 Counter 1
XEONE5V3 0x723 S0_PMON_EVNTSEL2      # Uncore SBo 0 Perfmon Event Select for SBo 0 Counter 2
XEONE5V3 0x724 S0_PMON_EVNTSEL3      # Uncore SBo 0 Perfmon Event Select for SBo 0 Counter 3
XEONE5V3 0x725 S0_PMON_BOX_FILTER    # Uncore SBo 0 Perfmon Box-Wide Filter
XEONE5V3 0x726 S0_PMON_CTR0          # Uncore SBo 0 Perfmon Counter 0
XEONE5V3 0x727 S0_PMON_CTR1          # Uncore SBo 0 Perfmon Counter 1
XEONE5V3 0x728 S0_PMON_CTR2          # Uncore SBo 0 Perfmon Counter 2
XEONE5V3 0x729 S0_PMON_CTR3          # Uncore SBo 0 Perfmon Counter 3
XEONE5V3 0x72A S1_PMON_BOX_CTL       # Uncore SBo 1 Perfmon for SBo 1 Box-Wide Control
XEONE5V3 0x72B S1_PMON_EVNTSEL0      # Uncore SBo 1 Perfmon Event Select for SBo 1 Counter 0
XEONE5V3 0x72C S1_PMON_EVNTSEL1      # Uncore SBo 1 Perfmon Event Select for SBo 1 Counter 1
XEONE5V3 0x72D S1_PMON_EVNTSEL2      # Uncore SBo 1 Perfmon Event Select for SBo 1 Counter 2
XEONE5V3 0x72E S1_PMON_EVNTSEL3      # Uncore SBo 1 Perfmon Event Select for SBo 1 Counter 3
XEONE5V3 0x72F S1_PMON_BOX_FILTER    # Uncore SBo 1 Perfmon Box-Wide Filter
XEONE5V3 0x730 S1_PMON_CTR0          # Uncore SBo 1 Perfmon Counter 0
XEONE5V3 0x731 S1_PMON_CTR1          # Uncore SBo 1 Perfmon Counter 1
XEONE5V3 0x732 S1_PMON_CTR2          # Uncore SBo 1 Perfmon Counter 2
XEONE5V3 0x733 S1_PMON_CTR3          # Uncore SBo 1 Perfmon Counter 3
XEONE5V3 0x734 S2_PMON_BOX_CTL       # Uncore SBo 2 Perfmon for SBo 2 Box-Wide Control
XEONE5V3 0x735 S2_PMON_EVNTSEL0      # Uncore SBo 2 Perfmon Event Select for SBo 2 Counter 0
XEONE5V3 0x736 S2_PMON_EVNTSEL1      # Uncore SBo 2 Perfmon Event Select for SBo 2 Counter 1
XEONE5V3 0x737 S2_PMON_EVNTSEL2      # Uncore SBo 2 Perfmon Event Select for SBo 2 Counter 2
XEONE5V3 0x738 S2_PMON_EVNTSEL3      # Uncore SBo 2 Perfmon Event Select for SBo 2 Counter 3
XEONE5V3 0x739 S2_PMON_BOX_FILTER    # Uncore SBo 2 Perfmon Box-Wide Filter
XEONE5V3 0x73A S2_PMON_CTR0          # Uncore SBo 2 Perfmon Counter 0
XEONE5V3 0x73B S2_PMON_CTR1          # Uncore SBo 2 Perfmon Counter 1
XEONE5V3 0x73C S2_PMON_CTR2          # Uncore SBo 2 Perfmon Counter 2
XEONE5V3 0x73D S2_PMON_CTR3          # Uncore SBo 2 Perfmon Counter 3
XEONE5V3 0x73E S3_PMON_BOX_CTL       # Uncore SBo 3 Perfmon for SBo 3 Box-Wide Control
XEONE5V3 0x73F S3_PMON_EVNTSEL0      # Uncore SBo 3 Perfmon Event Select for SBo 3 Counter 0
XEONE5V3 0x740 S3_PMON_EVNTSEL1      # Uncore SBo 3 Perfmon Event Select for SBo 3 Counter 1
XEONE5V3 0x741 S3_PMON_EVNTSEL2      # Uncore SBo 3 Perfmon Event Select for SBo 3 Counter 2
XEONE5V3 0x742 S3_PMON_EVNTSEL3      # Uncore SBo 3 Perfmon Event Select for SBo 3 Counter 3
XEONE5V3 0x743 S3_PMON_BOX_FILTER    # Uncore SBo 3 Perfmon Box-Wide Filter
XEONE5V3 0x744 S3_PMON_CTR0          # Uncore SBo 3 Perfmon Counter 0
XEONE5V3 0x745 S3_PMON_CTR1          # Uncore SBo 3 Perfmon Counter 1
XEONE5V3 0x746 S3_PMON_CTR2          # Uncore SBo 3 Perfmon Counter 2
XEONE5V3 0x747 S3_PMON_CTR3          # Uncore SBo 3 Perfmon Counter 3

# Intel-SDM-Vol4 (8th Gen Core, Cannon Lake Microarchitecture)
CORE8 0x700 UNC_CBO_0_PERFEVTSEL0 # Uncore C-Box 0, Counter 0 Event Select MSR
CORE8 0x701 UNC_CBO_0_PERFEVTSEL1 # Uncore C-Box 0, Counter 1 Event Select MSR
CORE8 0x702 UNC_CBO_0_PERFCTR0    # Uncore C-Box 0, Performance Counter 0
CORE8 0x703 UNC_CBO_0_PERFCTR1    # Uncore C-Box 0, Performance Counter 1
CORE8 0x708 UNC_CBO_1_PERFEVTSEL0 # Uncore C-Box 1, Counter 0 Event Select MSR
CORE8 0x709 UNC_CBO_1_PERFEVTSEL1 # Uncore C-Box 1, Counter 1 Event Select MSR
CORE8 0x70A UNC_CBO_1_PERFCTR0    # Uncore C-Box 1, Performance Counter 0
CORE8 0x70B UNC_CBO_1_PERFCTR1    # Uncore C-Box 1, Performance Counter 1
CORE8 0x710 UNC_CBO_2_PERFEVTSEL0 # Uncore C-Box 2, Counter 0 Event Select MSR
CORE8 0x711 UNC_CBO_2_PERFEVTSEL1 # Uncore C-Box 2, Counter 1 Event Select MSR
CORE8 0x712 UNC_CBO_2_PERFCTR0    # Uncore C-Box 2, Performance Counter 0
CORE8 0x713 UNC_CBO_2_PERFCTR1    # Uncore C-Box 2, Performance Counter 1
CORE8 0x718 UNC_CBO_3_PERFEVTSEL0 # Uncore C-Box 3, Counter 0 Event Select MSR
CORE8 0x719 UNC_CBO_3_PERFEVTSEL1 # Uncore C-Box 3, Counter 1 Event Select MSR
CORE8 0x71A UNC_CBO_3_PERFCTR0    # Uncore C-Box 3, Performance Counter 0
CORE8 0x71B UNC_CBO_3_PERFCTR1    # Uncore C-Box 3, Performance Counter 1
CORE8 0x720 UNC_CBO_4_PERFEVTSEL0 # Uncore C-Box 4, Counter 0 Event Select MSR
CORE8 0x721 UNC_CBO_4_PERFEVTSEL1 # Uncore C-Box 4, Counter 1 Event Select MSR
CORE8 0x722 UNC_CBO_4_PERFCTR0    # Uncore C-Box 4, Performance Counter 0
CORE8 0x723 UNC_CBO_4_PERFCTR1    # Uncore C-Box 4, Performance Counter 1
CORE8 0x728 UNC_CBO_5_PERFEVTSEL0 # Uncore C-Box 5, Counter 0 Event Select MSR
CORE8 0x729 UNC_CBO_5_PERFEVTSEL1 # Uncore C-Box 5, Counter 1 Event Select MSR
CORE8 0x72A UNC_CBO_5_PERFCTR0    # Uncore C-Box 5, Performance Counter 0
CORE8 0x72B UNC_CBO_5_PERFCTR1    # Uncore C-Box 5, Performance Counter 1
CORE8 0x730 UNC_CBO_6_PERFEVTSEL0 # Uncore C-Box 6, Counter 0 Event Select MSR
CORE8 0x731 UNC_CBO_6_PERFEVTSEL1 # Uncore C-Box 6, Counter 1 Event Select MSR
CORE8 0x732 UNC_CBO_6_PERFCTR0    # Uncore C-Box 6, Performance Counter 0
CORE8 0x733 UNC_CBO_6_PERFCTR1    # Uncore C-Box 6, Performance Counter 1
CORE8 0x738 UNC_CBO_7_PERFEVTSEL0 # Uncore C-Box 7, Counter 0 Event Select MSR
CORE8 0x739 UNC_CBO_7_PERFEVTSEL1 # Uncore C-Box 7, Counter 1 Event Select MSR
CORE8 0x73A UNC_CBO_7_PERFCTR0    # Uncore C-Box 7, Performance Counter 0
CORE8 0x73B UNC_CBO_7_PERFCTR1    # Uncore C-Box 7, Performance Counter 1

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/SprMsr.h
XEONSCAL4 0x71B RESIDENCY_CTR_SELECT # Spare Virtual MSRs in uncore Creg PLA
XEONSCAL4 0x71C RESIDENCY_CTR_CONFIG # Spare Virtual MSRs in uncore Creg PLA
XEONSCAL4 0x71D RESIDENCY_CTR        # Spare Virtual MSRs in uncore Creg PLA

0x770 IA32_PM_ENABLE        # Intel-SDM-Vol4 Enable/disable HWP (Hardware-Controlled Performance State)
0x771 IA32_HWP_CAPABILITIES # Intel-SDM-Vol4 HWP Performance Range Enumeration
0x772 IA32_HWP_REQUEST_PKG  # Intel-SDM-Vol4 Power Management Control Hints for All Logical Processors in a Package
0x773 IA32_HWP_INTERRUPT    # Intel-SDM-Vol4 Control HWP Native Interrupts
0x774 IA32_HWP_REQUEST      # Intel-SDM-Vol4 Power Management Control Hints to a Logical Processor
0x775 IA32_PECI_HWP_REQUEST_INFO # Intel-SDM-Vol4
0x776 IA32_HWP_CTL          # Intel-SDM-Vol4
0x777 IA32_HWP_STATUS       # Intel-SDM-Vol4 Log bits indicating changes to Guaranteed & excursions to Minimum

# http://www.iway-tech.com/Uploads/Content/2020-12-02/5fc739d5cafc5.pdf ASRock WC621D8A-2T User Manual "S/W Error Injection is supported by unlocking MSR 0x790"
# https://download.asrock.com/Manual/C621A%20WS.pdf AsRock C621A WS User Manual (same)
# https://download.gigabyte.com/FileList/Manual/server_manual_r161-r12_e_10.pdf Gigabyte R161-R12 User Manual "software error injection is supported by unlocking MSR 0x790."
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
0x790 ERR_INJ_LCK_UNLOCK_CTL # Software Error Injection. This MSR will write the ERRINJLCK bit of IIO, QPI, CBO, MC

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x791 UNCORE_SPARE_0_0 # Spare Virtual MSRs in uncore Creg PLA
XEONSCAL4 0x792 UNCORE_SPARE_1_1
XEONSCAL4 0x794 UNCORE_SPARE_2_2
XEONSCAL4 0x795 UNCORE_SPARE_3_3
XEONSCAL4 0x796 UNCORE_SPARE_4_4
XEONSCAL4 0x797 UNCORE_SPARE_5_5
XEONSCAL4 0x798 UNCORE_SPARE_6_6
XEONSCAL4 0x799 UNCORE_SPARE_7_7
XEONSCAL4 0x79A UNCORE_SPARE_8_8
XEONSCAL4 0x79B UNCORE_SPARE_9_9
XEONSCAL4 0x79C UNCORE_SPARE_10_10
XEONSCAL4 0x79D UNCORE_SPARE_11_11
XEONSCAL4 0x79E UNCORE_SPARE_12_12
XEONSCAL4 0x79F UNCORE_SPARE_13_13

# https://services.google.com/fh/files/misc/intel_tdx_-_full_report_041423.pdf
# https://enveloper14.rssing.com/chan-8140356/article43.html "Intel Xeon Processor E7-8800/4800 V3 Product Family Technical Overview", for Enhanced machine check architecture recovery Gen2 (EMCA2)
# https://cdrdv2-public.intel.com/671064/329176-mca-enhancements-in-intel-xeon-processors.pdf (formerly http://www.intel.com/content/dam/www/public/us/en/documents/white-papers/enhanced-mca-logging-xeon-paper.pdf) "MCA Enhancements in Intel Xeon Processors"
0x793 EXTENDED_MCG_PTR      # Extended Machine Check Pointer

# https://cdrdv2-public.intel.com/782715/356111-ucode-update.pdf Runtime Microcode Update (June 2023, 356111-001US)
0x7A0 IA32_MCU_SVN_CONFIG   # Microcode Update config (bit 0 is LOCK, bit 1 is DEFER_SVN (manual commit))
0x7A1 IA32_MCU_COMMIT_SVN   # Microcode Update commit Secure Version Number
0x7A2 IA32_MCU_SVN_INFO     # Microcode Update committed and pending SVN
0x7A4 IA32_MCU_ROLLBACK_MIN_ID # Minimal MCU revision ID for rollback
0x7A5 IA32_MCU_STAGING_MBOX_ADDR # MMIO platform physical address of the MCU Staging Control register

# 0x800-0x8FF is the x2APIC range

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x800 VIRTUAL_APIC_0_0 # Virtual APIC MSRs that are modeled by ucode
XEONSCAL4 0x801 VIRTUAL_APIC_1_1

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/SprMsr.h
XEONSCAL4 0x802 PIC_EXTENDED_LOCAL_APIC_ID # X2APIC Local APIC ID register

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x804 VIRTUAL_APIC_2_2
XEONSCAL4 0x805 VIRTUAL_APIC_3_3
XEONSCAL4 0x806 VIRTUAL_APIC_4_4
XEONSCAL4 0x807 VIRTUAL_APIC_5_5
XEONSCAL4 0x809 VIRTUAL_APIC_6_6
XEONSCAL4 0x80C VIRTUAL_APIC_7_7
XEONSCAL4 0x80E VIRTUAL_APIC_8_8
XEONSCAL4 0x829 VIRTUAL_APIC_9_9
XEONSCAL4 0x82A VIRTUAL_APIC_10_10
XEONSCAL4 0x82B VIRTUAL_APIC_11_11
XEONSCAL4 0x82C VIRTUAL_APIC_12_12
XEONSCAL4 0x82D VIRTUAL_APIC_13_13
XEONSCAL4 0x82E VIRTUAL_APIC_14_14
XEONSCAL4 0x831 VIRTUAL_APIC_15_15
XEONSCAL4 0x83A VIRTUAL_APIC_16_16
XEONSCAL4 0x83B VIRTUAL_APIC_17_17
XEONSCAL4 0x83C VIRTUAL_APIC_18_18
XEONSCAL4 0x83D VIRTUAL_APIC_19_19
XEONSCAL4 0x840 VIRTUAL_APIC_20_20
XEONSCAL4 0x841 VIRTUAL_APIC_21_21
XEONSCAL4 0x842 VIRTUAL_APIC_22_22
XEONSCAL4 0x843 VIRTUAL_APIC_23_23
XEONSCAL4 0x844 VIRTUAL_APIC_24_24
XEONSCAL4 0x845 VIRTUAL_APIC_25_25
XEONSCAL4 0x846 VIRTUAL_APIC_26_26
XEONSCAL4 0x847 VIRTUAL_APIC_27_27
XEONSCAL4 0x848 VIRTUAL_APIC_28_28
XEONSCAL4 0x849 VIRTUAL_APIC_29_29
XEONSCAL4 0x84A VIRTUAL_APIC_30_30
XEONSCAL4 0x84B VIRTUAL_APIC_31_31
XEONSCAL4 0x84C VIRTUAL_APIC_32_32
XEONSCAL4 0x84D VIRTUAL_APIC_33_33
XEONSCAL4 0x84E VIRTUAL_APIC_34_34
XEONSCAL4 0x84F VIRTUAL_APIC_35_35
XEONSCAL4 0x850 VIRTUAL_APIC_36_36
XEONSCAL4 0x851 VIRTUAL_APIC_37_37
XEONSCAL4 0x852 VIRTUAL_APIC_38_38
XEONSCAL4 0x853 VIRTUAL_APIC_39_39
XEONSCAL4 0x854 VIRTUAL_APIC_40_40
XEONSCAL4 0x855 VIRTUAL_APIC_41_41
XEONSCAL4 0x856 VIRTUAL_APIC_42_42
XEONSCAL4 0x857 VIRTUAL_APIC_43_43
XEONSCAL4 0x858 VIRTUAL_APIC_44_44
XEONSCAL4 0x859 VIRTUAL_APIC_45_45
XEONSCAL4 0x85A VIRTUAL_APIC_46_46
XEONSCAL4 0x85B VIRTUAL_APIC_47_47
XEONSCAL4 0x85C VIRTUAL_APIC_48_48
XEONSCAL4 0x85D VIRTUAL_APIC_49_49
XEONSCAL4 0x85E VIRTUAL_APIC_50_50
XEONSCAL4 0x85F VIRTUAL_APIC_51_51
XEONSCAL4 0x860 VIRTUAL_APIC_52_52
XEONSCAL4 0x861 VIRTUAL_APIC_53_53
XEONSCAL4 0x862 VIRTUAL_APIC_54_54
XEONSCAL4 0x863 VIRTUAL_APIC_55_55
XEONSCAL4 0x864 VIRTUAL_APIC_56_56
XEONSCAL4 0x865 VIRTUAL_APIC_57_57
XEONSCAL4 0x866 VIRTUAL_APIC_58_58
XEONSCAL4 0x867 VIRTUAL_APIC_59_59
XEONSCAL4 0x868 VIRTUAL_APIC_60_60
XEONSCAL4 0x869 VIRTUAL_APIC_61_61
XEONSCAL4 0x86A VIRTUAL_APIC_62_62
XEONSCAL4 0x86B VIRTUAL_APIC_63_63
XEONSCAL4 0x86C VIRTUAL_APIC_64_64
XEONSCAL4 0x86D VIRTUAL_APIC_65_65
XEONSCAL4 0x86E VIRTUAL_APIC_66_66
XEONSCAL4 0x86F VIRTUAL_APIC_67_67
XEONSCAL4 0x870 VIRTUAL_APIC_68_68
XEONSCAL4 0x871 VIRTUAL_APIC_69_69
XEONSCAL4 0x872 VIRTUAL_APIC_70_70
XEONSCAL4 0x873 VIRTUAL_APIC_71_71
XEONSCAL4 0x874 VIRTUAL_APIC_72_72
XEONSCAL4 0x875 VIRTUAL_APIC_73_73
XEONSCAL4 0x876 VIRTUAL_APIC_74_74
XEONSCAL4 0x877 VIRTUAL_APIC_75_75
XEONSCAL4 0x878 VIRTUAL_APIC_76_76
XEONSCAL4 0x879 VIRTUAL_APIC_77_77
XEONSCAL4 0x87A VIRTUAL_APIC_78_78
XEONSCAL4 0x87B VIRTUAL_APIC_79_79
XEONSCAL4 0x87C VIRTUAL_APIC_80_80
XEONSCAL4 0x87D VIRTUAL_APIC_81_81
XEONSCAL4 0x87E VIRTUAL_APIC_82_82
XEONSCAL4 0x87F VIRTUAL_APIC_83_83
XEONSCAL4 0x880 VIRTUAL_APIC_84_84
XEONSCAL4 0x881 VIRTUAL_APIC_85_85
XEONSCAL4 0x882 VIRTUAL_APIC_86_86
XEONSCAL4 0x883 VIRTUAL_APIC_87_87
XEONSCAL4 0x884 VIRTUAL_APIC_88_88
XEONSCAL4 0x885 VIRTUAL_APIC_89_89
XEONSCAL4 0x886 VIRTUAL_APIC_90_90
XEONSCAL4 0x887 VIRTUAL_APIC_91_91
XEONSCAL4 0x888 VIRTUAL_APIC_92_92
XEONSCAL4 0x889 VIRTUAL_APIC_93_93
XEONSCAL4 0x88A VIRTUAL_APIC_94_94
XEONSCAL4 0x88B VIRTUAL_APIC_95_95
XEONSCAL4 0x88C VIRTUAL_APIC_96_96
XEONSCAL4 0x88D VIRTUAL_APIC_97_97
XEONSCAL4 0x88E VIRTUAL_APIC_98_98
XEONSCAL4 0x88F VIRTUAL_APIC_99_99
XEONSCAL4 0x890 VIRTUAL_APIC_100_100
XEONSCAL4 0x891 VIRTUAL_APIC_101_101
XEONSCAL4 0x892 VIRTUAL_APIC_102_102
XEONSCAL4 0x893 VIRTUAL_APIC_103_103
XEONSCAL4 0x894 VIRTUAL_APIC_104_104
XEONSCAL4 0x895 VIRTUAL_APIC_105_105
XEONSCAL4 0x896 VIRTUAL_APIC_106_106
XEONSCAL4 0x897 VIRTUAL_APIC_107_107
XEONSCAL4 0x898 VIRTUAL_APIC_108_108
XEONSCAL4 0x899 VIRTUAL_APIC_109_109
XEONSCAL4 0x89A VIRTUAL_APIC_110_110
XEONSCAL4 0x89B VIRTUAL_APIC_111_111
XEONSCAL4 0x89C VIRTUAL_APIC_112_112
XEONSCAL4 0x89D VIRTUAL_APIC_113_113
XEONSCAL4 0x89E VIRTUAL_APIC_114_114
XEONSCAL4 0x89F VIRTUAL_APIC_115_115
XEONSCAL4 0x8A0 VIRTUAL_APIC_116_116
XEONSCAL4 0x8A1 VIRTUAL_APIC_117_117
XEONSCAL4 0x8A2 VIRTUAL_APIC_118_118
XEONSCAL4 0x8A3 VIRTUAL_APIC_119_119
XEONSCAL4 0x8A4 VIRTUAL_APIC_120_120
XEONSCAL4 0x8A5 VIRTUAL_APIC_121_121
XEONSCAL4 0x8A6 VIRTUAL_APIC_122_122
XEONSCAL4 0x8A7 VIRTUAL_APIC_123_123
XEONSCAL4 0x8A8 VIRTUAL_APIC_124_124
XEONSCAL4 0x8A9 VIRTUAL_APIC_125_125
XEONSCAL4 0x8AA VIRTUAL_APIC_126_126
XEONSCAL4 0x8AB VIRTUAL_APIC_127_127
XEONSCAL4 0x8AC VIRTUAL_APIC_128_128
XEONSCAL4 0x8AD VIRTUAL_APIC_129_129
XEONSCAL4 0x8AE VIRTUAL_APIC_130_130
XEONSCAL4 0x8AF VIRTUAL_APIC_131_131
XEONSCAL4 0x8B0 VIRTUAL_APIC_132_132
XEONSCAL4 0x8B1 VIRTUAL_APIC_133_133
XEONSCAL4 0x8B2 VIRTUAL_APIC_134_134
XEONSCAL4 0x8B3 VIRTUAL_APIC_135_135
XEONSCAL4 0x8B4 VIRTUAL_APIC_136_136
XEONSCAL4 0x8B5 VIRTUAL_APIC_137_137
XEONSCAL4 0x8B6 VIRTUAL_APIC_138_138
XEONSCAL4 0x8B7 VIRTUAL_APIC_139_139
XEONSCAL4 0x8B8 VIRTUAL_APIC_140_140
XEONSCAL4 0x8B9 VIRTUAL_APIC_141_141
XEONSCAL4 0x8BA VIRTUAL_APIC_142_142
XEONSCAL4 0x8BB VIRTUAL_APIC_143_143
XEONSCAL4 0x8BC VIRTUAL_APIC_144_144
XEONSCAL4 0x8BD VIRTUAL_APIC_145_145
XEONSCAL4 0x8BE VIRTUAL_APIC_146_146
XEONSCAL4 0x8BF VIRTUAL_APIC_147_147
XEONSCAL4 0x8C0 VIRTUAL_APIC_148_148
XEONSCAL4 0x8C1 VIRTUAL_APIC_149_149
XEONSCAL4 0x8C2 VIRTUAL_APIC_150_150
XEONSCAL4 0x8C3 VIRTUAL_APIC_151_151
XEONSCAL4 0x8C4 VIRTUAL_APIC_152_152
XEONSCAL4 0x8C5 VIRTUAL_APIC_153_153
XEONSCAL4 0x8C6 VIRTUAL_APIC_154_154
XEONSCAL4 0x8C7 VIRTUAL_APIC_155_155
XEONSCAL4 0x8C8 VIRTUAL_APIC_156_156
XEONSCAL4 0x8C9 VIRTUAL_APIC_157_157
XEONSCAL4 0x8CA VIRTUAL_APIC_158_158
XEONSCAL4 0x8CB VIRTUAL_APIC_159_159
XEONSCAL4 0x8CC VIRTUAL_APIC_160_160
XEONSCAL4 0x8CD VIRTUAL_APIC_161_161
XEONSCAL4 0x8CE VIRTUAL_APIC_162_162
XEONSCAL4 0x8CF VIRTUAL_APIC_163_163
XEONSCAL4 0x8D0 VIRTUAL_APIC_164_164
XEONSCAL4 0x8D1 VIRTUAL_APIC_165_165
XEONSCAL4 0x8D2 VIRTUAL_APIC_166_166
XEONSCAL4 0x8D3 VIRTUAL_APIC_167_167
XEONSCAL4 0x8D4 VIRTUAL_APIC_168_168
XEONSCAL4 0x8D5 VIRTUAL_APIC_169_169
XEONSCAL4 0x8D6 VIRTUAL_APIC_170_170
XEONSCAL4 0x8D7 VIRTUAL_APIC_171_171
XEONSCAL4 0x8D8 VIRTUAL_APIC_172_172
XEONSCAL4 0x8D9 VIRTUAL_APIC_173_173
XEONSCAL4 0x8DA VIRTUAL_APIC_174_174
XEONSCAL4 0x8DB VIRTUAL_APIC_175_175
XEONSCAL4 0x8DC VIRTUAL_APIC_176_176
XEONSCAL4 0x8DD VIRTUAL_APIC_177_177
XEONSCAL4 0x8DE VIRTUAL_APIC_178_178
XEONSCAL4 0x8DF VIRTUAL_APIC_179_179
XEONSCAL4 0x8E0 VIRTUAL_APIC_180_180
XEONSCAL4 0x8E1 VIRTUAL_APIC_181_181
XEONSCAL4 0x8E2 VIRTUAL_APIC_182_182
XEONSCAL4 0x8E3 VIRTUAL_APIC_183_183
XEONSCAL4 0x8E4 VIRTUAL_APIC_184_184
XEONSCAL4 0x8E5 VIRTUAL_APIC_185_185
XEONSCAL4 0x8E6 VIRTUAL_APIC_186_186
XEONSCAL4 0x8E7 VIRTUAL_APIC_187_187
XEONSCAL4 0x8E8 VIRTUAL_APIC_188_188
XEONSCAL4 0x8E9 VIRTUAL_APIC_189_189
XEONSCAL4 0x8EA VIRTUAL_APIC_190_190
XEONSCAL4 0x8EB VIRTUAL_APIC_191_191
XEONSCAL4 0x8EC VIRTUAL_APIC_192_192
XEONSCAL4 0x8ED VIRTUAL_APIC_193_193
XEONSCAL4 0x8EE VIRTUAL_APIC_194_194
XEONSCAL4 0x8EF VIRTUAL_APIC_195_195
XEONSCAL4 0x8F0 VIRTUAL_APIC_196_196
XEONSCAL4 0x8F1 VIRTUAL_APIC_197_197
XEONSCAL4 0x8F2 VIRTUAL_APIC_198_198
XEONSCAL4 0x8F3 VIRTUAL_APIC_199_199
XEONSCAL4 0x8F4 VIRTUAL_APIC_200_200
XEONSCAL4 0x8F5 VIRTUAL_APIC_201_201
XEONSCAL4 0x8F6 VIRTUAL_APIC_202_202
XEONSCAL4 0x8F7 VIRTUAL_APIC_203_203
XEONSCAL4 0x8F8 VIRTUAL_APIC_204_204
XEONSCAL4 0x8F9 VIRTUAL_APIC_205_205
XEONSCAL4 0x8FA VIRTUAL_APIC_206_206
XEONSCAL4 0x8FB VIRTUAL_APIC_207_207
XEONSCAL4 0x8FC VIRTUAL_APIC_208_208
XEONSCAL4 0x8FD VIRTUAL_APIC_209_209
XEONSCAL4 0x8FE VIRTUAL_APIC_210_210
XEONSCAL4 0x8FF VIRTUAL_APIC_211_211

0x802 IA32_X2APIC_APICID  # Intel-SDM-Vol4 x2APIC ID Register
0x803 IA32_X2APIC_VERSION # Intel-SDM-Vol4 x2APIC Version Register
0x808 IA32_X2APIC_TPR     # Intel-SDM-Vol4 x2APIC Task Priority Register
0x80A IA32_X2APIC_PPR     # Intel-SDM-Vol4 x2APIC Processor Priority Register
0x80B IA32_X2APIC_EOI     # Intel-SDM-Vol4 x2APIC EOI Register
0x80D IA32_X2APIC_LDR     # Intel-SDM-Vol4 x2APIC Logical Destination Register
0x80F IA32_X2APIC_SIVR    # Intel-SDM-Vol4 x2APIC Spurious Interrupt Vector Register

# Intel-SDM-Vol4 x2APIC In-Service Register Bits
0x810 IA32_X2APIC_ISR0
0x811 IA32_X2APIC_ISR1
0x812 IA32_X2APIC_ISR2
0x813 IA32_X2APIC_ISR3
0x814 IA32_X2APIC_ISR4
0x815 IA32_X2APIC_ISR5
0x816 IA32_X2APIC_ISR6
0x817 IA32_X2APIC_ISR7

# Intel-SDM-Vol4 x2APIC Trigger Mode Register Bits
0x818 IA32_X2APIC_TMR0
0x819 IA32_X2APIC_TMR1
0x81A IA32_X2APIC_TMR2
0x81B IA32_X2APIC_TMR3
0x81C IA32_X2APIC_TMR4
0x81D IA32_X2APIC_TMR5
0x81E IA32_X2APIC_TMR6
0x81F IA32_X2APIC_TMR7

# Intel-SDM-Vol4 x2APIC Interrupt Request Register Bits
0x820 IA32_X2APIC_IRR0
0x821 IA32_X2APIC_IRR1
0x822 IA32_X2APIC_IRR2
0x823 IA32_X2APIC_IRR3
0x824 IA32_X2APIC_IRR4
0x825 IA32_X2APIC_IRR5
0x826 IA32_X2APIC_IRR6
0x827 IA32_X2APIC_IRR7

0x828 IA32_X2APIC_ESR         # Intel-SDM-Vol4 x2APIC Error Status Register
0x82F IA32_X2APIC_LVT_CMCI    # Intel-SDM-Vol4 x2APIC LVT Corrected Machine Check Interrupt Register
0x830 IA32_X2APIC_ICR         # Intel-SDM-Vol4 x2APIC Interrupt Command Register
0x832 IA32_X2APIC_LVT_TIMER   # Intel-SDM-Vol4 x2APIC LVT Timer Interrupt Register
0x833 IA32_X2APIC_LVT_THERMAL # Intel-SDM-Vol4 x2APIC LVT Thermal Sensor Interrupt Register
0x834 IA32_X2APIC_LVT_PMI     # Intel-SDM-Vol4 x2APIC LVT Performance Monitor Interrupt Register
0x835 IA32_X2APIC_LVT_LINT0   # Intel-SDM-Vol4 x2APIC LVT LINT0 Register
0x836 IA32_X2APIC_LVT_LINT1   # Intel-SDM-Vol4 x2APIC LVT LINT1 Register
0x837 IA32_X2APIC_LVT_ERROR   # Intel-SDM-Vol4 x2APIC LVT Error Register
0x838 IA32_X2APIC_INIT_COUNT  # Intel-SDM-Vol4 x2APIC Initial Count Register (X2APIC_TMICT)
0x839 IA32_X2APIC_CUR_COUNT   # Intel-SDM-Vol4 x2APIC Current Count Register (X2APIC_TMCCT)
0x83E IA32_X2APIC_DIV_CONF    # Intel-SDM-Vol4 x2APIC Divide Configuration Register
0x83F IA32_X2APIC_SELF_IPI    # Intel-SDM-Vol4 x2APIC Self IPI Register

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x900 XRSTOR_INFO # Holds XSAVE_AREA "triplet" w/ addition of XCompaction vector for the XMODIFIED optimization
XEONSCAL4 0x901 VMX_IO_EXIT_QUAL # Contains Exit Qual used on SMI I/O exits. C6NoSave Candidate
XEONSCAL4 0x902 TMPDR6 # Equivalent to architectural DR6 reg
XEONSCAL4 0x903 XU_MACROINSTRUCTION_ALIAS # Millicode MSR used to read/write certain fields of the Macroalias register
XEONSCAL4 0x904 XU_VMX_CONTROL # Millicode MSR used to update the POST_VMXON and CURRENT_WP_IS_SHADOW_VMCS mode-based branch bits
XEONSCAL4 0x905 VMX_PLE_FIRST # Pause-Loop Exiting: First value
XEONSCAL4 0x906 VMX_PLE_LAST  # Pause-Loop Exiting: Last value
XEONSCAL4 0x907 VMX_VMENTRY_AVRR_UTT_MAILBOX # Holds address bits [11:0] of a guest load/store access that hit the AVRR range. C6NoSave Candidate
XEONSCAL4 0x908 XU_SMM_STATE # Millicode MSR used to control SMM states
XEONSCAL4 0x909 IO_SMI_BACKUP_RSI # Saved RSI value from IO SMI, used by parallel VMExit and SMI. C6NoSave Candidate
XEONSCAL4 0x90A IO_SMI_BACKUP_RCX # Saved RCX value from IO SMI, used by parallel VMExit and SMI. C6NoSave Candidate
XEONSCAL4 0x90B IO_SMI_BACKUP_RDI # Saved RDI value from IO SMI, used by parallel VMExit and SMI. C6NoSave Candidate
XEONSCAL4 0x90C VMX_VPPR # Holds VPPR bits [7:4]
XEONSCAL4 0x90D PDM_GDXC_MSG # Write only MSR for Xucode to write PDM data out to the GDXC

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/SprMsr.h
XEONSCAL4 0x90E GT_FLUSH_RELOAD # This is a Write-Only cmd MSR. A write causes GT to flush outstanding transactions and re-load it's boot context. A Rd will GP Fault. With the removal of the GT_CREG_ADDR_DIFFERENTIATOR there is no need for this to be virtual
XEONSCAL4 0x90F GT_FLUSH_BCLD_ACK # GT writes a '1 to this bit to acknowledge PPPE range registers are loaded into GT

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x910 XU_STATUS
XEONSCAL4 0x911 XRSTOR_XCOMPACTION_VECTOR # Holds XSAVE_AREA XCompaction vector for the XMODIFIED optimization

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/SprMsr.h
XEONSCAL4 0x912 XU_TIO_CF_INFO  # Trusted IO - CAM Filter Info
XEONSCAL4 0x913 XU_TIO_CF_TABLE # MSR used to access the CAM Filter Table

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x915 VMX_AVRR_REMAP # VMX AVRR Remap Addr used in RR assist
XEONSCAL4 0x916 AVRR_BASE # APIC Virtualization Range Register - Base address of virtual APIC
XEONSCAL4 0x917 XU_RESERVED_1_1 # This define is used to reserve some MSR addresses for XuCode. Ucode would have a dedicated handler for these MSRs
XEONSCAL4 0x918 XU_RESERVED_2_2
XEONSCAL4 0x919 XU_RESERVED_3_3
XEONSCAL4 0x91A XU_RESERVED_4_4
XEONSCAL4 0x91B EM_EXCEPTIONS_HANDLING_EIP # PPPE Exception Handling Entrypoint
XEONSCAL4 0x91C XU_RESERVED_5_5
XEONSCAL4 0x91D XU_RESERVED_6_6
XEONSCAL4 0x91E XU_RESERVED_7_7
XEONSCAL4 0x91F XU_RESERVED_8_8

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/GnrMsr.h and SprMsr.h
XEONSCAL4 0x920 NCUWHOAMI # The who-am-I register is used by uCode to set up the APIC ID. This register is initialized by the PCU according to the socket configuration using the NcuPcuWHOAMI register. The who-am-i register returns a thread specific identifier, however some of the fields of this registers are shared between all threads as indicated by the fields description

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/SprMsr.h
XEONSCAL4 0x921 RESOLVED_CORES

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x922 PDM_HEADER # Write only MSR for Xucode to modify the PDM header for GDXC messages
XEONSCAL4 0x923 MLC_PWR_MGMT_TIMER_CTRL # Timer control bits for various MLC/APIC Timers
XEONSCAL4 0x924 PPPE_DOORBELL_EXIT_BITMAP # Scratch space exposed via MSR in PPPE
XEONSCAL4 0x925 PPPE_EVENT_STATUS # Maps to ML3_CR_PIC_EVENT_STATUS (lower 32b) and ROB1_CR_PIC_EVENT_STATUS (upper 32b)
XEONSCAL4 0x926 PPPE_EVENT_SET # Maps to ML3_CR_PIC_EVENT_SET (lower 32b) and ROB1_CR_PIC_EVENT_SET (upper 32b)
XEONSCAL4 0x927 PPPE_EVENT_RESET # Maps to ML3_CR_PIC_EVENT_RESET (lower 32b) and ROB1_CR_PIC_EVENT_RESET (upper 32b)
XEONSCAL4 0x928 XU_RESERVED_9_9
XEONSCAL4 0x929 XU_RESERVED_10_10
XEONSCAL4 0x92A XU_RESERVED_11_11
XEONSCAL4 0x92B XU_RESERVED_12_12
XEONSCAL4 0x92C XU_RESERVED_13_13
XEONSCAL4 0x92D XU_RESERVED_14_14
XEONSCAL4 0x92E XU_RESERVED_15_15
XEONSCAL4 0x92F PIC_LT_DOORBELL
XEONSCAL4 0x930 XU_RESERVED_16_16
XEONSCAL4 0x931 XU_RESERVED_17_17
XEONSCAL4 0x932 XU_RESERVED_18_18
XEONSCAL4 0x933 VMCS_CACHE_BASE # PPPE will have read/write access to the FSCP_CR_VMCS_CACHE_BASE register for implementing the VMCS cache. Can be cut to 32-bits if not used by PPPE
XEONSCAL4 0x934 PSMI_BASE # Scratch Pad register BNS_CR_PSMBASE

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/GnrMsr.h and SprMsr.h
XEONSCAL4 0x936 LT_SMX_STATE # Holds various SMX state

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x937 MLC_VT_TIMER_COUNT # VMX timer current count
XEONSCAL4 0x938 MLC_VT_TIMER_CONTROL # VMX timer control
XEONSCAL4 0x939 IOMISCINFO # MM IO MISC INFO Register. 32 bit. (Mrm roctlregc/roapes/roiomiscinfoSM306L)
XEONSCAL4 0x93B XU_RESERVED_19_19
XEONSCAL4 0x93E IO_MEM_ADDR # Memory address accessed by the last IO instruction. Used to communicate between io and SMI/PPPE. C6NoSave candidate
XEONSCAL4 0x93F XU_RESERVED_20_20
XEONSCAL4 0x940 PDPTR_0_0 # Mode C - Protected Mode PagDir Pointers - 0
XEONSCAL4 0x941 PDPTR_1_1
XEONSCAL4 0x942 PDPTR_2_2
XEONSCAL4 0x943 PDPTR_3_3
XEONSCAL4 0x944 XU_RESERVED_21_21
XEONSCAL4 0x945 XU_RESERVED_22_22
XEONSCAL4 0x946 XU_RESERVED_23_23
XEONSCAL4 0x947 XU_RESERVED_24_24
XEONSCAL4 0x948 XU_RESERVED_25_25
XEONSCAL4 0x949 XU_RESERVED_26_26
XEONSCAL4 0x94A XU_RESERVED_27_27
XEONSCAL4 0x94B XU_RESERVED_28_28
XEONSCAL4 0x94C XU_RESERVED_29_29
XEONSCAL4 0x94D XU_RESERVED_30_30
XEONSCAL4 0x94E XU_ALL_CORES_POISON

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ClientOneSiliconPkg/Cpu/Include/Register/CommonMsr.h
XEONSCAL4 0x94F XU_OPTIN

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x950 XUCODE_UCODE_COMMAND # Each bit is command from xucode for specific action
XEONSCAL4 0x951 GLOBAL_SE_ENABLE # An uncore register indicating that SE is fully installed. Used by CPUID and preamble need to check the option to cache it for each core
XEONSCAL4 0x952 PKG_SE_SVN
XEONSCAL4 0x955 ELSRR_BASE # Enclave Linear Space Range Register - Physical Base Control Register
XEONSCAL4 0x956 ELSRR_MASK # Enclave Linear Space Range Register - Physical Mask Control Register
XEONSCAL4 0x958 TCS_PA # TCS Physical Address. Pointer to TCS structure, to be used at ASEX
XEONSCAL4 0x959 SECS_SID # Holds SE Active SECS
XEONSCAL4 0x960 FUSE_KEY1_0 # This is a Read-Only xucode MSR
XEONSCAL4 0x961 FUSE_KEY1_1 # This is a Read-Only xucode MSR
XEONSCAL4 0x962 EMRR_BASE # Millicode Memory Range Register - Physical Base Control Register
XEONSCAL4 0x963 EMRR_MASK # Millicode Memory Range Register - Physical Mask Control Register
XEONSCAL4 0x964 EMXRR_BASE # Xucode Memory Range Register - Physical Base Control Register
XEONSCAL4 0x965 EMXRR_MASK # Xucode Memory Range Register - Physical Mask Control Register
XEONSCAL4 0x967 XU_RESERVED_31_31
XEONSCAL4 0x96A MEE_SETUP # This is uncore SCP. RO MSR to provide 128 bits of external entropy used for key derivation
XEONSCAL4 0x96B PPPE_TAP_STATUS
XEONSCAL4 0x96C EE_INIT # MEE init register

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ClientOneSiliconPkg/Cpu/Include/Register/CommonMsr.h
XEONSCAL4 0x96D XCR0 # Holds XCR0 and XSAVE Compaction Vector (used for XMODIFIED optimization check)

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x970 SGX_RDPCHSGXID_0 # PCHSGXID 0 exposed in PCH by CSME
XEONSCAL4 0x971 SGX_RDPCHSGXID_1 # PCHSGXID 1 exposed in PCH by CSME

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/GnrMsr.h
XEONSCAL4 0x972 MCHECK_CPU_REGISTER_ADDRESS # MCHECK XuCode register that holds address of uncore register to be written

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x973 MCHECK_CPU_REGISTER_DATA # Virtual MSR to will write data to an Uncore CR. The write is invoked by MCHECK flow. CR address is taken from MSR 0x972
XEONSCAL4 0x985 IA32_UINT_RR # This MSR holds the current value of UIRR
XEONSCAL4 0x986 UINT_HANDLER # This MSR holds the current value of UIHANDLER. This is a linear address that must be canonical relative to the maximum linear-address width supported by the processor
XEONSCAL4 0x987 UINT_STACKADJUST # This MSR holds the current value of UISTACKADJUST. This is a linear address that must be canonical relative to the maximum linear-address width supported by the processor
XEONSCAL4 0x988 IA32_CR_UINT_MISC # Bits 31:0 hold the current value of UITTSZ. Bits 39:32 hold the current value of UINV
XEONSCAL4 0x989 UINT_PD # This MSR holds the current value of UPIDADDR. This is a linear address that must be canonical relative to the maximum linear-address width supported by the processor
XEONSCAL4 0x98A UINT_TT # Bits 63:4 of this MSR holds the current value of UITTADDR. This is a linear address that must be canonical relative to the maximum linear-address width supported by the processor

# Intel Key Locker https://www.intel.com/content/www/us/en/develop/download/intel-key-locker-specification.html
# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/GnrMsr.h
XEONSCAL4 0x990 COPY_STATUS # FSCP To hold keylocker information
XEONSCAL4 0x991 IWKEYBACKUP_STATUS # Status of IWKey Backup in PCH

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x992 BIOS_TME_KEY_0 # MSR to read/write ubox LOW TME EPHEMERAL KEY
XEONSCAL4 0x993 BIOS_TME_KEY_1 # MSR to read/write ubox HIGH TME EPHEMERAL KEY

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/GnrMsr.h
XEONSCAL4 0x994 BIOS_TME_KEY_2 # MSR to read/write ubox LOW TME EPHEMERAL KEY
XEONSCAL4 0x995 BIOS_TME_KEY_3

XEONSCAL4 0x9FF CORE_MKTME_ACTIVATION # Virtual MSR to read TME_ACTIVATE[MK_TME_KEYID_BITS] from SoC. Write with EDX:EAX == 0 will translate the above value into PMH mask register

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/ArchMsr.h
0x966 PERMON_EVNTSEL_AUX    # This is a new PerfMon register is used for future user-invisible controls to be shadowed in all PerfMon units.

# https://software.intel.com/content/dam/develop/external/us/en/documents/multi-key-total-memory-encryption-spec-753926.pdf Intel Architecture Memory Encryption Technologies (336907-004US rev 1.4, August 2022)
0x981 IA32_TME_CAPABILITY   # Intel-SDM-Vol4 Memory Encryption Capability. Read only register for encryption policies supported by Total Memory Encryption (TME) and Multi-key TME (MKTME)
0x982 IA32_TME_ACTIVATE     # Intel-SDM-Vol4 Memory Encryption Activation. R/W register to generate or restore Keys for TME
0x983 IA32_TME_EXCLUDE_MASK # Intel-SDM-Vol4 Memory Encryption Exclude Mask. Register for debug purposes to exclude a memory range from encryption by TME
0x984 IA32_TME_EXCLUDE_BASE # Intel-SDM-Vol4 Memory Encryption Exclude Base. Register for debug purposes to exclude a memory range from encryption by TME

0x985 IA32_UINTR_RR          # Intel-SDM-Vol4 User Interrupt Request Register
0x986 IA32_UINTR_HANDLER     # Intel-SDM-Vol4 User Interrupt Handler Address
0x987 IA32_UINTR_STACKADJUST # Intel-SDM-Vol4 User Interrupt Stack Adjustment
0x988 IA32_UINTR_MISC        # Intel-SDM-Vol4 User-Interrupt Target-Table Size and Notification Vector
0x989 IA32_UINTR_PD          # Intel-SDM-Vol4 User Interrupt PID Address
0x98A IA32_UINTR_TT          # Intel-SDM-Vol4 User-Interrupt Target Table

0x990 IA32_COPY_STATUS        # Intel-SDM-Vol4 Status of Most Recent Platform to Local or Local to Platform Copies. FSCP To hold keylocker information
0x991 IA32_IWKEYBACKUP_STATUS # Intel-SDM-Vol4 Information about IWKeyBackup Register. Status of IWKey Backup in PCH

# https://cdrdv2-public.intel.com/315168/315168_TXT_MLE_Development%20Guide_rev_017_3.pdf Intel Trusted Execution Technology (Intel TXT) Software Development Guide (315168-017 Revision 017.3, March 2022)
0x9FB IA32_TME_CLEAR_SAVED_KEY

# https://software.intel.com/content/dam/develop/external/us/en/documents/multi-key-total-memory-encryption-spec-753926.pdf Intel Architecture Memory Encryption Technologies (336907-004US rev 1.4, August 2022)
0x9FF MK_TME_CORE_ACTIVATE # Multi-Key Total Memory Encryption

# https://github.com/coreboot/coreboot/blob/4.18/src/soc/intel/xeon_sp/include/soc/msr.h
XEONSP 0xA01 ENERGY_PERF_BIAS_CONFIG

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0xA00 IO_BW_P_LIMIT_OVERRIDE # Various controls
XEONSCAL4 0xA01 ENERGY_PERF_BIAS_CONFIG # This register effectively governs all major power saving engines and heuristics on the die
XEONSCAL4 0xA02 SW_LTR_OVRD # This register is intended for OS usage. It enables the OS to write an LTR value if they choose to participate in the LTR process. This register includes parameters that PCODE will use to override information received from PCI Express via LTR messages. Pcode will choose this value, or PCIE_LTR_OVRD, or actual LTR values from IIO depending on selection function in POWER_CTL uCR PCODE will sample this register at slow loop

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/GnrMsr.h
XEONSCAL4 0xA03 MEMORY_CONFIG_MEASUREMENT_0 # uCode scratchpad register shared by all threads. ucode memory config measurement register
XEONSCAL4 0xA04 MEMORY_CONFIG_MEASUREMENT_1
XEONSCAL4 0xA05 MEMORY_CONFIG_MEASUREMENT_2
XEONSCAL4 0xA06 MEMORY_CONFIG_MEASUREMENT_3
XEONSCAL4 0xA07 MMCFG_LOCAL_RULE_ADDRESS_CFG_01 # mmcfg local rule address 0 and 1
XEONSCAL4 0xA08 MMCFG_LOCAL_RULE_ADDRESS_CFG_23 # mmcfg local rule address 2 and 3

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ClientOneSiliconPkg/Cpu/Include/Register/CommonMsr.h
XEONSCAL4 0xB18 M2PPMONCNTRCFG_2 # Holds the status information and control the operation of the the PMON Fixed Counter
XEONSCAL4 0xB19 M2PPMONCNTRCFG_3
XEONSCAL4 0xB1D IRPPMONCNTRCFG_0
XEONSCAL4 0xB1E IRPPMONCNTRCFG_1
XEONSCAL4 0xB20 IIOPMONUNITCTRL
XEONSCAL4 0xB21 IIOPMONCNTR_0   # This register is a perf counter. Software can read it and write it
XEONSCAL4 0xB22 IIOPMONCNTR_1
XEONSCAL4 0xB23 IIOPMONCNTR_2
XEONSCAL4 0xB24 IIOPMONCNTR_3
XEONSCAL4 0xB25 IIOPMONFRCNTRCLK
XEONSCAL4 0xB27 IIOPMONUNITSTATUS
XEONSCAL4 0xB28 IOPMONCNTRCFG_0 # Holds the status information and control the operation of the the PMON Fixed Counter
XEONSCAL4 0xB29 IOPMONCNTRCFG_1
XEONSCAL4 0xB2A IOPMONCNTRCFG_2
XEONSCAL4 0xB2B IOPMONCNTRCFG_3
XEONSCAL4 0xB50 IIOPMONFRCNTR_0
XEONSCAL4 0xB51 IIOPMONFRCNTR_1
XEONSCAL4 0xB52 IIOPMONFRCNTR_2
XEONSCAL4 0xB53 IIOPMONFRCNTR_3
XEONSCAL4 0xB54 IIOPMONFRCNTR_4
XEONSCAL4 0xB55 IIOPMONFRCNTR_5
XEONSCAL4 0xB56 IIOPMONFRCNTR_6
XEONSCAL4 0xB57 IIOPMONFRCNTR_7
XEONSCAL4 0xB58 IIOPMONFRCNTR_8
XEONSCAL4 0xB59 IIOPMONFRCNTR_9
XEONSCAL4 0xB5A IIOPMONFRCNTR_10
XEONSCAL4 0xB5B IIOPMONFRCNTR_11
XEONSCAL4 0xB5C IIOPMONFRCNTR_12
XEONSCAL4 0xB5D IIOPMONFRCNTR_13
XEONSCAL4 0xB5E IIOPMONFRCNTR_14
XEONSCAL4 0xB5F IIOPMONFRCNTR_15

# Intel-SDM-Vol4 (Intel Xeon Processor 7500 Series)
XEON7500 0xC00 U_PMON_GLOBAL_CTRL     # Uncore U-box perfmon global control MSR
XEON7500 0xC01 U_PMON_GLOBAL_STATUS   # Uncore U-box perfmon global status MSR
XEON7500 0xC02 U_PMON_GLOBAL_OVF_CTRL # Uncore U-box perfmon global overflow control MSR
XEON7500 0xC10 U_PMON_EVNT_SEL        # Uncore U-box perfmon event select MSR
XEON7500 0xC11 U_PMON_CTR             # Uncore U-box perfmon counter MSR
XEON7500 0xC20 B0_PMON_BOX_CTRL     # Uncore B-box 0 perfmon local box control MSR
XEON7500 0xC21 B0_PMON_BOX_STATUS   # Uncore B-box 0 perfmon local box status MSR
XEON7500 0xC22 B0_PMON_BOX_OVF_CTRL # Uncore B-box 0 perfmon local box overflow control MSR
XEON7500 0xC30 B0_PMON_EVNT_SEL0    # Uncore B-box 0 perfmon event select MSR
XEON7500 0xC31 B0_PMON_CTR0         # Uncore B-box 0 perfmon counter MSR
XEON7500 0xC32 B0_PMON_EVNT_SEL1
XEON7500 0xC33 B0_PMON_CTR1
XEON7500 0xC34 B0_PMON_EVNT_SEL2
XEON7500 0xC35 B0_PMON_CTR2
XEON7500 0xC36 B0_PMON_EVNT_SEL3
XEON7500 0xC37 B0_PMON_CTR3
XEON7500 0xC40 S0_PMON_BOX_CTRL     # Uncore S-box 0 perfmon local box control MSR
XEON7500 0xC41 S0_PMON_BOX_STATUS   # Uncore S-box 0 perfmon local box status MSR
XEON7500 0xC42 S0_PMON_BOX_OVF_CTRL # Uncore S-box 0 perfmon local box overflow control MSR
XEON7500 0xC50 S0_PMON_EVNT_SEL0    # Uncore S-box 0 perfmon event select MSR
XEON7500 0xC51 S0_PMON_CTR0         # Uncore S-box 0 perfmon counter MSR
XEON7500 0xC52 S0_PMON_EVNT_SEL1
XEON7500 0xC53 S0_PMON_CTR1
XEON7500 0xC54 S0_PMON_EVNT_SEL2
XEON7500 0xC55 S0_PMON_CTR2
XEON7500 0xC56 S0_PMON_EVNT_SEL3
XEON7500 0xC57 S0_PMON_CTR3
XEON7500 0xC60 B1_PMON_BOX_CTRL     # Uncore B-box 1 perfmon local box control MSR
XEON7500 0xC61 B1_PMON_BOX_STATUS   # Uncore B-box 1 perfmon local box status MSR
XEON7500 0xC62 B1_PMON_BOX_OVF_CTRL # Uncore B-box 1 perfmon local box overflow control MSR
XEON7500 0xC70 B1_PMON_EVNT_SEL0    # Uncore B-box 1 perfmon event select MSR
XEON7500 0xC71 B1_PMON_CTR0         # Uncore B-box 1 perfmon counter MSR
XEON7500 0xC72 B1_PMON_EVNT_SEL1
XEON7500 0xC73 B1_PMON_CTR1
XEON7500 0xC74 B1_PMON_EVNT_SEL2
XEON7500 0xC75 B1_PMON_CTR2
XEON7500 0xC76 B1_PMON_EVNT_SEL3
XEON7500 0xC77 B1_PMON_CTR3
XEON7500 0xC80 W_PMON_BOX_CTRL     # Uncore W-box perfmon local box control MSR
XEON7500 0xC81 W_PMON_BOX_STATUS   # Uncore W-box perfmon local box status MSR
XEON7500 0xC82 W_PMON_BOX_OVF_CTRL # Uncore W-box perfmon local box overflow control MSR
XEON7500 0xC90 W_PMON_EVNT_SEL0    # Uncore W-box perfmon event select MSR
XEON7500 0xC91 W_PMON_CTR0         # Uncore W-box perfmon counter MSR
XEON7500 0xC92 W_PMON_EVNT_SEL1
XEON7500 0xC93 W_PMON_CTR1
XEON7500 0xC94 W_PMON_EVNT_SEL2
XEON7500 0xC95 W_PMON_CTR2
XEON7500 0xC96 W_PMON_EVNT_SEL3
XEON7500 0xC97 W_PMON_CTR3
XEON7500 0xCA0 M0_PMON_BOX_CTRL     # Uncore M-box 0 perfmon local box control MSR
XEON7500 0xCA1 M0_PMON_BOX_STATUS   # Uncore M-box 0 perfmon local box status MSR
XEON7500 0xCA2 M0_PMON_BOX_OVF_CTRL # Uncore M-box 0 perfmon local box overflow control MSR
XEON7500 0xCA4 M0_PMON_TIMESTAMP    # Uncore M-box 0 perfmon time stamp unit select MSR
XEON7500 0xCA5 M0_PMON_DSP          # Uncore M-box 0 perfmon DSP unit select MSR
XEON7500 0xCA6 M0_PMON_ISS          # Uncore M-box 0 perfmon ISS unit select MSR
XEON7500 0xCA7 M0_PMON_MAP          # Uncore M-box 0 perfmon MAP unit select MSR
XEON7500 0xCA8 M0_PMON_MSC_THR      # Uncore M-box 0 perfmon MIC THR select MSR
XEON7500 0xCA9 M0_PMON_PGT          # Uncore M-box 0 perfmon PGT unit select MSR
XEON7500 0xCAA M0_PMON_PLD          # Uncore M-box 0 perfmon PLD unit select MSR
XEON7500 0xCAB M0_PMON_ZDP          # Uncore M-box 0 perfmon ZDP unit select MSR
XEON7500 0xCB0 M0_PMON_EVNT_SEL0    # Uncore M-box 0 perfmon event select MSR
XEON7500 0xCB1 M0_PMON_CTR0         # Uncore M-box 0 perfmon counter MSR
XEON7500 0xCB2 M0_PMON_EVNT_SEL1
XEON7500 0xCB3 M0_PMON_CTR1
XEON7500 0xCB4 M0_PMON_EVNT_SEL2
XEON7500 0xCB5 M0_PMON_CTR2
XEON7500 0xCB6 M0_PMON_EVNT_SEL3
XEON7500 0xCB7 M0_PMON_CTR3
XEON7500 0xCB8 M0_PMON_EVNT_SEL4
XEON7500 0xCB9 M0_PMON_CTR4
XEON7500 0xCBA M0_PMON_EVNT_SEL5
XEON7500 0xCBB M0_PMON_CTR5
XEON7500 0xCC0 S1_PMON_BOX_CTRL     # Uncore S-box 1 perfmon local box control MSR
XEON7500 0xCC1 S1_PMON_BOX_STATUS   # Uncore S-box 1 perfmon local box status MSR
XEON7500 0xCC2 S1_PMON_BOX_OVF_CTRL # Uncore S-box 1 perfmon local box overflow control MSR
XEON7500 0xCD0 S1_PMON_EVNT_SEL0    # Uncore S-box 1 perfmon event select MSR
XEON7500 0xCD1 S1_PMON_CTR0         # Uncore S-box 1 perfmon counter MSR
XEON7500 0xCD2 S1_PMON_EVNT_SEL1
XEON7500 0xCD3 S1_PMON_CTR1
XEON7500 0xCD4 S1_PMON_EVNT_SEL2
XEON7500 0xCD5 S1_PMON_CTR2
XEON7500 0xCD6 S1_PMON_EVNT_SEL3
XEON7500 0xCD7 S1_PMON_CTR3
XEON7500 0xCE0 M1_PMON_BOX_CTRL     # Uncore M-box 1 perfmon local box control MSR
XEON7500 0xCE1 M1_PMON_BOX_STATUS   # Uncore M-box 1 perfmon local box status MSR
XEON7500 0xCE2 M1_PMON_BOX_OVF_CTRL # Uncore M-box 1 perfmon local box overflow control MSR
XEON7500 0xCE4 M1_PMON_TIMESTAMP    # Uncore M-box 1 perfmon time stamp unit select MSR
XEON7500 0xCE5 M1_PMON_DSP          # Uncore M-box 1 perfmon DSP unit select MSR
XEON7500 0xCE6 M1_PMON_ISS          # Uncore M-box 1 perfmon ISS unit select MSR
XEON7500 0xCE7 M1_PMON_MAP          # Uncore M-box 1 perfmon MAP unit select MSR
XEON7500 0xCE8 M1_PMON_MSC_THR      # Uncore M-box 1 perfmon MIC THR select MSR
XEON7500 0xCE9 M1_PMON_PGT          # Uncore M-box 1 perfmon PGT unit select MSR
XEON7500 0xCEA M1_PMON_PLD          # Uncore M-box 1 perfmon PLD unit select MSR
XEON7500 0xCEB M1_PMON_ZDP          # Uncore M-box 1 perfmon ZDP unit select MSR
XEON7500 0xCF0 M1_PMON_EVNT_SEL0    # Uncore M-box 1 perfmon event select MSR
XEON7500 0xCF1 M1_PMON_CTR0         # Uncore M-box 1 perfmon counter MSR
XEON7500 0xCF2 M1_PMON_EVNT_SEL1
XEON7500 0xCF3 M1_PMON_CTR1
XEON7500 0xCF4 M1_PMON_EVNT_SEL2
XEON7500 0xCF5 M1_PMON_CTR2
XEON7500 0xCF6 M1_PMON_EVNT_SEL3
XEON7500 0xCF7 M1_PMON_CTR3
XEON7500 0xCF8 M1_PMON_EVNT_SEL4
XEON7500 0xCF9 M1_PMON_CTR4
XEON7500 0xCFA M1_PMON_EVNT_SEL5
XEON7500 0xCFB M1_PMON_CTR5
XEON7500 0xD00 C0_PMON_BOX_CTRL     # Uncore C-box 0 perfmon local box control MSR
XEON7500 0xD01 C0_PMON_BOX_STATUS   # Uncore C-box 0 perfmon local box status MSR
XEON7500 0xD02 C0_PMON_BOX_OVF_CTRL # Uncore C-box 0 perfmon local box overflow control MSR
XEON7500 0xD10 C0_PMON_EVNT_SEL0    # Uncore C-box 0 perfmon event select MSR
XEON7500 0xD11 C0_PMON_CTR0         # Uncore C-box 0 perfmon counter MSR
XEON7500 0xD12 C0_PMON_EVNT_SEL1
XEON7500 0xD13 C0_PMON_CTR1
XEON7500 0xD14 C0_PMON_EVNT_SEL2
XEON7500 0xD15 C0_PMON_CTR2
XEON7500 0xD16 C0_PMON_EVNT_SEL3
XEON7500 0xD17 C0_PMON_CTR3
XEON7500 0xD18 C0_PMON_EVNT_SEL4
XEON7500 0xD19 C0_PMON_CTR4
XEON7500 0xD1A C0_PMON_EVNT_SEL5
XEON7500 0xD1B C0_PMON_CTR5
XEON7500 0xD20 C4_PMON_BOX_CTRL     # Uncore C-box 4 perfmon local box control MSR
XEON7500 0xD21 C4_PMON_BOX_STATUS   # Uncore C-box 4 perfmon local box status MSR
XEON7500 0xD22 C4_PMON_BOX_OVF_CTRL # Uncore C-box 4 perfmon local box overflow control MSR
XEON7500 0xD30 C4_PMON_EVNT_SEL0    # Uncore C-box 4 perfmon event select MSR
XEON7500 0xD31 C4_PMON_CTR0         # Uncore C-box 4 perfmon counter MSR
XEON7500 0xD32 C4_PMON_EVNT_SEL1
XEON7500 0xD33 C4_PMON_CTR1
XEON7500 0xD34 C4_PMON_EVNT_SEL2
XEON7500 0xD35 C4_PMON_CTR2
XEON7500 0xD36 C4_PMON_EVNT_SEL3
XEON7500 0xD37 C4_PMON_CTR3
XEON7500 0xD38 C4_PMON_EVNT_SEL4
XEON7500 0xD39 C4_PMON_CTR4
XEON7500 0xD3A C4_PMON_EVNT_SEL5
XEON7500 0xD3B C4_PMON_CTR5
XEON7500 0xD40 C2_PMON_BOX_CTRL     # Uncore C-box 2 perfmon local box control MSR
XEON7500 0xD41 C2_PMON_BOX_STATUS   # Uncore C-box 2 perfmon local box status MSR
XEON7500 0xD42 C2_PMON_BOX_OVF_CTRL # Uncore C-box 2 perfmon local box overflow control MSR
XEON7500 0xD50 C2_PMON_EVNT_SEL0    # Uncore C-box 2 perfmon event select MSR
XEON7500 0xD51 C2_PMON_CTR0         # Uncore C-box 2 perfmon counter MSR
XEON7500 0xD52 C2_PMON_EVNT_SEL1
XEON7500 0xD53 C2_PMON_CTR1
XEON7500 0xD54 C2_PMON_EVNT_SEL2
XEON7500 0xD55 C2_PMON_CTR2
XEON7500 0xD56 C2_PMON_EVNT_SEL3
XEON7500 0xD57 C2_PMON_CTR3
XEON7500 0xD58 C2_PMON_EVNT_SEL4
XEON7500 0xD59 C2_PMON_CTR4
XEON7500 0xD5A C2_PMON_EVNT_SEL5
XEON7500 0xD5B C2_PMON_CTR5
XEON7500 0xD60 C6_PMON_BOX_CTRL     # Uncore C-box 6 perfmon local box control MSR
XEON7500 0xD61 C6_PMON_BOX_STATUS   # Uncore C-box 6 perfmon local box status MSR
XEON7500 0xD62 C6_PMON_BOX_OVF_CTRL # Uncore C-box 6 perfmon local box overflow control MSR
XEON7500 0xD70 C6_PMON_EVNT_SEL0    # Uncore C-box 6 perfmon event select MSR
XEON7500 0xD71 C6_PMON_CTR0         # Uncore C-box 6 perfmon counter MSR
XEON7500 0xD72 C6_PMON_EVNT_SEL1
XEON7500 0xD73 C6_PMON_CTR1
XEON7500 0xD74 C6_PMON_EVNT_SEL2
XEON7500 0xD75 C6_PMON_CTR2
XEON7500 0xD76 C6_PMON_EVNT_SEL3
XEON7500 0xD77 C6_PMON_CTR3
XEON7500 0xD78 C6_PMON_EVNT_SEL4
XEON7500 0xD79 C6_PMON_CTR4
XEON7500 0xD7A C6_PMON_EVNT_SEL5
XEON7500 0xD7B C6_PMON_CTR5
XEON7500 0xD80 C1_PMON_BOX_CTRL     # Uncore C-box 1 perfmon local box control MSR
XEON7500 0xD81 C1_PMON_BOX_STATUS   # Uncore C-box 1 perfmon local box status MSR
XEON7500 0xD82 C1_PMON_BOX_OVF_CTRL # Uncore C-box 1 perfmon local box overflow control MSR
XEON7500 0xD90 C1_PMON_EVNT_SEL0  # Uncore C-box 1 perfmon event select MSR
XEON7500 0xD91 C1_PMON_CTR0       # Uncore C-box 1 perfmon counter MSR
XEON7500 0xD92 C1_PMON_EVNT_SEL1
XEON7500 0xD93 C1_PMON_CTR1
XEON7500 0xD94 C1_PMON_EVNT_SEL2
XEON7500 0xD95 C1_PMON_CTR2
XEON7500 0xD96 C1_PMON_EVNT_SEL3
XEON7500 0xD97 C1_PMON_CTR3
XEON7500 0xD98 C1_PMON_EVNT_SEL4
XEON7500 0xD99 C1_PMON_CTR4
XEON7500 0xD9A C1_PMON_EVNT_SEL5
XEON7500 0xD9B C1_PMON_CTR5
XEON7500 0xDA0 C5_PMON_BOX_CTRL     # Uncore C-box 5 perfmon local box control MSR
XEON7500 0xDA1 C5_PMON_BOX_STATUS   # Uncore C-box 5 perfmon local box status MSR
XEON7500 0xDA2 C5_PMON_BOX_OVF_CTRL # Uncore C-box 5 perfmon local box overflow control MSR
XEON7500 0xDB0 C5_PMON_EVNT_SEL0 # Uncore C-box 5 perfmon event select MSR
XEON7500 0xDB1 C5_PMON_CTR0         # Uncore C-box 5 perfmon counter MSR
XEON7500 0xDB2 C5_PMON_EVNT_SEL1
XEON7500 0xDB3 C5_PMON_CTR1
XEON7500 0xDB4 C5_PMON_EVNT_SEL2
XEON7500 0xDB5 C5_PMON_CTR2
XEON7500 0xDB6 C5_PMON_EVNT_SEL3
XEON7500 0xDB7 C5_PMON_CTR3
XEON7500 0xDB8 C5_PMON_EVNT_SEL4
XEON7500 0xDB9 C5_PMON_CTR4
XEON7500 0xDBA C5_PMON_EVNT_SEL5
XEON7500 0xDBB C5_PMON_CTR5
XEON7500 0xDC0 C3_PMON_BOX_CTRL     # Uncore C-box 3 perfmon local box control MSR
XEON7500 0xDC1 C3_PMON_BOX_STATUS   # Uncore C-box 3 perfmon local box status MSR
XEON7500 0xDC2 C3_PMON_BOX_OVF_CTRL # Uncore C-box 3 perfmon local box overflow control MSR
XEON7500 0xDD0 C3_PMON_EVNT_SEL0    # Uncore C-box 3 perfmon event select MSR
XEON7500 0xDD1 C3_PMON_CTR0         # Uncore C-box 3 perfmon counter MSR
XEON7500 0xDD2 C3_PMON_EVNT_SEL1
XEON7500 0xDD3 C3_PMON_CTR1
XEON7500 0xDD4 C3_PMON_EVNT_SEL2
XEON7500 0xDD5 C3_PMON_CTR2
XEON7500 0xDD6 C3_PMON_EVNT_SEL3
XEON7500 0xDD7 C3_PMON_CTR3
XEON7500 0xDD8 C3_PMON_EVNT_SEL4
XEON7500 0xDD9 C3_PMON_CTR4
XEON7500 0xDDA C3_PMON_EVNT_SEL5
XEON7500 0xDDB C3_PMON_CTR5
XEON7500 0xDE0 C7_PMON_BOX_CTRL     # Uncore C-box 7 perfmon local box control MSR
XEON7500 0xDE1 C7_PMON_BOX_STATUS   # Uncore C-box 7 perfmon local box status MSR
XEON7500 0xDE2 C7_PMON_BOX_OVF_CTRL # Uncore C-box 7 perfmon local box overflow control MSR
XEON7500 0xDF0 C7_PMON_EVNT_SEL0    # Uncore C-box 7 perfmon event select MSR
XEON7500 0xDF1 C7_PMON_CTR0         # Uncore C-box 7 perfmon counter MSR
XEON7500 0xDF2 C7_PMON_EVNT_SEL1
XEON7500 0xDF3 C7_PMON_CTR1
XEON7500 0xDF4 C7_PMON_EVNT_SEL2
XEON7500 0xDF5 C7_PMON_CTR2
XEON7500 0xDF6 C7_PMON_EVNT_SEL3
XEON7500 0xDF7 C7_PMON_CTR3
XEON7500 0xDF8 C7_PMON_EVNT_SEL4
XEON7500 0xDF9 C7_PMON_CTR4
XEON7500 0xDFA C7_PMON_EVNT_SEL5
XEON7500 0xDFB C7_PMON_CTR5

# Intel-SDM-Vol4 (Intel Xeon Processor E5)
XEONE5 0xC08 U_PMON_UCLK_FIXED_CTL # Uncore U-box UCLK Fixed Counter Control
XEONE5 0xC09 U_PMON_UCLK_FIXED_CTR # Uncore U-box UCLK Fixed Counter
XEONE5 0xC10 U_PMON_EVNTSEL0       # Uncore U-box Perfmon Event Select for U-box Counter 0
XEONE5 0xC11 U_PMON_EVNTSEL1       # Uncore U-box Perfmon Event Select for U-box Counter 1
XEONE5 0xC16 U_PMON_CTR0           # Uncore U-box Perfmon Counter 0
XEONE5 0xC17 U_PMON_CTR1           # Uncore U-box Perfmon Counter 1
XEONE5 0xC24 PCU_PMON_BOX_CTL      # Uncore PCU Perfmon for PCU-box-wide Control
XEONE5 0xC30 PCU_PMON_EVNTSEL0     # Uncore PCU Perfmon Event Select for PCU Counter 0
XEONE5 0xC31 PCU_PMON_EVNTSEL1     # Uncore PCU Perfmon Event Select for PCU Counter 1
XEONE5 0xC32 PCU_PMON_EVNTSEL2     # Uncore PCU Perfmon Event Select for PCU Counter 2
XEONE5 0xC33 PCU_PMON_EVNTSEL3     # Uncore PCU Perfmon Event Select for PCU Counter 3
XEONE5 0xC34 PCU_PMON_BOX_FILTER   # Uncore PCU Perfmon box-wide Filter
XEONE5 0xC36 PCU_PMON_CTR0         # Uncore PCU Perfmon Counter 0
XEONE5 0xC37 PCU_PMON_CTR1         # Uncore PCU Perfmon Counter 1
XEONE5 0xC38 PCU_PMON_CTR2         # Uncore PCU Perfmon Counter 2
XEONE5 0xC39 PCU_PMON_CTR3         # Uncore PCU Perfmon Counter 3
XEONE5 0xD04 C0_PMON_BOX_CTL       # Uncore C-box 0 Perfmon Local Box Wide Control
XEONE5 0xD10 C0_PMON_EVNTSEL0      # Uncore C-box 0 Perfmon Event Select for C-box 0 Counter 0
XEONE5 0xD11 C0_PMON_EVNTSEL1      # Uncore C-box 0 Perfmon Event Select for C-box 0 Counter 1
XEONE5 0xD12 C0_PMON_EVNTSEL2      # Uncore C-box 0 Perfmon Event Select for C-box 0 Counter 2
XEONE5 0xD13 C0_PMON_EVNTSEL3      # Uncore C-box 0 Perfmon Event Select for C-box 0 Counter 3
XEONE5 0xD14 C0_PMON_BOX_FILTER    # Uncore C-box 0 Perfmon Box Wide Filter
XEONE5 0xD16 C0_PMON_CTR0          # Uncore C-box 0 Perfmon Counter 0
XEONE5 0xD17 C0_PMON_CTR1          # Uncore C-box 0 Perfmon Counter 1
XEONE5 0xD18 C0_PMON_CTR2          # Uncore C-box 0 Perfmon Counter 2
XEONE5 0xD19 C0_PMON_CTR3          # Uncore C-box 0 Perfmon Counter 3
XEONE5 0xD24 C1_PMON_BOX_CTL       # Uncore C-box 1 Perfmon Local Box Wide Control
XEONE5 0xD30 C1_PMON_EVNTSEL0      # Uncore C-box 1 Perfmon Event Select for C-box 1 Counter 0
XEONE5 0xD31 C1_PMON_EVNTSEL1      # Uncore C-box 1 Perfmon Event Select for C-box 1 Counter 1
XEONE5 0xD32 C1_PMON_EVNTSEL2      # Uncore C-box 1 Perfmon Event Select for C-box 1 Counter 2
XEONE5 0xD33 C1_PMON_EVNTSEL3      # Uncore C-box 1 Perfmon Event Select for C-box 1 Counter 3
XEONE5 0xD34 C1_PMON_BOX_FILTER    # Uncore C-box 1 Perfmon Box Wide Filter
XEONE5 0xD36 C1_PMON_CTR0          # Uncore C-box 1 Perfmon Counter 0
XEONE5 0xD37 C1_PMON_CTR1          # Uncore C-box 1 Perfmon Counter 1
XEONE5 0xD38 C1_PMON_CTR2          # Uncore C-box 1 Perfmon Counter 2
XEONE5 0xD39 C1_PMON_CTR3          # Uncore C-box 1 Perfmon Counter 3
XEONE5 0xD44 C2_PMON_BOX_CTL       # Uncore C-box 2 Perfmon Local Box Wide Control
XEONE5 0xD50 C2_PMON_EVNTSEL0      # Uncore C-box 2 Perfmon Event Select for C-box 2 Counter 0
XEONE5 0xD51 C2_PMON_EVNTSEL1      # Uncore C-box 2 Perfmon Event Select for C-box 2 Counter 1
XEONE5 0xD52 C2_PMON_EVNTSEL2      # Uncore C-box 2 Perfmon Event Select for C-box 2 Counter 2
XEONE5 0xD53 C2_PMON_EVNTSEL3      # Uncore C-box 2 Perfmon Event Select for C-box 2 Counter 3
XEONE5 0xD54 C2_PMON_BOX_FILTER    # Uncore C-box 2 Perfmon Box Wide Filter
XEONE5 0xD56 C2_PMON_CTR0          # Uncore C-box 2 Perfmon Counter 0
XEONE5 0xD57 C2_PMON_CTR1          # Uncore C-box 2 Perfmon Counter 1
XEONE5 0xD58 C2_PMON_CTR2          # Uncore C-box 2 Perfmon Counter 2
XEONE5 0xD59 C2_PMON_CTR3          # Uncore C-box 2 Perfmon Counter 3
XEONE5 0xD64 C3_PMON_BOX_CTL       # Uncore C-box 3 Perfmon Local Box Wide Control
XEONE5 0xD70 C3_PMON_EVNTSEL0      # Uncore C-box 3 Perfmon Event Select for C-box 3 Counter 0
XEONE5 0xD71 C3_PMON_EVNTSEL1      # Uncore C-box 3 Perfmon Event Select for C-box 3 Counter 1
XEONE5 0xD72 C3_PMON_EVNTSEL2      # Uncore C-box 3 Perfmon Event Select for C-box 3 Counter 2
XEONE5 0xD73 C3_PMON_EVNTSEL3      # Uncore C-box 3 Perfmon Event Select for C-box 3 Counter 3
XEONE5 0xD74 C3_PMON_BOX_FILTER    # Uncore C-box 3 Perfmon Box Wide Filter
XEONE5 0xD76 C3_PMON_CTR0          # Uncore C-box 3 Perfmon Counter 0
XEONE5 0xD77 C3_PMON_CTR1          # Uncore C-box 3 Perfmon Counter 1
XEONE5 0xD78 C3_PMON_CTR2          # Uncore C-box 3 Perfmon Counter 2
XEONE5 0xD79 C3_PMON_CTR3          # Uncore C-box 3 Perfmon Counter 3
XEONE5 0xD84 C4_PMON_BOX_CTL       # Uncore C-box 4 Perfmon Local Box Wide Control
XEONE5 0xD90 C4_PMON_EVNTSEL0      # Uncore C-box 4 Perfmon Event Select for C-box 4 Counter 0
XEONE5 0xD91 C4_PMON_EVNTSEL1      # Uncore C-box 4 Perfmon Event Select for C-box 4 Counter 1
XEONE5 0xD92 C4_PMON_EVNTSEL2      # Uncore C-box 4 Perfmon Event Select for C-box 4 Counter 2
XEONE5 0xD93 C4_PMON_EVNTSEL3      # Uncore C-box 4 Perfmon Event Select for C-box 4 Counter 3
XEONE5 0xD94 C4_PMON_BOX_FILTER    # Uncore C-box 4 Perfmon Box Wide Filter
XEONE5 0xD96 C4_PMON_CTR0          # Uncore C-box 4 Perfmon Counter 0
XEONE5 0xD97 C4_PMON_CTR1          # Uncore C-box 4 Perfmon Counter 1
XEONE5 0xD98 C4_PMON_CTR2          # Uncore C-box 4 Perfmon Counter 2
XEONE5 0xD99 C4_PMON_CTR3          # Uncore C-box 4 Perfmon Counter 3
XEONE5 0xDA4 C5_PMON_BOX_CTL       # Uncore C-box 5 Perfmon Local Box Wide Control
XEONE5 0xDB0 C5_PMON_EVNTSEL0      # Uncore C-box 5 Perfmon Event Select for C-box 5 Counter 0
XEONE5 0xDB1 C5_PMON_EVNTSEL1      # Uncore C-box 5 Perfmon Event Select for C-box 5 Counter 1
XEONE5 0xDB2 C5_PMON_EVNTSEL2      # Uncore C-box 5 Perfmon Event Select for C-box 5 Counter 2
XEONE5 0xDB3 C5_PMON_EVNTSEL3      # Uncore C-box 5 Perfmon Event Select for C-box 5 Counter 3
XEONE5 0xDB4 C5_PMON_BOX_FILTER    # Uncore C-box 5 Perfmon Box Wide Filter
XEONE5 0xDB6 C5_PMON_CTR0          # Uncore C-box 5 Perfmon Counter 0
XEONE5 0xDB7 C5_PMON_CTR1          # Uncore C-box 5 Perfmon Counter 1
XEONE5 0xDB8 C5_PMON_CTR2          # Uncore C-box 5 Perfmon Counter 2
XEONE5 0xDB9 C5_PMON_CTR3          # Uncore C-box 5 Perfmon Counter 3
XEONE5 0xDC4 C6_PMON_BOX_CTL       # Uncore C-box 6 Perfmon Local Box Wide Control
XEONE5 0xDD0 C6_PMON_EVNTSEL0      # Uncore C-box 6 Perfmon Event Select for C-box 6 Counter 0
XEONE5 0xDD1 C6_PMON_EVNTSEL1      # Uncore C-box 6 Perfmon Event Select for C-box 6 Counter 1
XEONE5 0xDD2 C6_PMON_EVNTSEL2      # Uncore C-box 6 Perfmon Event Select for C-box 6 Counter 2
XEONE5 0xDD3 C6_PMON_EVNTSEL3      # Uncore C-box 6 Perfmon Event Select for C-box 6 Counter 3
XEONE5 0xDD4 C6_PMON_BOX_FILTER    # Uncore C-box 6 Perfmon Box Wide Filter
XEONE5 0xDD6 C6_PMON_CTR0          # Uncore C-box 6 Perfmon Counter 0
XEONE5 0xDD7 C6_PMON_CTR1          # Uncore C-box 6 Perfmon Counter 1
XEONE5 0xDD8 C6_PMON_CTR2          # Uncore C-box 6 Perfmon Counter 2
XEONE5 0xDD9 C6_PMON_CTR3          # Uncore C-box 6 Perfmon Counter 3
XEONE5 0xDE4 C7_PMON_BOX_CTL       # Uncore C-box 7 Perfmon Local Box Wide Control
XEONE5 0xDF0 C7_PMON_EVNTSEL0      # Uncore C-box 7 Perfmon Event Select for C-box 7 Counter 0
XEONE5 0xDF1 C7_PMON_EVNTSEL1      # Uncore C-box 7 Perfmon Event Select for C-box 7 Counter 1
XEONE5 0xDF2 C7_PMON_EVNTSEL2      # Uncore C-box 7 Perfmon Event Select for C-box 7 Counter 2
XEONE5 0xDF3 C7_PMON_EVNTSEL3      # Uncore C-box 7 Perfmon Event Select for C-box 7 Counter 3
XEONE5 0xDF4 C7_PMON_BOX_FILTER    # Uncore C-box 7 Perfmon Box Wide Filter
XEONE5 0xDF6 C7_PMON_CTR0          # Uncore C-box 7 Perfmon Counter 0
XEONE5 0xDF7 C7_PMON_CTR1          # Uncore C-box 7 Perfmon Counter 1
XEONE5 0xDF8 C7_PMON_CTR2          # Uncore C-box 7 Perfmon Counter 2
XEONE5 0xDF9 C7_PMON_CTR3          # Uncore C-box 7 Perfmon Counter 3

# Intel-SDM-Vol4 (Intel Xeon Processor E5 v2 and E7 v2)
XEONE5V2 0xC00 PMON_GLOBAL_CTL      # Uncore Perfmon Per-Socket Global Control
XEONE5V2 0xC01 PMON_GLOBAL_STATUS   # Uncore Perfmon Per-Socket Global Status
XEONE5V2 0xC06 PMON_GLOBAL_CONFIG   # Uncore Perfmon Per-Socket Global Configuration
XEONE5V2 0xC15 U_PMON_BOX_STATUS    # Uncore U-box Perfmon U-Box Wide Status
XEONE5V2 0xC35 PCU_PMON_BOX_STATUS  # Uncore PCU Perfmon Box Wide Status
XEONE5V2 0xD1A C0_PMON_BOX_FILTER1  # Uncore C-Box 0 Perfmon Box Wide Filter1
XEONE5V2 0xD3A C1_PMON_BOX_FILTER1  # Uncore C-Box 1 Perfmon Box Wide Filter1
XEONE5V2 0xD5A C2_PMON_BOX_FILTER1  # Uncore C-Box 2 Perfmon Box Wide Filter1
XEONE5V2 0xD7A C3_PMON_BOX_FILTER1  # Uncore C-Box 3 Perfmon Box Wide Filter1
XEONE5V2 0xD9A C4_PMON_BOX_FILTER1  # Uncore C-Box 4 Perfmon Box Wide Filter1
XEONE5V2 0xDBA C5_PMON_BOX_FILTER1  # Uncore C-Box 5 Perfmon Box Wide Filter1
XEONE5V2 0xDDA C6_PMON_BOX_FILTER1  # Uncore C-Box 6 Perfmon Box Wide Filter1
XEONE5V2 0xDFA C7_PMON_BOX_FILTER1  # Uncore C-Box 7 Perfmon Box Wide Filter1
XEONE5V2 0xE04 C8_PMON_BOX_CTL      # Uncore C-Box 8 Perfmon Local Box Wide Control
XEONE5V2 0xE10 C8_PMON_EVNTSEL0     # Uncore C-Box 8 Perfmon Event Select for C-Box 8 Counter 0
XEONE5V2 0xE11 C8_PMON_EVNTSEL1     # Uncore C-Box 8 Perfmon Event Select for C-Box 8 Counter 1
XEONE5V2 0xE12 C8_PMON_EVNTSEL2     # Uncore C-Box 8 Perfmon Event Select for C-Box 8 Counter 2
XEONE5V2 0xE13 C8_PMON_EVNTSEL3     # Uncore C-Box 8 Perfmon Event Select for C-Box 8 Counter 3
XEONE5V2 0xE14 C8_PMON_BOX_FILTER   # Uncore C-Box 8 Perfmon Box Wide Filter
XEONE5V2 0xE16 C8_PMON_CTR0         # Uncore C-Box 8 Perfmon Counter 0
XEONE5V2 0xE17 C8_PMON_CTR1         # Uncore C-Box 8 Perfmon Counter 1
XEONE5V2 0xE18 C8_PMON_CTR2         # Uncore C-Box 8 Perfmon Counter 2
XEONE5V2 0xE19 C8_PMON_CTR3         # Uncore C-Box 8 Perfmon Counter 3
XEONE5V2 0xE1A C8_PMON_BOX_FILTER1  # Uncore C-Box 8 Perfmon Box Wide Filter1
XEONE5V2 0xE24 C9_PMON_BOX_CTL      # Uncore C-Box 9 Perfmon Local Box Wide Control
XEONE5V2 0xE30 C9_PMON_EVNTSEL0     # Uncore C-Box 9 Perfmon Event Select for C-box 9 Counter 0
XEONE5V2 0xE31 C9_PMON_EVNTSEL1     # Uncore C-Box 9 Perfmon Event Select for C-box 9 Counter 1
XEONE5V2 0xE32 C9_PMON_EVNTSEL2     # Uncore C-Box 9 Perfmon Event Select for C-box 9 Counter 2
XEONE5V2 0xE33 C9_PMON_EVNTSEL3     # Uncore C-Box 9 Perfmon Event Select for C-box 9 Counter 3
XEONE5V2 0xE34 C9_PMON_BOX_FILTER   # Uncore C-Box 9 Perfmon Box Wide Filter
XEONE5V2 0xE36 C9_PMON_CTR0         # Uncore C-Box 9 Perfmon Counter 0
XEONE5V2 0xE37 C9_PMON_CTR1         # Uncore C-Box 9 Perfmon Counter 1
XEONE5V2 0xE38 C9_PMON_CTR2         # Uncore C-Box 9 Perfmon Counter 2
XEONE5V2 0xE39 C9_PMON_CTR3         # Uncore C-Box 9 Perfmon Counter 3
XEONE5V2 0xE3A C9_PMON_BOX_FILTER1  # Uncore C-Box 9 Perfmon Box Wide Filter1
XEONE5V2 0xE44 C10_PMON_BOX_CTL     # Uncore C-Box 10 Perfmon Local Box Wide Control
XEONE5V2 0xE50 C10_PMON_EVNTSEL0    # Uncore C-Box 10 Perfmon Event Select for C-Box 10 Counter 0
XEONE5V2 0xE51 C10_PMON_EVNTSEL1    # Uncore C-Box 10 Perfmon Event Select for C-Box 10 Counter 1
XEONE5V2 0xE52 C10_PMON_EVNTSEL2    # Uncore C-Box 10 Perfmon Event Select for C-Box 10 Counter 2
XEONE5V2 0xE53 C10_PMON_EVNTSEL3    # Uncore C-Box 10 Perfmon Event Select for C-Box 10 Counter 3
XEONE5V2 0xE54 C10_PMON_BOX_FILTER  # Uncore C-Box 10 Perfmon Box Wide Filter
XEONE5V2 0xE56 C10_PMON_CTR0        # Uncore C-Box 10 Perfmon Counter 0
XEONE5V2 0xE57 C10_PMON_CTR1        # Uncore C-Box 10 Perfmon Counter 1
XEONE5V2 0xE58 C10_PMON_CTR2        # Uncore C-Box 10 Perfmon Counter 2
XEONE5V2 0xE59 C10_PMON_CTR3        # Uncore C-Box 10 Perfmon Counter 3
XEONE5V2 0xE5A C10_PMON_BOX_FILTER1 # Uncore C-Box 10 Perfmon Box Wide Filter1
XEONE5V2 0xE64 C11_PMON_BOX_CTL     # Uncore C-Box 11 Perfmon Local Box Wide Control
XEONE5V2 0xE70 C11_PMON_EVNTSEL0    # Uncore C-Box 11 Perfmon Event Select for C-Box 11 Counter 0
XEONE5V2 0xE71 C11_PMON_EVNTSEL1    # Uncore C-Box 11 Perfmon Event Select for C-Box 11 Counter 1
XEONE5V2 0xE72 C11_PMON_EVNTSEL2    # Uncore C-Box 11 Perfmon Event Select for C-Box 11 Counter 2
XEONE5V2 0xE73 C11_PMON_EVNTSEL3    # Uncore C-Box 11 Perfmon Event Select for C-Box 11 Counter 3
XEONE5V2 0xE74 C11_PMON_BOX_FILTER  # Uncore C-Box 11 Perfmon Box Wide Filter
XEONE5V2 0xE76 C11_PMON_CTR0        # Uncore C-Box 11 Perfmon Counter 0
XEONE5V2 0xE77 C11_PMON_CTR1        # Uncore C-Box 11 Perfmon Counter 1
XEONE5V2 0xE78 C11_PMON_CTR2        # Uncore C-Box 11 Perfmon Counter 2
XEONE5V2 0xE79 C11_PMON_CTR3        # Uncore C-Box 11 Perfmon Counter 3
XEONE5V2 0xE7A C11_PMON_BOX_FILTER1 # Uncore C-Box 11 Perfmon Box Wide Filter1
XEONE5V2 0xE84 C12_PMON_BOX_CTL     # Uncore C-Box 12 Perfmon Local Box Wide Control
XEONE5V2 0xE90 C12_PMON_EVNTSEL0    # Uncore C-Box 12 Perfmon Event Select for C-Box 12 Counter 0
XEONE5V2 0xE91 C12_PMON_EVNTSEL1    # Uncore C-Box 12 Perfmon Event Select for C-Box 12 Counter 1
XEONE5V2 0xE92 C12_PMON_EVNTSEL2    # Uncore C-Box 12 Perfmon Event Select for C-Box 12 Counter 2
XEONE5V2 0xE93 C12_PMON_EVNTSEL3    # Uncore C-Box 12 Perfmon Event Select for C-Box 12 Counter 3
XEONE5V2 0xE94 C12_PMON_BOX_FILTER  # Uncore C-Box 12 Perfmon Box Wide Filter
XEONE5V2 0xE96 C12_PMON_CTR0        # Uncore C-Box 12 Perfmon Counter 0
XEONE5V2 0xE97 C12_PMON_CTR1        # Uncore C-Box 12 Perfmon Counter 1
XEONE5V2 0xE98 C12_PMON_CTR2        # Uncore C-Box 12 Perfmon Counter 2
XEONE5V2 0xE99 C12_PMON_CTR3        # Uncore C-Box 12 Perfmon Counter 3
XEONE5V2 0xE9A C12_PMON_BOX_FILTER1 # Uncore C-Box 12 Perfmon Box Wide Filter1
XEONE5V2 0xEA4 C13_PMON_BOX_CTL     # Uncore C-Box 13 Perfmon Local Box Wide Control
XEONE5V2 0xEB0 C13_PMON_EVNTSEL0    # Uncore C-Box 13 Perfmon Event Select for C-Box 13 Counter 0
XEONE5V2 0xEB1 C13_PMON_EVNTSEL1    # Uncore C-Box 13 Perfmon Event Select for C-Box 13 Counter 1
XEONE5V2 0xEB2 C13_PMON_EVNTSEL2    # Uncore C-Box 13 Perfmon Event Select for C-Box 13 Counter 2
XEONE5V2 0xEB3 C13_PMON_EVNTSEL3    # Uncore C-Box 13 Perfmon Event Select for C-Box 13 Counter 3
XEONE5V2 0xEB4 C13_PMON_BOX_FILTER  # Uncore C-Box 13 Perfmon Box Wide Filter
XEONE5V2 0xEB6 C13_PMON_CTR0        # Uncore C-Box 13 Perfmon Counter 0
XEONE5V2 0xEB7 C13_PMON_CTR1        # Uncore C-Box 13 Perfmon Counter 1
XEONE5V2 0xEB8 C13_PMON_CTR2        # Uncore C-Box 13 Perfmon Counter 2
XEONE5V2 0xEB9 C13_PMON_CTR3        # Uncore C-Box 13 Perfmon Counter 3
XEONE5V2 0xEBA C13_PMON_BOX_FILTER1 # Uncore C-Box 13 Perfmon Box Wide Filter1
XEONE5V2 0xEC4 C14_PMON_BOX_CTL     # Uncore C-Box 14 Perfmon Local Box Wide Control
XEONE5V2 0xED0 C14_PMON_EVNTSEL0    # Uncore C-Box 14 Perfmon Event Select for C-Box 14 Counter 0
XEONE5V2 0xED1 C14_PMON_EVNTSEL1    # Uncore C-Box 14 Perfmon Event Select for C-Box 14 Counter 1
XEONE5V2 0xED2 C14_PMON_EVNTSEL2    # Uncore C-Box 14 Perfmon Event Select for C-Box 14 Counter 2
XEONE5V2 0xED3 C14_PMON_EVNTSEL3    # Uncore C-Box 14 Perfmon Event Select for C-Box 14 Counter 3
XEONE5V2 0xED4 C14_PMON_BOX_FILTER  # Uncore C-Box 14 Perfmon Box Wide Filter
XEONE5V2 0xED6 C14_PMON_CTR0        # Uncore C-Box 14 Perfmon Counter 0
XEONE5V2 0xED7 C14_PMON_CTR1        # Uncore C-Box 14 Perfmon Counter 1
XEONE5V2 0xED8 C14_PMON_CTR2        # Uncore C-Box 14 Perfmon Counter 2
XEONE5V2 0xED9 C14_PMON_CTR3        # Uncore C-Box 14 Perfmon Counter 3
XEONE5V2 0xEDA C14_PMON_BOX_FILTER1 # Uncore C-Box 14 Perfmon Box Wide Filter1

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0xC00 SMRAM_CR0               # Available only in SMM. SMRAM copy of CR0 saved by SMI
XEONSCAL4 0xC01 SMRAM_CR3               # Available only in SMM. SMRAM copy of CR3 saved by SMI
XEONSCAL4 0xC02 SMRAM_EFLAGS            # Available only in SMM. SMRAM copy of EFLAGS saved by SMI
XEONSCAL4 0xC03 SMRAM_EFER              # Available only in SMM. SMRAM copy of EFER saved by SMI
XEONSCAL4 0xC04 SMRAM_RIP               # Available only in SMM. SMRAM copy of RIP saved by SMI, introduced in HSW
XEONSCAL4 0xC05 SMRAM_DR6               # Available only in SMM. SMRAM copy of DR6 saved by SMI
XEONSCAL4 0xC06 SMRAM_DR7               # Available only in SMM. SMRAM copy of DR7 saved by SMI
XEONSCAL4 0xC07 SMRAM_TR_LDTR           # Available only in SMM. SMRAM copy of TR Sel and LDTR Sel saved by SMI
XEONSCAL4 0xC08 SMRAM_GS_FS             # Available only in SMM. SMRAM copy of GS and FS saved by SMI
XEONSCAL4 0xC09 SMRAM_DS_SS             # Available only in SMM. SMRAM copy of DS and SS saved by SMI
XEONSCAL4 0xC0A SMRAM_CS_ES             # Available only in SMM. SMRAM copy of CS and ES saved by SMI
XEONSCAL4 0xC0B SMRAM_IOMISCINFO        # Available only in SMM. SMRAM copy of IOMISCINFO saved by SMI
XEONSCAL4 0xC0C SMRAM_IO_MEM_ADDR       # Available only in SMM. SMRAM copy of IO_MEM_ADDR saved by SMI
XEONSCAL4 0xC0D SMRAM_RDI               # Available only in SMM. SMRAM copy of RDI saved by SMI
XEONSCAL4 0xC0E SMRAM_RSI               # Available only in SMM. SMRAM copy of RSI saved by SMI
XEONSCAL4 0xC0F SMRAM_RBP               # Available only in SMM. SMRAM copy of RBP saved by SMI
XEONSCAL4 0xC10 SMRAM_RSP               # Available only in SMM. SMRAM copy of RSP saved by SMI
XEONSCAL4 0xC11 SMRAM_RBX               # Available only in SMM. SMRAM copy of RBX saved by SMI
XEONSCAL4 0xC12 SMRAM_RDX               # Available only in SMM. SMRAM copy of RDX saved by SMI
XEONSCAL4 0xC13 SMRAM_RCX               # Available only in SMM. SMRAM copy of RCX saved by SMI
XEONSCAL4 0xC14 SMRAM_RAX               # Available only in SMM. SMRAM copy of RAX saved by SMI
XEONSCAL4 0xC15 SMRAM_R8                # Available only in SMM. SMRAM copy of R8 saved by SMI
XEONSCAL4 0xC16 SMRAM_R9
XEONSCAL4 0xC17 SMRAM_R10
XEONSCAL4 0xC18 SMRAM_R11
XEONSCAL4 0xC19 SMRAM_R12
XEONSCAL4 0xC1A SMRAM_R13
XEONSCAL4 0xC1B SMRAM_R14
XEONSCAL4 0xC1C SMRAM_R15
XEONSCAL4 0xC1F SMRAM_EVENT_CTL_HLT_IO  # Available only in SMM. SMRAM copy of EVENT_CTL, HLT flag and IO flag saved by SMI
XEONSCAL4 0xC20 SMRAM_SMBASE            # Available only in SMM. SMRAM copy of SMBASE saved by SMI
XEONSCAL4 0xC21 SMRAM_SMM_REVID         # Available only in SMM. SMRAM copy of SMM_REVID saved by SMI
XEONSCAL4 0xC22 SMRAM_IEDBASE           # Available only in SMM. SMRAM copy of IEDBASE saved by SMI
XEONSCAL4 0xC23 SMRAM_EPTP_ENABLE       # Available only in SMM. SMRAM copy of EPTP_ENABLE saved by SMI
XEONSCAL4 0xC24 SMRAM_EPTP              # Available only in SMM. SMRAM copy of EPTP saved by SMI
XEONSCAL4 0xC25 SMRAM_BNDCFGS           # Available only in SMM. SMRAM copy of BNDCFGS saved by SMI
XEONSCAL4 0xC26 SMRAM_SSP               # Available only in SMM. SMRAM copy of SSP saved by SMI
XEONSCAL4 0xC2C SMRAM_LDTR_BASE         # Available only in SMM. SMRAM copy of LDTR_BASE saved by SMI
XEONSCAL4 0xC2D SMRAM_IDTR_BASE         # Available only in SMM. SMRAM copy of IDTR_BASE saved by SMI
XEONSCAL4 0xC2E SMRAM_GDTR_BASE         # Available only in SMM. SMRAM copy of IDTR_BASE saved by SMI
XEONSCAL4 0xC37 SMRAM_CR4               # Available only in SMM. SMRAM copy of CR0 saved by SMI
XEONSCAL4 0xC40 SMRAM_IO_RSI            # Available only in SMM. SMRAM copy of IO_RSI saved by SMI
XEONSCAL4 0xC41 SMRAM_IO_RCX            # Available only in SMM. SMRAM copy of IO_RCX saved by SMI
XEONSCAL4 0xC42 SMRAM_IO_RIP            # Available only in SMM. SMRAM copy of IO_RIP saved by SMI
XEONSCAL4 0xC43 SMRAM_IO_RDI            # Available only in SMM. SMRAM copy of IO_RDI saved by SMI

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/GnrMsr.h and SprMsr.h
XEONSCAL4 0xC70 QOS_MBM_RANGE0_BASE_ADDR # MSR that is used by SW to program the Address Range Base value at 64MB granularity to be used for monitoring the memory BW
XEONSCAL4 0xC71 QOS_MBM_RANGE1_BASE_ADDR
XEONSCAL4 0xC72 QOS_MBM_RANGE2_BASE_ADDR
XEONSCAL4 0xC73 QOS_MBM_RANGE3_BASE_ADDR
XEONSCAL4 0xC74 QOS_MBM_RANGE4_BASE_ADDR
XEONSCAL4 0xC75 QOS_MBM_RANGE5_BASE_ADDR
XEONSCAL4 0xC76 QOS_MBM_RANGE6_BASE_ADDR
XEONSCAL4 0xC77 QOS_MBM_RANGE7_BASE_ADDR
XEONSCAL4 0xC78 QOS_MBM_RANGE0_LIMIT_ADDR # MSR that is used by SW to program the Address Range0 LIMIT value at 64MB granularity to be used for monitoring the memory BW
XEONSCAL4 0xC79 QOS_MBM_RANGE1_LIMIT_ADDR
XEONSCAL4 0xC7A QOS_MBM_RANGE2_LIMIT_ADDR
XEONSCAL4 0xC7B QOS_MBM_RANGE3_LIMIT_ADDR
XEONSCAL4 0xC7C QOS_MBM_RANGE4_LIMIT_ADDR
XEONSCAL4 0xC7D QOS_MBM_RANGE5_LIMIT_ADDR
XEONSCAL4 0xC7E QOS_MBM_RANGE6_LIMIT_ADDR
XEONSCAL4 0xC7F QOS_MBM_RANGE7_LIMIT_ADDR

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0xC81 PQOS_CDP_ENABLE         # CDP enable
XEONSCAL4 0xC83 IIO_QOS_CFG

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/SprMsr.h
XEONSCAL4 0xC84 MBA_CFG # MBA (mem bandwidth alloc) cfg

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0xC85 L3_PROTECTED_WAYS       # way mask for locked LLC ways. If the hit way intersects this mask, LLC to SF migration is disabled
XEONSCAL4 0xC86 MBM_CFG_3DXP            # enable maksing of events that MBM counts
XEONSCAL4 0xC87 SF_QOS_INFO             # STLB QoS MASK configuration
XEONSCAL4 0xC8B IIO_LLC_WAYS            # Way Mask for IIO accesses (SF and LLC)

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/SprMsr.h
XEONSCAL4 0xC8C QLRU_CONFIG # uCR: LRU Update values for various opcodes that update the LRU bits

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0xC8D QOSEVTSEL               # MSR that is used to receive query id from software for which data will be looked up by another MSR
XEONSCAL4 0xC8E QMC                     # MSR that is used to convey the counter value for the RMID queried by the QOSEVTSEL MSR. This is a Read only MSR

# https://github.com/fwupd/fwupd/blob/55bd4862d3ad8f0c7bf92dc6d7732afcad6e47a8/plugins/msr/fu-plugin-msr.c#L49
# https://github.com/tianocore/edk2/blob/c9b7c6e0cc7da76b74bcdd8c90cef956d5ae971c/MdePkg/Include/Register/Intel/ArchitecturalMsr.h#L5700-L5737
0xC80 IA32_DEBUG_INTERFACE  # Intel-SDM-Vol4 Silicon Debug Feature Control

0xC81 IA32_L3_QOS_CFG # Intel-SDM-Vol4 L3 QOS Configuration
0xC82 IA32_L2_QOS_CFG # Intel-SDM-Vol4 L2 QOS Configuration. MLC Class Of Service Configuration Register

# https://github.com/coreboot/coreboot/blob/4.18/src/include/cpu/x86/msr.h
0xC85 IA32_L3_PROTECTED_WAYS
0xC87 IA32_SF_QOS_INFO

0xC8D IA32_QM_EVTSEL  # Intel-SDM-Vol4 Monitoring Event Select Register
0xC8E IA32_QM_CTR     # Intel-SDM-Vol4 Monitoring Counter Register
0xC8F IA32_PQR_ASSOC  # Intel-SDM-Vol4 Resource Association Register

# 0xC90-0xD8F Intel-SDM-Vol4 Reserved MSR Address Space for CAT Mask Registers, See Section 18.19.4.1, "Enumeration and Detection Support of Cache Allocation Technology" ; L3 CAT Mask for COS0
# 0xC90-0xCCF Intel-SDM-Vol4 L3 CAT Mask for COSn (Class Of Service Mask)
# https://github.com/intel/intel-cmt-cat/blob/6f385efba25682bc1d3dd2332fd177639ac8d0c7/lib/cpu_registers.h defines 0xC90-0xD0F as PQOS_MSR_L3CA_MASK_{START,END}
# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/kernel/cpu/resctrl/internal.h?h=v6.1 defines MSR_IA32_L3_CBM_BASE=0xc90
0xC90 IA32_L3_MASK_0
0xC91 IA32_L3_MASK_1
0xC92 IA32_L3_MASK_2
0xC93 IA32_L3_MASK_3
0xC94 IA32_L3_MASK_4
0xC95 IA32_L3_MASK_5
0xC96 IA32_L3_MASK_6
0xC97 IA32_L3_MASK_7
0xC98 IA32_L3_MASK_8
0xC99 IA32_L3_MASK_9
0xC9A IA32_L3_MASK_10
0xC9B IA32_L3_MASK_11
0xC9C IA32_L3_MASK_12
0xC9D IA32_L3_MASK_13
0xC9E IA32_L3_MASK_14
0xC9F IA32_L3_MASK_15

# Intel-SDM-Vol4 (Intel Xeon Processor D and Intel Xeon Processors E5 v4 Family) L3 Class Of Service Mask - COS 0
XEONE5V4 0xC90 IA32_L3_QOS_MASK_0
XEONE5V4 0xC91 IA32_L3_QOS_MASK_1
XEONE5V4 0xC92 IA32_L3_QOS_MASK_2
XEONE5V4 0xC93 IA32_L3_QOS_MASK_3
XEONE5V4 0xC94 IA32_L3_QOS_MASK_4
XEONE5V4 0xC95 IA32_L3_QOS_MASK_5
XEONE5V4 0xC96 IA32_L3_QOS_MASK_6
XEONE5V4 0xC97 IA32_L3_QOS_MASK_7
XEONE5V4 0xC98 IA32_L3_QOS_MASK_8
XEONE5V4 0xC99 IA32_L3_QOS_MASK_9
XEONE5V4 0xC9A IA32_L3_QOS_MASK_10
XEONE5V4 0xC9B IA32_L3_QOS_MASK_11
XEONE5V4 0xC9C IA32_L3_QOS_MASK_12
XEONE5V4 0xC9D IA32_L3_QOS_MASK_13
XEONE5V4 0xC9E IA32_L3_QOS_MASK_14
XEONE5V4 0xC9F IA32_L3_QOS_MASK_15

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=21b362cc762aabb3e8496d33d7b4538154c95a0b defines MSR_RMID_SNC_CONFIG
XEONSCAL4 0xCA0 RMID_SNC_DISABLE        # If set, RMID will be compared with FinalCHAID = BaseCHA_Cluster + HashCHAID. If not set, RMID will be compared with HashCHAID
XEONSCAL4 0xCA1 QMC_CNTR_CORRECTION     # Apply correction factor upon data return through the IA32_QM_CTR MSR

# 0xD10-0xD4F Intel-SDM-Vol4 Reserved MSR Address Space for L2 CAT Mask Registers, See Section 18.19.4.1, "Enumeration and Detection Support of Cache Allocation Technology"
# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/kernel/cpu/resctrl/internal.h?h=v6.1 defines MSR_IA32_L2_CBM_BASE=0xd10
# https://github.com/intel/intel-cmt-cat/blob/6f385efba25682bc1d3dd2332fd177639ac8d0c7/lib/cpu_registers.h defines PQOS_MSR_L2CA_MASK_START=0xD10
0xD10 IA32_L2_MASK_0  # Intel-SDM-Vol4 L2 CAT Mask for COS0
0xD11 IA32_L2_MASK_1  # Intel-SDM-Vol4 L2 CAT Mask for COS1
0xD12 IA32_L2_MASK_2  # Intel-SDM-Vol4 L2 CAT Mask for COS2
0xD13 IA32_L2_MASK_3  # Intel-SDM-Vol4 L2 CAT Mask for COS3
0xD14 IA32_L2_MASK_4  # Intel-SDM-Vol4 L2 CAT Mask for COS4
0xD15 IA32_L2_MASK_5  # Intel-SDM-Vol4 L2 CAT Mask for COS5
0xD16 IA32_L2_MASK_6  # Intel-SDM-Vol4 L2 CAT Mask for COS6
0xD17 IA32_L2_MASK_7  # Intel-SDM-Vol4 L2 CAT Mask for COS7
0xD18 IA32_L2_MASK_8  # Intel-SDM-Vol4 L2 CAT Mask for COS8
0xD19 IA32_L2_MASK_9  # Intel-SDM-Vol4 L2 CAT Mask for COS9
0xD1A IA32_L2_MASK_10 # Intel-SDM-Vol4 L2 CAT Mask for COS10
0xD1B IA32_L2_MASK_11 # Intel-SDM-Vol4 L2 CAT Mask for COS11
0xD1C IA32_L2_MASK_12 # Intel-SDM-Vol4 L2 CAT Mask for COS12
0xD1D IA32_L2_MASK_13 # Intel-SDM-Vol4 L2 CAT Mask for COS13
0xD1E IA32_L2_MASK_14 # Intel-SDM-Vol4 L2 CAT Mask for COS14
0xD1F IA32_L2_MASK_15 # Intel-SDM-Vol4 L2 CAT Mask for COS15
0xD20 IA32_L2_MASK_16 # Intel-SDM-Vol4 L2 CAT Mask for COS16
0xD21 IA32_L2_MASK_17 # Intel-SDM-Vol4 L2 CAT Mask for COS17
0xD22 IA32_L2_MASK_18 # Intel-SDM-Vol4 L2 CAT Mask for COS18
0xD23 IA32_L2_MASK_19 # Intel-SDM-Vol4 L2 CAT Mask for COS19
0xD24 IA32_L2_MASK_20 # Intel-SDM-Vol4 L2 CAT Mask for COS20
0xD25 IA32_L2_MASK_21 # Intel-SDM-Vol4 L2 CAT Mask for COS21
0xD26 IA32_L2_MASK_22 # Intel-SDM-Vol4 L2 CAT Mask for COS22
0xD27 IA32_L2_MASK_23 # Intel-SDM-Vol4 L2 CAT Mask for COS23
0xD28 IA32_L2_MASK_24 # Intel-SDM-Vol4 L2 CAT Mask for COS24
0xD29 IA32_L2_MASK_25 # Intel-SDM-Vol4 L2 CAT Mask for COS25
0xD2A IA32_L2_MASK_26 # Intel-SDM-Vol4 L2 CAT Mask for COS26
0xD2B IA32_L2_MASK_27 # Intel-SDM-Vol4 L2 CAT Mask for COS27
0xD2C IA32_L2_MASK_28 # Intel-SDM-Vol4 L2 CAT Mask for COS28
0xD2D IA32_L2_MASK_29 # Intel-SDM-Vol4 L2 CAT Mask for COS29
0xD2E IA32_L2_MASK_30 # Intel-SDM-Vol4 L2 CAT Mask for COS30
0xD2F IA32_L2_MASK_31 # Intel-SDM-Vol4 L2 CAT Mask for COS31
0xD30 IA32_L2_MASK_32 # Intel-SDM-Vol4 L2 CAT Mask for COS32
0xD31 IA32_L2_MASK_33 # Intel-SDM-Vol4 L2 CAT Mask for COS33
0xD32 IA32_L2_MASK_34 # Intel-SDM-Vol4 L2 CAT Mask for COS34
0xD33 IA32_L2_MASK_35 # Intel-SDM-Vol4 L2 CAT Mask for COS35
0xD34 IA32_L2_MASK_36 # Intel-SDM-Vol4 L2 CAT Mask for COS36
0xD35 IA32_L2_MASK_37 # Intel-SDM-Vol4 L2 CAT Mask for COS37
0xD36 IA32_L2_MASK_38 # Intel-SDM-Vol4 L2 CAT Mask for COS38
0xD37 IA32_L2_MASK_39 # Intel-SDM-Vol4 L2 CAT Mask for COS39
0xD38 IA32_L2_MASK_40 # Intel-SDM-Vol4 L2 CAT Mask for COS40
0xD39 IA32_L2_MASK_41 # Intel-SDM-Vol4 L2 CAT Mask for COS41
0xD3A IA32_L2_MASK_42 # Intel-SDM-Vol4 L2 CAT Mask for COS42
0xD3B IA32_L2_MASK_43 # Intel-SDM-Vol4 L2 CAT Mask for COS43
0xD3C IA32_L2_MASK_44 # Intel-SDM-Vol4 L2 CAT Mask for COS44
0xD3D IA32_L2_MASK_45 # Intel-SDM-Vol4 L2 CAT Mask for COS45
0xD3E IA32_L2_MASK_46 # Intel-SDM-Vol4 L2 CAT Mask for COS46
0xD3F IA32_L2_MASK_47 # Intel-SDM-Vol4 L2 CAT Mask for COS47
0xD40 IA32_L2_MASK_48 # Intel-SDM-Vol4 L2 CAT Mask for COS48
0xD41 IA32_L2_MASK_49 # Intel-SDM-Vol4 L2 CAT Mask for COS49
0xD42 IA32_L2_MASK_50 # Intel-SDM-Vol4 L2 CAT Mask for COS50
0xD43 IA32_L2_MASK_51 # Intel-SDM-Vol4 L2 CAT Mask for COS51
0xD44 IA32_L2_MASK_52 # Intel-SDM-Vol4 L2 CAT Mask for COS52
0xD45 IA32_L2_MASK_53 # Intel-SDM-Vol4 L2 CAT Mask for COS53
0xD46 IA32_L2_MASK_54 # Intel-SDM-Vol4 L2 CAT Mask for COS54
0xD47 IA32_L2_MASK_55 # Intel-SDM-Vol4 L2 CAT Mask for COS55
0xD48 IA32_L2_MASK_56 # Intel-SDM-Vol4 L2 CAT Mask for COS56
0xD49 IA32_L2_MASK_57 # Intel-SDM-Vol4 L2 CAT Mask for COS57
0xD4A IA32_L2_MASK_58 # Intel-SDM-Vol4 L2 CAT Mask for COS58
0xD4B IA32_L2_MASK_59 # Intel-SDM-Vol4 L2 CAT Mask for COS59
0xD4C IA32_L2_MASK_60 # Intel-SDM-Vol4 L2 CAT Mask for COS60
0xD4D IA32_L2_MASK_61 # Intel-SDM-Vol4 L2 CAT Mask for COS61
0xD4E IA32_L2_MASK_62 # Intel-SDM-Vol4 L2 CAT Mask for COS62
0xD4F IA32_L2_MASK_63 # Intel-SDM-Vol4 L2 CAT Mask for COS63

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/kernel/cpu/resctrl/internal.h?h=v6.1 defines MSR_IA32_MBA_THRTL_BASE=0xd50
# https://github.com/intel/intel-cmt-cat/blob/6f385efba25682bc1d3dd2332fd177639ac8d0c7/lib/cpu_registers.h defines PQOS_MSR_MBA_MASK_START=0xD50
0xD50 MBA_THRTL_0 # Memory Bandwidth Allocation

# Intel-SDM-Vol4 (Atom Goldmont Microarchitecture)
ATOM 0xD10 IA32_L2_QOS_MASK_0 # L2 Class Of Service Mask - COS 0
ATOM 0xD11 IA32_L2_QOS_MASK_1 # L2 Class Of Service Mask - COS 1
ATOM 0xD12 IA32_L2_QOS_MASK_2 # L2 Class Of Service Mask - COS 2
ATOM 0xD13 IA32_L2_QOS_MASK_3 # L2 Class Of Service Mask - COS 3

# 0xD10-0xD17 Intel-SDM-Vol4 (12th and 13th Generation Intel Core Processors) IA32_CR_L2_QOS_MASK_[0-7]
# 0xD10-0xD1F Intel-SDM-Vol4 (12th and 13th Generation Intel Core Processors) IA32_CR_L2_QOS_MASK_[0-15]
CORE12 0xD10 IA32_CR_L2_QOS_MASK_0
CORE12 0xD11 IA32_CR_L2_QOS_MASK_1
CORE12 0xD12 IA32_CR_L2_QOS_MASK_2
CORE12 0xD13 IA32_CR_L2_QOS_MASK_3
CORE12 0xD14 IA32_CR_L2_QOS_MASK_4
CORE12 0xD15 IA32_CR_L2_QOS_MASK_5
CORE12 0xD16 IA32_CR_L2_QOS_MASK_6
CORE12 0xD17 IA32_CR_L2_QOS_MASK_7
CORE12 0xD18 IA32_CR_L2_QOS_MASK_8
CORE12 0xD19 IA32_CR_L2_QOS_MASK_9
CORE12 0xD1A IA32_CR_L2_QOS_MASK_10
CORE12 0xD1B IA32_CR_L2_QOS_MASK_11
CORE12 0xD1C IA32_CR_L2_QOS_MASK_12
CORE12 0xD1D IA32_CR_L2_QOS_MASK_13
CORE12 0xD1E IA32_CR_L2_QOS_MASK_14
CORE12 0xD1F IA32_CR_L2_QOS_MASK_15

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/SprMsr.h
XEONSCAL4 0xD1F RO_DUMMY_REGISTER_MUST_GP # Dummy register, intended to use as sink CR for writes, will return zeroes for reads
XEONSCAL4 0xD20 DUMMY_REGISTER_MUST_GP0_0
XEONSCAL4 0xD21 DUMMY_REGISTER_MUST_GP1_1
XEONSCAL4 0xD22 DUMMY_REGISTER_MUST_GP2_2
XEONSCAL4 0xD23 DUMMY_REGISTER_MUST_GP3_3
XEONSCAL4 0xD24 DUMMY_REGISTER_MUST_GP4_4
XEONSCAL4 0xD25 DUMMY_REGISTER_MUST_GP5_5
XEONSCAL4 0xD26 DUMMY_REGISTER_MUST_GP6_6
XEONSCAL4 0xD27 DUMMY_REGISTER_MUST_GP7_7
XEONSCAL4 0xD28 DUMMY_REGISTER_MUST_GP8_8
XEONSCAL4 0xD29 DUMMY_REGISTER_MUST_GP9_9
XEONSCAL4 0xD2A DUMMY_REGISTER_MUST_GP10_10
XEONSCAL4 0xD2B DUMMY_REGISTER_MUST_GP11_11
XEONSCAL4 0xD2C DUMMY_REGISTER_MUST_GP12_12
XEONSCAL4 0xD2D DUMMY_REGISTER_MUST_GP13_13
XEONSCAL4 0xD2E DUMMY_REGISTER_MUST_GP14_14
XEONSCAL4 0xD2F DUMMY_REGISTER_MUST_GP15_15

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0xD50 QOS_EXT_BW_THRTL_0_0    # This MSR is used for Memory BW enforcement
XEONSCAL4 0xD51 QOS_EXT_BW_THRTL_1_1
XEONSCAL4 0xD52 QOS_EXT_BW_THRTL_2_2
XEONSCAL4 0xD53 QOS_EXT_BW_THRTL_3_3
XEONSCAL4 0xD54 QOS_EXT_BW_THRTL_4_4
XEONSCAL4 0xD55 QOS_EXT_BW_THRTL_5_5
XEONSCAL4 0xD56 QOS_EXT_BW_THRTL_6_6
XEONSCAL4 0xD57 QOS_EXT_BW_THRTL_7_7
XEONSCAL4 0xD58 QOS_EXT_BW_THRTL_8_8
XEONSCAL4 0xD59 QOS_EXT_BW_THRTL_9_9
XEONSCAL4 0xD5A QOS_EXT_BW_THRTL_10_10
XEONSCAL4 0xD5B QOS_EXT_BW_THRTL_11_11
XEONSCAL4 0xD5C QOS_EXT_BW_THRTL_12_12
XEONSCAL4 0xD5D QOS_EXT_BW_THRTL_13_13
XEONSCAL4 0xD5E QOS_EXT_BW_THRTL_14_14

0xD90 IA32_BNDCFGS                # Intel-SDM-Vol4 Supervisor State of MPX Configuration

# Intel Key Locker https://www.intel.com/content/www/us/en/develop/download/intel-key-locker-specification.html
0xD91 IA32_COPY_LOCAL_TO_PLATFORM # Intel-SDM-Vol4 Copy Local State to Platform State
0xD92 IA32_COPY_PLATFORM_TO_LOCAL # Intel-SDM-Vol4 Copy Platform State to Local State

0xD93 IA32_PASID                  # Intel-SDM-Vol4 Process Address Space Identifier

0xDA0 IA32_XSS  # Intel-SDM-Vol4 Extended Supervisor State Mask

# Intel-SDM-Vol4 Package Level Enable/disable HDC
0xDB0 IA32_PKG_HDC_CTL

# Intel-SDM-Vol4 Enable/disable HWP
0xDB1 IA32_PM_CTL1

# Intel-SDM-Vol4 Per-Logical_Processor HDC Idle Residency
0xDB2 IA32_THREAD_STALL

# Intel-SDM-Vol4 (6th-13th Xeon Processor)
XEON6 0xDC0 LBR_INFO_0 # Last Branch Record 0 Additional Information
XEON6 0xDC1 LBR_INFO_1
XEON6 0xDC2 LBR_INFO_2
XEON6 0xDC3 LBR_INFO_3
XEON6 0xDC4 LBR_INFO_4
XEON6 0xDC5 LBR_INFO_5
XEON6 0xDC6 LBR_INFO_6
XEON6 0xDC7 LBR_INFO_7
XEON6 0xDC8 LBR_INFO_8
XEON6 0xDC9 LBR_INFO_9
XEON6 0xDCA LBR_INFO_10
XEON6 0xDCB LBR_INFO_11
XEON6 0xDCC LBR_INFO_12
XEON6 0xDCD LBR_INFO_13
XEON6 0xDCE LBR_INFO_14
XEON6 0xDCF LBR_INFO_15
XEON6 0xDD0 LBR_INFO_16
XEON6 0xDD1 LBR_INFO_17
XEON6 0xDD2 LBR_INFO_18
XEON6 0xDD3 LBR_INFO_19
XEON6 0xDD4 LBR_INFO_20
XEON6 0xDD5 LBR_INFO_21
XEON6 0xDD6 LBR_INFO_22
XEON6 0xDD7 LBR_INFO_23
XEON6 0xDD8 LBR_INFO_24
XEON6 0xDD9 LBR_INFO_25
XEON6 0xDDA LBR_INFO_26
XEON6 0xDDB LBR_INFO_27
XEON6 0xDDC LBR_INFO_28
XEON6 0xDDD LBR_INFO_29
XEON6 0xDDE LBR_INFO_30
XEON6 0xDDF LBR_INFO_31

# Intel-SDM-Vol4 (6th, 7th, 8th Generations Intel Core Processors)
CORE6 0xE01 UNC_PERF_GLOBAL_CTRL   # Uncore PMU Global Control
CORE6 0xE02 UNC_PERF_GLOBAL_STATUS # Uncore PMU Main Status

# Intel-SDM-Vol4 (Intel Xeon Processor 7500 Series)
XEON7500 0xE00 R0_PMON_BOX_CTRL     # Uncore R-box 0 perfmon local box control MSR
XEON7500 0xE01 R0_PMON_BOX_STATUS   # Uncore R-box 0 perfmon local box status MSR
XEON7500 0xE02 R0_PMON_BOX_OVF_CTRL # Uncore R-box 0 perfmon local box overflow control MSR
XEON7500 0xE04 R0_PMON_IPERF0_P0    # Uncore R-box 0 perfmon IPERF0 unit Port 0 select MSR
XEON7500 0xE05 R0_PMON_IPERF0_P1
XEON7500 0xE06 R0_PMON_IPERF0_P2
XEON7500 0xE07 R0_PMON_IPERF0_P3
XEON7500 0xE08 R0_PMON_IPERF0_P4
XEON7500 0xE09 R0_PMON_IPERF0_P5
XEON7500 0xE0A R0_PMON_IPERF0_P6
XEON7500 0xE0B R0_PMON_IPERF0_P7
XEON7500 0xE0C R0_PMON_QLX_P0       # Uncore R-box 0 perfmon QLX unit Port 0 select MSR
XEON7500 0xE0D R0_PMON_QLX_P1
XEON7500 0xE0E R0_PMON_QLX_P2
XEON7500 0xE0F R0_PMON_QLX_P3
XEON7500 0xE10 R0_PMON_EVNT_SEL0    # Uncore R-box 0 perfmon event select MSR
XEON7500 0xE11 R0_PMON_CTR0         # Uncore R-box 0 perfmon counter MSR
XEON7500 0xE12 R0_PMON_EVNT_SEL1
XEON7500 0xE13 R0_PMON_CTR1
XEON7500 0xE14 R0_PMON_EVNT_SEL2
XEON7500 0xE15 R0_PMON_CTR2
XEON7500 0xE16 R0_PMON_EVNT_SEL3
XEON7500 0xE17 R0_PMON_CTR3
XEON7500 0xE18 R0_PMON_EVNT_SEL4
XEON7500 0xE19 R0_PMON_CTR4
XEON7500 0xE1A R0_PMON_EVNT_SEL5
XEON7500 0xE1B R0_PMON_CTR5
XEON7500 0xE1C R0_PMON_EVNT_SEL6
XEON7500 0xE1D R0_PMON_CTR6
XEON7500 0xE1E R0_PMON_EVNT_SEL7
XEON7500 0xE1F R0_PMON_CTR7
XEON7500 0xE20 R1_PMON_BOX_CTRL     # Uncore R-box 1 perfmon local box control MSR
XEON7500 0xE21 R1_PMON_BOX_STATUS   # Uncore R-box 1 perfmon local box status MSR
XEON7500 0xE22 R1_PMON_BOX_OVF_CTRL # Uncore R-box 1 perfmon local box overflow control MSR
XEON7500 0xE24 R1_PMON_IPERF1_P8    # Uncore R-box 1 perfmon IPERF1 unit Port 8 select MSR
XEON7500 0xE25 R1_PMON_IPERF1_P9
XEON7500 0xE26 R1_PMON_IPERF1_P10
XEON7500 0xE27 R1_PMON_IPERF1_P11
XEON7500 0xE28 R1_PMON_IPERF1_P12
XEON7500 0xE29 R1_PMON_IPERF1_P13
XEON7500 0xE2A R1_PMON_IPERF1_P14
XEON7500 0xE2B R1_PMON_IPERF1_P15
XEON7500 0xE2C R1_PMON_QLX_P4      # Uncore R-box 1 perfmon QLX unit Port 4 select MSR
XEON7500 0xE2D R1_PMON_QLX_P5
XEON7500 0xE2E R1_PMON_QLX_P6
XEON7500 0xE2F R1_PMON_QLX_P7
XEON7500 0xE30 R1_PMON_EVNT_SEL8   # Uncore R-box 1 perfmon event select MSR
XEON7500 0xE31 R1_PMON_CTR8        # Uncore R-box 1 perfmon counter MSR
XEON7500 0xE32 R1_PMON_EVNT_SEL9
XEON7500 0xE33 R1_PMON_CTR9
XEON7500 0xE34 R1_PMON_EVNT_SEL10
XEON7500 0xE35 R1_PMON_CTR10
XEON7500 0xE36 R1_PMON_EVNT_SEL11
XEON7500 0xE37 R1_PMON_CTR11
XEON7500 0xE38 R1_PMON_EVNT_SEL12
XEON7500 0xE39 R1_PMON_CTR12
XEON7500 0xE3A R1_PMON_EVNT_SEL13
XEON7500 0xE3B R1_PMON_CTR13
XEON7500 0xE3C R1_PMON_EVNT_SEL14
XEON7500 0xE3D R1_PMON_CTR14
XEON7500 0xE3E R1_PMON_EVNT_SEL15
XEON7500 0xE3F R1_PMON_CTR15
XEON7500 0xE45 B0_PMON_MATCH       # Uncore B-box 0 perfmon local box match MSR
XEON7500 0xE46 B0_PMON_MASK        # Uncore B-box 0 perfmon local box mask MSR
XEON7500 0xE49 S0_PMON_MATCH       # Uncore S-box 0 perfmon local box match MSR
XEON7500 0xE4A S0_PMON_MASK        # Uncore S-box 0 perfmon local box mask MSR
XEON7500 0xE4D B1_PMON_MATCH       # Uncore B-box 1 perfmon local box match MSR
XEON7500 0xE4E B1_PMON_MASK        # Uncore B-box 1 perfmon local box mask MSR
XEON7500 0xE54 M0_PMON_MM_CONFIG   # Uncore M-box 0 perfmon local box address match/mask config MSR
XEON7500 0xE55 M0_PMON_ADDR_MATCH  # Uncore M-box 0 perfmon local box address match MSR
XEON7500 0xE56 M0_PMON_ADDR_MASK   # Uncore M-box 0 perfmon local box address mask MSR
XEON7500 0xE59 S1_PMON_MATCH       # Uncore S-box 1 perfmon local box match MSR
XEON7500 0xE5A S1_PMON_MASK        # Uncore S-box 1 perfmon local box mask MSR
XEON7500 0xE5C M1_PMON_MM_CONFIG   # Uncore M-box 1 perfmon local box address match/mask config MSR
XEON7500 0xE5D M1_PMON_ADDR_MATCH  # Uncore M-box 1 perfmon local box address match MSR
XEON7500 0xE5E M1_PMON_ADDR_MASK   # Uncore M-box 1 perfmon local box address mask MSR

# Intel-SDM-Vol4 (Intel Xeon Processor E5 v3)
XEONE5V3 0xE00 C0_PMON_BOX_CTL       # Uncore C-Box 0 Perfmon for Box-Wide Control
XEONE5V3 0xE01 C0_PMON_EVNTSEL0      # Uncore C-Box 0 Perfmon Event Select for C-Box 0 Counter 0
XEONE5V3 0xE02 C0_PMON_EVNTSEL1      # Uncore C-Box 0 Perfmon Event Select for C-Box 0 Counter 1
XEONE5V3 0xE03 C0_PMON_EVNTSEL2      # Uncore C-Box 0 Perfmon Event Select for C-Box 0 Counter 2
XEONE5V3 0xE04 C0_PMON_EVNTSEL3      # Uncore C-Box 0 Perfmon Event Select for C-Box 0 Counter 3
XEONE5V3 0xE05 C0_PMON_BOX_FILTER0   # Uncore C-Box 0 Perfmon Box Wide Filter 0
XEONE5V3 0xE06 C0_PMON_BOX_FILTER1   # Uncore C-Box 0 Perfmon Box Wide Filter 1
XEONE5V3 0xE07 C0_PMON_BOX_STATUS    # Uncore C-Box 0 Perfmon Box Wide Status
XEONE5V3 0xE08 C0_PMON_CTR0          # Uncore C-Box 0 Perfmon Counter 0
XEONE5V3 0xE09 C0_PMON_CTR1          # Uncore C-Box 0 Perfmon Counter 1
XEONE5V3 0xE0A C0_PMON_CTR2          # Uncore C-Box 0 Perfmon Counter 2
XEONE5V3 0xE0B C0_PMON_CTR3          # Uncore C-Box 0 Perfmon Counter 3
XEONE5V3 0xE10 C1_PMON_BOX_CTL       # Uncore C-Box 1 Perfmon for Box-Wide Control
XEONE5V3 0xE11 C1_PMON_EVNTSEL0      # Uncore C-Box 1 Perfmon Event Select for C-Box 1 Counter 0
XEONE5V3 0xE12 C1_PMON_EVNTSEL1      # Uncore C-Box 1 Perfmon Event Select for C-Box 1 Counter 1
XEONE5V3 0xE13 C1_PMON_EVNTSEL2      # Uncore C-Box 1 Perfmon Event Select for C-Box 1 Counter 2
XEONE5V3 0xE14 C1_PMON_EVNTSEL3      # Uncore C-Box 1 Perfmon Event Select for C-Box 1 Counter 3
XEONE5V3 0xE15 C1_PMON_BOX_FILTER0   # Uncore C-Box 1 Perfmon Box Wide Filter 0
XEONE5V3 0xE16 C1_PMON_BOX_FILTER1   # Uncore C-Box 1 Perfmon Box Wide Filter1
XEONE5V3 0xE17 C1_PMON_BOX_STATUS    # Uncore C-Box 1 Perfmon Box Wide Status
XEONE5V3 0xE18 C1_PMON_CTR0          # Uncore C-Box 1 Perfmon Counter 0
XEONE5V3 0xE19 C1_PMON_CTR1          # Uncore C-Box 1 Perfmon Counter 1
XEONE5V3 0xE1A C1_PMON_CTR2          # Uncore C-Box 1 Perfmon Counter 2
XEONE5V3 0xE1B C1_PMON_CTR3          # Uncore C-Box 1 Perfmon Counter 3
XEONE5V3 0xE20 C2_PMON_BOX_CTL       # Uncore C-Box 2 Perfmon for Box-Wide Control
XEONE5V3 0xE21 C2_PMON_EVNTSEL0      # Uncore C-Box 2 Perfmon Event Select for C-Box 2 Counter 0
XEONE5V3 0xE22 C2_PMON_EVNTSEL1      # Uncore C-Box 2 Perfmon Event Select for C-Box 2 Counter 1
XEONE5V3 0xE23 C2_PMON_EVNTSEL2      # Uncore C-Box 2 Perfmon Event Select for C-Box 2 Counter 2
XEONE5V3 0xE24 C2_PMON_EVNTSEL3      # Uncore C-Box 2 Perfmon Event select for C-Box 2 Counter 3
XEONE5V3 0xE25 C2_PMON_BOX_FILTER0   # Uncore C-Box 2 Perfmon Box Wide Filter 0
XEONE5V3 0xE26 C2_PMON_BOX_FILTER1   # Uncore C-Box 2 Perfmon Box Wide Filter1
XEONE5V3 0xE27 C2_PMON_BOX_STATUS    # Uncore C-Box 2 Perfmon Box Wide Status
XEONE5V3 0xE28 C2_PMON_CTR0          # Uncore C-Box 2 Perfmon Counter 0
XEONE5V3 0xE29 C2_PMON_CTR1          # Uncore C-Box 2 Perfmon Counter 1
XEONE5V3 0xE2A C2_PMON_CTR2          # Uncore C-Box 2 Perfmon Counter 2
XEONE5V3 0xE2B C2_PMON_CTR3          # Uncore C-Box 2 Perfmon Counter 3
XEONE5V3 0xE30 C3_PMON_BOX_CTL       # Uncore C-Box 3 Perfmon for Box-Wide Control
XEONE5V3 0xE31 C3_PMON_EVNTSEL0      # Uncore C-Box 3 Perfmon Event Select for C-Box 3 Counter 0
XEONE5V3 0xE32 C3_PMON_EVNTSEL1      # Uncore C-Box 3 Perfmon Event Select for C-Box 3 Counter 1
XEONE5V3 0xE33 C3_PMON_EVNTSEL2      # Uncore C-Box 3 Perfmon Event Select for C-Box 3 Counter 2
XEONE5V3 0xE34 C3_PMON_EVNTSEL3      # Uncore C-Box 3 Perfmon Event Select for C-Box 3 Counter 3
XEONE5V3 0xE35 C3_PMON_BOX_FILTER0   # Uncore C-Box 3 Perfmon Box Wide Filter 0
XEONE5V3 0xE36 C3_PMON_BOX_FILTER1   # Uncore C-Box 3 Perfmon Box Wide Filter1
XEONE5V3 0xE37 C3_PMON_BOX_STATUS    # Uncore C-Box 3 Perfmon Box Wide Status
XEONE5V3 0xE38 C3_PMON_CTR0          # Uncore C-Box 3 Perfmon Counter 0
XEONE5V3 0xE39 C3_PMON_CTR1          # Uncore C-Box 3 Perfmon Counter 1
XEONE5V3 0xE3A C3_PMON_CTR2          # Uncore C-Box 3 Perfmon Counter 2
XEONE5V3 0xE3B C3_PMON_CTR3          # Uncore C-Box 3 Perfmon Counter 3
XEONE5V3 0xE40 C4_PMON_BOX_CTL       # Uncore C-Box 4 Perfmon for Box-Wide Control
XEONE5V3 0xE41 C4_PMON_EVNTSEL0      # Uncore C-Box 4 Perfmon Event Select for C-Box 4 Counter 0
XEONE5V3 0xE42 C4_PMON_EVNTSEL1      # Uncore C-Box 4 Perfmon Event Select for C-Box 4 Counter 1
XEONE5V3 0xE43 C4_PMON_EVNTSEL2      # Uncore C-Box 4 Perfmon Event Select for C-Box 4 Counter 2
XEONE5V3 0xE44 C4_PMON_EVNTSEL3      # Uncore C-Box 4 Perfmon Event Select for C-Box 4 Counter 3
XEONE5V3 0xE45 C4_PMON_BOX_FILTER0   # Uncore C-Box 4 Perfmon Box Wide Filter 0
XEONE5V3 0xE46 C4_PMON_BOX_FILTER1   # Uncore C-Box 4 Perfmon Box Wide Filter1
XEONE5V3 0xE47 C4_PMON_BOX_STATUS    # Uncore C-Box 4 Perfmon Box Wide Status
XEONE5V3 0xE48 C4_PMON_CTR0          # Uncore C-Box 4 Perfmon Counter 0
XEONE5V3 0xE49 C4_PMON_CTR1          # Uncore C-Box 4 Perfmon Counter 1
XEONE5V3 0xE4A C4_PMON_CTR2          # Uncore C-Box 4 Perfmon Counter 2
XEONE5V3 0xE4B C4_PMON_CTR3          # Uncore C-Box 4 Perfmon Counter 3
XEONE5V3 0xE50 C5_PMON_BOX_CTL       # Uncore C-Box 5 Perfmon for Box-Wide Control
XEONE5V3 0xE51 C5_PMON_EVNTSEL0      # Uncore C-Box 5 Perfmon Event Select for C-Box 5 Counter 0
XEONE5V3 0xE52 C5_PMON_EVNTSEL1      # Uncore C-Box 5 Perfmon Event Select for C-Box 5 Counter 1
XEONE5V3 0xE53 C5_PMON_EVNTSEL2      # Uncore C-Box 5 Perfmon Event Select for C-Box 5 Counter 2
XEONE5V3 0xE54 C5_PMON_EVNTSEL3      # Uncore C-Box 5 Perfmon Event Select for C-Box 5 Counter 3
XEONE5V3 0xE55 C5_PMON_BOX_FILTER0   # Uncore C-Box 5 Perfmon Box Wide Filter 0
XEONE5V3 0xE56 C5_PMON_BOX_FILTER1   # Uncore C-Box 5 Perfmon Box Wide Filter 1
XEONE5V3 0xE57 C5_PMON_BOX_STATUS    # Uncore C-Box 5 Perfmon Box Wide Status
XEONE5V3 0xE58 C5_PMON_CTR0          # Uncore C-Box 5 Perfmon Counter 0
XEONE5V3 0xE59 C5_PMON_CTR1          # Uncore C-Box 5 Perfmon Counter 1
XEONE5V3 0xE5A C5_PMON_CTR2          # Uncore C-Box 5 Perfmon Counter 2
XEONE5V3 0xE5B C5_PMON_CTR3          # Uncore C-Box 5 Perfmon Counter 3
XEONE5V3 0xE60 C6_PMON_BOX_CTL       # Uncore C-Box 6 Perfmon for Box-Wide Control
XEONE5V3 0xE61 C6_PMON_EVNTSEL0      # Uncore C-Box 6 Perfmon Event Select for C-Box 6 Counter 0
XEONE5V3 0xE62 C6_PMON_EVNTSEL1      # Uncore C-Box 6 Perfmon Event Select for C-Box 6 Counter 1
XEONE5V3 0xE63 C6_PMON_EVNTSEL2      # Uncore C-Box 6 Perfmon Event Select for C-Box 6 Counter 2
XEONE5V3 0xE64 C6_PMON_EVNTSEL3      # Uncore C-Box 6 Perfmon Event Select for C-Box 6 Counter 3
XEONE5V3 0xE65 C6_PMON_BOX_FILTER0   # Uncore C-Box 6 Perfmon Box Wide Filter 0
XEONE5V3 0xE66 C6_PMON_BOX_FILTER1   # Uncore C-Box 6 Perfmon Box Wide Filter 1
XEONE5V3 0xE67 C6_PMON_BOX_STATUS    # Uncore C-Box 6 Perfmon Box Wide Status
XEONE5V3 0xE68 C6_PMON_CTR0          # Uncore C-Box 6 Perfmon Counter 0
XEONE5V3 0xE69 C6_PMON_CTR1          # Uncore C-Box 6 Perfmon Counter 1
XEONE5V3 0xE6A C6_PMON_CTR2          # Uncore C-Box 6 Perfmon Counter 2
XEONE5V3 0xE6B C6_PMON_CTR3          # Uncore C-Box 6 Perfmon Counter 3
XEONE5V3 0xE70 C7_PMON_BOX_CTL       # Uncore C-Box 7 Perfmon for Box-Wide Control
XEONE5V3 0xE71 C7_PMON_EVNTSEL0      # Uncore C-Box 7 Perfmon Event Select for C-Box 7 Counter 0
XEONE5V3 0xE72 C7_PMON_EVNTSEL1      # Uncore C-Box 7 Perfmon Event Select for C-Box 7 Counter 1
XEONE5V3 0xE73 C7_PMON_EVNTSEL2      # Uncore C-Box 7 Perfmon Event Select for C-Box 7 Counter 2
XEONE5V3 0xE74 C7_PMON_EVNTSEL3      # Uncore C-Box 7 Perfmon Event Select for C-Box 7 Counter 3
XEONE5V3 0xE75 C7_PMON_BOX_FILTER0   # Uncore C-Box 7 Perfmon Box Wide Filter 0
XEONE5V3 0xE76 C7_PMON_BOX_FILTER1   # Uncore C-Box 7 Perfmon Box Wide Filter 1
XEONE5V3 0xE77 C7_PMON_BOX_STATUS    # Uncore C-Box 7 Perfmon Box Wide Status
XEONE5V3 0xE78 C7_PMON_CTR0          # Uncore C-Box 7 Perfmon Counter 0
XEONE5V3 0xE79 C7_PMON_CTR1          # Uncore C-Box 7 Perfmon Counter 1
XEONE5V3 0xE7A C7_PMON_CTR2          # Uncore C-Box 7 Perfmon Counter 2
XEONE5V3 0xE7B C7_PMON_CTR3          # Uncore C-Box 7 Perfmon Counter 3
XEONE5V3 0xE80 C8_PMON_BOX_CTL       # Uncore C-Box 8 Perfmon Local Box Wide Control
XEONE5V3 0xE81 C8_PMON_EVNTSEL0      # Uncore C-Box 8 Perfmon Event Select for C-Box 8 Counter 0
XEONE5V3 0xE82 C8_PMON_EVNTSEL1      # Uncore C-Box 8 Perfmon Event Select for C-Box 8 Counter 1
XEONE5V3 0xE83 C8_PMON_EVNTSEL2      # Uncore C-Box 8 Perfmon Event Select for C-Box 8 Counter 2
XEONE5V3 0xE84 C8_PMON_EVNTSEL3      # Uncore C-Box 8 Perfmon Event Select for C-Box 8 Counter 3
XEONE5V3 0xE85 C8_PMON_BOX_FILTER0   # Uncore C-Box 8 Perfmon Box Wide Filter 0
XEONE5V3 0xE86 C8_PMON_BOX_FILTER1   # Uncore C-Box 8 Perfmon Box Wide Filter 1
XEONE5V3 0xE87 C8_PMON_BOX_STATUS    # Uncore C-Box 8 Perfmon Box Wide Status
XEONE5V3 0xE88 C8_PMON_CTR0          # Uncore C-Box 8 Perfmon Counter 0
XEONE5V3 0xE89 C8_PMON_CTR1          # Uncore C-Box 8 Perfmon Counter 1
XEONE5V3 0xE8A C8_PMON_CTR2          # Uncore C-Box 8 Perfmon Counter 2
XEONE5V3 0xE8B C8_PMON_CTR3          # Uncore C-Box 8 Perfmon Counter 3
XEONE5V3 0xE90 C9_PMON_BOX_CTL       # Uncore C-Box 9 Perfmon Local Box Wide Control
XEONE5V3 0xE91 C9_PMON_EVNTSEL0      # Uncore C-Box 9 Perfmon Event Select for C-Box 9 Counter 0
XEONE5V3 0xE92 C9_PMON_EVNTSEL1      # Uncore C-Box 9 Perfmon Event Select for C-Box 9 Counter 1
XEONE5V3 0xE93 C9_PMON_EVNTSEL2      # Uncore C-Box 9 Perfmon Event Select for C-Box 9 Counter 2
XEONE5V3 0xE94 C9_PMON_EVNTSEL3      # Uncore C-Box 9 Perfmon Event Select for C-Box 9 Counter 3
XEONE5V3 0xE95 C9_PMON_BOX_FILTER0   # Uncore C-Box 9 Perfmon Box Wide Filter 0
XEONE5V3 0xE96 C9_PMON_BOX_FILTER1   # Uncore C-Box 9 Perfmon Box Wide Filter 1
XEONE5V3 0xE97 C9_PMON_BOX_STATUS    # Uncore C-Box 9 Perfmon Box Wide Status
XEONE5V3 0xE98 C9_PMON_CTR0          # Uncore C-Box 9 Perfmon Counter 0
XEONE5V3 0xE99 C9_PMON_CTR1          # Uncore C-Box 9 Perfmon Counter 1
XEONE5V3 0xE9A C9_PMON_CTR2          # Uncore C-Box 9 Perfmon Counter 2
XEONE5V3 0xE9B C9_PMON_CTR3          # Uncore C-Box 9 Perfmon Counter 3
XEONE5V3 0xEA0 C10_PMON_BOX_CTL      # Uncore C-Box 10 Perfmon Local Box Wide Control
XEONE5V3 0xEA1 C10_PMON_EVNTSEL0     # Uncore C-Box 10 Perfmon Event Select for C-Box 10 Counter 0
XEONE5V3 0xEA2 C10_PMON_EVNTSEL1     # Uncore C-Box 10 Perfmon Event Select for C-Box 10 Counter 1
XEONE5V3 0xEA3 C10_PMON_EVNTSEL2     # Uncore C-Box 10 Perfmon Event Select for C-Box 10 Counter 2
XEONE5V3 0xEA4 C10_PMON_EVNTSEL3     # Uncore C-Box 10 Perfmon Event Select for C-Box 10 Counter 3
XEONE5V3 0xEA5 C10_PMON_BOX_FILTER0  # Uncore C-Box 10 Perfmon Box Wide Filter 0
XEONE5V3 0xEA6 C10_PMON_BOX_FILTER1  # Uncore C-Box 10 Perfmon Box Wide Filter 1
XEONE5V3 0xEA7 C10_PMON_BOX_STATUS   # Uncore C-Box 10 Perfmon Box Wide Status
XEONE5V3 0xEA8 C10_PMON_CTR0         # Uncore C-Box 10 Perfmon Counter 0
XEONE5V3 0xEA9 C10_PMON_CTR1         # Uncore C-Box 10 perfmon Counter 1
XEONE5V3 0xEAA C10_PMON_CTR2         # Uncore C-Box 10 Perfmon Counter 2
XEONE5V3 0xEAB C10_PMON_CTR3         # Uncore C-Box 10 Perfmon Counter 3
XEONE5V3 0xEB0 C11_PMON_BOX_CTL      # Uncore C-Box 11 Perfmon Local Box Wide Control
XEONE5V3 0xEB1 C11_PMON_EVNTSEL0     # Uncore C-Box 11 Perfmon Event Select for C-Box 11 Counter 0
XEONE5V3 0xEB2 C11_PMON_EVNTSEL1     # Uncore C-Box 11 Perfmon Event Select for C-Box 11 Counter 1
XEONE5V3 0xEB3 C11_PMON_EVNTSEL2     # Uncore C-Box 11 Perfmon Event Select for C-Box 11 Counter 2
XEONE5V3 0xEB4 C11_PMON_EVNTSEL3     # Uncore C-box 11 Perfmon Event Select for C-Box 11 Counter 3
XEONE5V3 0xEB5 C11_PMON_BOX_FILTER0  # Uncore C-Box 11 Perfmon Box Wide Filter 0
XEONE5V3 0xEB6 C11_PMON_BOX_FILTER1  # Uncore C-Box 11 Perfmon Box Wide Filter 1
XEONE5V3 0xEB7 C11_PMON_BOX_STATUS   # Uncore C-Box 11 Perfmon Box Wide Status
XEONE5V3 0xEB8 C11_PMON_CTR0         # Uncore C-Box 11 Perfmon Counter 0
XEONE5V3 0xEB9 C11_PMON_CTR1         # Uncore C-Box 11 Perfmon Counter 1
XEONE5V3 0xEBA C11_PMON_CTR2         # Uncore C-Box 11 Perfmon Counter 2
XEONE5V3 0xEBB C11_PMON_CTR3         # Uncore C-Box 11 Perfmon Counter 3
XEONE5V3 0xEC0 C12_PMON_BOX_CTL      # Uncore C-Box 12 Perfmon Local Box Wide Control
XEONE5V3 0xEC1 C12_PMON_EVNTSEL0     # Uncore C-Box 12 Perfmon Event Select for C-Box 12 Counter 0
XEONE5V3 0xEC2 C12_PMON_EVNTSEL1     # Uncore C-Box 12 Perfmon Event Select for C-Box 12 Counter 1
XEONE5V3 0xEC3 C12_PMON_EVNTSEL2     # Uncore C-Box 12 Perfmon Event Select for C-Box 12 Counter 2
XEONE5V3 0xEC4 C12_PMON_EVNTSEL3     # Uncore C-Box 12 Perfmon Event Select for C-Box 12 Counter 3
XEONE5V3 0xEC5 C12_PMON_BOX_FILTER0  # Uncore C-Box 12 Perfmon Box Wide Filter 0
XEONE5V3 0xEC6 C12_PMON_BOX_FILTER1  # Uncore C-Box 12 Perfmon Box Wide Filter 1
XEONE5V3 0xEC7 C12_PMON_BOX_STATUS   # Uncore C-Box 12 Perfmon Box Wide Status
XEONE5V3 0xEC8 C12_PMON_CTR0         # Uncore C-Box 12 Perfmon Counter 0
XEONE5V3 0xEC9 C12_PMON_CTR1         # Uncore C-Box 12 Perfmon Counter 1
XEONE5V3 0xECA C12_PMON_CTR2         # Uncore C-Box 12 Perfmon Counter 2
XEONE5V3 0xECB C12_PMON_CTR3         # Uncore C-Box 12 Perfmon Counter 3
XEONE5V3 0xED0 C13_PMON_BOX_CTL      # Uncore C-Box 13 Perfmon local box wide control
XEONE5V3 0xED1 C13_PMON_EVNTSEL0     # Uncore C-Box 13 Perfmon Event Select for C-Box 13 Counter 0
XEONE5V3 0xED2 C13_PMON_EVNTSEL1     # Uncore C-Box 13 Perfmon Event Select for C-Box 13 Counter 1
XEONE5V3 0xED3 C13_PMON_EVNTSEL2     # Uncore C-Box 13 Perfmon Event Select for C-Box 13 Counter 2
XEONE5V3 0xED4 C13_PMON_EVNTSEL3     # Uncore C-Box 13 Perfmon Event Select for C-Box 13 Counter 3
XEONE5V3 0xED5 C13_PMON_BOX_FILTER0  # Uncore C-Box 13 Perfmon Box Wide Filter 0
XEONE5V3 0xED6 C13_PMON_BOX_FILTER1  # Uncore C-Box 13 Perfmon Box Wide Filter 1
XEONE5V3 0xED7 C13_PMON_BOX_STATUS   # Uncore C-Box 13 Perfmon Box Wide Status
XEONE5V3 0xED8 C13_PMON_CTR0         # Uncore C-Box 13 Perfmon Counter 0
XEONE5V3 0xED9 C13_PMON_CTR1         # Uncore C-Box 13 Perfmon Counter 1
XEONE5V3 0xEDA C13_PMON_CTR2         # Uncore C-Box 13 Perfmon Counter 2
XEONE5V3 0xEDB C13_PMON_CTR3         # Uncore C-Box 13 Perfmon Counter 3
XEONE5V3 0xEE0 C14_PMON_BOX_CTL      # Uncore C-Box 14 Perfmon Local Box Wide Control
XEONE5V3 0xEE1 C14_PMON_EVNTSEL0     # Uncore C-Box 14 Perfmon Event Select for C-Box 14 Counter 0
XEONE5V3 0xEE2 C14_PMON_EVNTSEL1     # Uncore C-Box 14 Perfmon Event Select for C-Box 14 Counter 1
XEONE5V3 0xEE3 C14_PMON_EVNTSEL2     # Uncore C-Box 14 Perfmon Event Select for C-Box 14 Counter 2
XEONE5V3 0xEE4 C14_PMON_EVNTSEL3     # Uncore C-Box 14 Perfmon Event Select for C-Box 14 Counter 3
XEONE5V3 0xEE5 C14_PMON_BOX_FILTER   # Uncore C-Box 14 Perfmon Box Wide Filter 0
XEONE5V3 0xEE6 C14_PMON_BOX_FILTER1  # Uncore C-Box 14 Perfmon Box Wide Filter 1
XEONE5V3 0xEE7 C14_PMON_BOX_STATUS   # Uncore C-Box 14 Perfmon Box Wide Status
XEONE5V3 0xEE8 C14_PMON_CTR0         # Uncore C-Box 14 Perfmon Counter 0
XEONE5V3 0xEE9 C14_PMON_CTR1         # Uncore C-Box 14 Perfmon Counter 1
XEONE5V3 0xEEA C14_PMON_CTR2         # Uncore C-Box 14 Perfmon Counter 2
XEONE5V3 0xEEB C14_PMON_CTR3         # Uncore C-Box 14 Perfmon Counter 3
XEONE5V3 0xEF0 C15_PMON_BOX_CTL      # Uncore C-Box 15 Perfmon Local Box Wide Control
XEONE5V3 0xEF1 C15_PMON_EVNTSEL0     # Uncore C-Box 15 Perfmon Event Select for C-Box 15 Counter 0
XEONE5V3 0xEF2 C15_PMON_EVNTSEL1     # Uncore C-Box 15 Perfmon Event Select for C-Box 15 Counter 1
XEONE5V3 0xEF3 C15_PMON_EVNTSEL2     # Uncore C-Box 15 Perfmon Event Select for C-Box 15 Counter 2
XEONE5V3 0xEF4 C15_PMON_EVNTSEL3     # Uncore C-Box 15 Perfmon Event Select for C-Box 15 Counter 3
XEONE5V3 0xEF5 C15_PMON_BOX_FILTER0  # Uncore C-Box 15 Perfmon Box Wide Filter 0
XEONE5V3 0xEF6 C15_PMON_BOX_FILTER1  # Uncore C-Box 15 Perfmon Box Wide Filter 1
XEONE5V3 0xEF7 C15_PMON_BOX_STATUS   # Uncore C-Box 15 Perfmon Box Wide Status
XEONE5V3 0xEF8 C15_PMON_CTR0         # Uncore C-Box 15 Perfmon Counter 0
XEONE5V3 0xEF9 C15_PMON_CTR1         # Uncore C-Box 15 Perfmon Counter 1
XEONE5V3 0xEFA C15_PMON_CTR2         # Uncore C-Box 15 Perfmon Counter 2
XEONE5V3 0xEFB C15_PMON_CTR3         # Uncore C-Box 15 Perfmon Counter 3
XEONE5V3 0xF00 C16_PMON_BOX_CTL      # Uncore C-Box 16 Perfmon for Box-Wide Control
XEONE5V3 0xF01 C16_PMON_EVNTSEL0     # Uncore C-Box 16 Perfmon Event Select for C-Box 16 Counter 0
XEONE5V3 0xF02 C16_PMON_EVNTSEL1     # Uncore C-Box 16 Perfmon Event Select for C-Box 16 Counter 1
XEONE5V3 0xF03 C16_PMON_EVNTSEL2     # Uncore C-Box 16 Perfmon Event Select for C-Box 16 Counter 2
XEONE5V3 0xF04 C16_PMON_EVNTSEL3     # Uncore C-Box 16 Perfmon Event Select for C-Box 16 Counter 3
XEONE5V3 0xF05 C16_PMON_BOX_FILTER0  # Uncore C-Box 16 Perfmon Box Wide Filter 0
XEONE5V3 0xF06 C16_PMON_BOX_FILTER1  # Uncore C-Box 16 Perfmon Box Wide Filter 1
XEONE5V3 0xF07 C16_PMON_BOX_STATUS   # Uncore C-Box 16 Perfmon Box Wide Status
XEONE5V3 0xF08 C16_PMON_CTR0         # Uncore C-Box 16 Perfmon Counter 0
XEONE5V3 0xF09 C16_PMON_CTR1         # Uncore C-Box 16 Perfmon Counter 1
XEONE5V3 0xF0A C16_PMON_CTR2         # Uncore C-Box 16 Perfmon Counter 2
XEONE5V3 0xF0B C16_PMON_CTR3         # Uncore C-Box 16 Perfmon Counter 3
XEONE5V3 0xF10 C17_PMON_BOX_CTL      # Uncore C-Box 17 Perfmon for Box-Wide Control
XEONE5V3 0xF11 C17_PMON_EVNTSEL0     # Uncore C-Box 17 Perfmon Event Select for C-Box 17 Counter 0
XEONE5V3 0xF12 C17_PMON_EVNTSEL1     # Uncore C-Box 17 Perfmon Event Select for C-Box 17 Counter 1
XEONE5V3 0xF13 C17_PMON_EVNTSEL2     # Uncore C-Box 17 Perfmon Event Select for C-Box 17 Counter 2
XEONE5V3 0xF14 C17_PMON_EVNTSEL3     # Uncore C-Box 17 Perfmon Event Select for C-Box 17 Counter 3
XEONE5V3 0xF15 C17_PMON_BOX_FILTER0  # Uncore C-Box 17 Perfmon Box Wide Filter 0
XEONE5V3 0xF16 C17_PMON_BOX_FILTER1  # Uncore C-Box 17 Perfmon Box Wide Filter1
XEONE5V3 0xF17 C17_PMON_BOX_STATUS   # Uncore C-Box 17 Perfmon Box Wide Status
XEONE5V3 0xF18 C17_PMON_CTR0         # Uncore C-Box 17 Perfmon Counter 0
XEONE5V3 0xF19 C17_PMON_CTR1         # Uncore C-Box 17 Perfmon Counter 1
XEONE5V3 0xF1A C17_PMON_CTR2         # Uncore C-Box 17 Perfmon Counter 2
XEONE5V3 0xF1B C17_PMON_CTR3         # Uncore C-Box 17 Perfmon Counter 3

# Intel-SDM-Vol4 (Intel Xeon Processor E7)
XEONE7 0xF40 C8_PMON_BOX_CTRL     # Uncore C-box 8 perfmon local box control MSR
XEONE7 0xF41 C8_PMON_BOX_STATUS   # Uncore C-box 8 perfmon local box status MSR
XEONE7 0xF42 C8_PMON_BOX_OVF_CTRL # Uncore C-box 8 perfmon local box overflow control MSR
XEONE7 0xF50 C8_PMON_EVNT_SEL0    # Uncore C-box 8 perfmon event select MSR
XEONE7 0xF51 C8_PMON_CTR0         # Uncore C-box 8 perfmon counter MSR
XEONE7 0xF52 C8_PMON_EVNT_SEL1    # Uncore C-box 8 perfmon event select MSR
XEONE7 0xF53 C8_PMON_CTR1         # Uncore C-box 8 perfmon counter MSR
XEONE7 0xF54 C8_PMON_EVNT_SEL2    # Uncore C-box 8 perfmon event select MSR
XEONE7 0xF55 C8_PMON_CTR2         # Uncore C-box 8 perfmon counter MSR
XEONE7 0xF56 C8_PMON_EVNT_SEL3    # Uncore C-box 8 perfmon event select MSR
XEONE7 0xF57 C8_PMON_CTR3         # Uncore C-box 8 perfmon counter MSR
XEONE7 0xF58 C8_PMON_EVNT_SEL4    # Uncore C-box 8 perfmon event select MSR
XEONE7 0xF59 C8_PMON_CTR4         # Uncore C-box 8 perfmon counter MSR
XEONE7 0xF5A C8_PMON_EVNT_SEL5    # Uncore C-box 8 perfmon event select MSR
XEONE7 0xF5B C8_PMON_CTR5         # Uncore C-box 8 perfmon counter MSR
XEONE7 0xFC0 C9_PMON_BOX_CTRL     # Uncore C-box 9 perfmon local box control MSR
XEONE7 0xFC1 C9_PMON_BOX_STATUS   # Uncore C-box 9 perfmon local box status MSR
XEONE7 0xFC2 C9_PMON_BOX_OVF_CTRL # Uncore C-box 9 perfmon local box overflow control MSR
XEONE7 0xFD0 C9_PMON_EVNT_SEL0    # Uncore C-box 9 perfmon event select MSR
XEONE7 0xFD1 C9_PMON_CTR0         # Uncore C-box 9 perfmon counter MSR
XEONE7 0xFD2 C9_PMON_EVNT_SEL1    # Uncore C-box 9 perfmon event select MSR
XEONE7 0xFD3 C9_PMON_CTR1         # Uncore C-box 9 perfmon counter MSR
XEONE7 0xFD4 C9_PMON_EVNT_SEL2    # Uncore C-box 9 perfmon event select MSR
XEONE7 0xFD5 C9_PMON_CTR2         # Uncore C-box 9 perfmon counter MSR
XEONE7 0xFD6 C9_PMON_EVNT_SEL3    # Uncore C-box 9 perfmon event select MSR
XEONE7 0xFD7 C9_PMON_CTR3         # Uncore C-box 9 perfmon counter MSR
XEONE7 0xFD8 C9_PMON_EVNT_SEL4    # Uncore C-box 9 perfmon event select MSR
XEONE7 0xFD9 C9_PMON_CTR4         # Uncore C-box 9 perfmon counter MSR
XEONE7 0xFDA C9_PMON_EVNT_SEL5    # Uncore C-box 9 perfmon event select MSR
XEONE7 0xFDB C9_PMON_CTR5         # Uncore C-box 9 perfmon counter MSR

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0xE1F MEMORY_PRIORITY_ENUM # CMI priority indication based on thread
XEONSCAL4 0xE20 UNCORE_DEMAND_REQ_PRIORITY_0_0 # This MSR indicates CMI ReqPriority for Demand Reads with various CLOSes
XEONSCAL4 0xE21 UNCORE_DEMAND_REQ_PRIORITY_1_1
XEONSCAL4 0xE22 UNCORE_DEMAND_REQ_PRIORITY_2_2
XEONSCAL4 0xE23 UNCORE_DEMAND_REQ_PRIORITY_3_3
XEONSCAL4 0xE24 UNCORE_DEMAND_REQ_PRIORITY_4_4
XEONSCAL4 0xE25 UNCORE_DEMAND_REQ_PRIORITY_5_5
XEONSCAL4 0xE26 UNCORE_DEMAND_REQ_PRIORITY_6_6
XEONSCAL4 0xE27 UNCORE_DEMAND_REQ_PRIORITY_7_7
XEONSCAL4 0xE28 UNCORE_PREFETCH_REQ_PRIORITY_0_0 # This MSR indicates CMI ReqPriority for Prefetch Reads with various CLOSes
XEONSCAL4 0xE29 UNCORE_PREFETCH_REQ_PRIORITY_1_1
XEONSCAL4 0xE2A UNCORE_PREFETCH_REQ_PRIORITY_2_2
XEONSCAL4 0xE2B UNCORE_PREFETCH_REQ_PRIORITY_3_3
XEONSCAL4 0xE2C UNCORE_PREFETCH_REQ_PRIORITY_4_4
XEONSCAL4 0xE2D UNCORE_PREFETCH_REQ_PRIORITY_5_5
XEONSCAL4 0xE2E UNCORE_PREFETCH_REQ_PRIORITY_6_6
XEONSCAL4 0xE2F UNCORE_PREFETCH_REQ_PRIORITY_7_7
XEONSCAL4 0xF00 AMRR_BASE_0_0 # Address Match Range Register - Physical Base Control Register for Hidden Lake
XEONSCAL4 0xF01 AMRR_MASK_0_0 # Address Match Range Register - Physical Mask Control Register for Hidden Lake
XEONSCAL4 0xF02 AMRR_BASE_1_1
XEONSCAL4 0xF03 AMRR_MASK_1_1
XEONSCAL4 0xF04 AMRR_BASE_2_2
XEONSCAL4 0xF05 AMRR_MASK_2_2
XEONSCAL4 0xF06 AMRR_BASE_3_3
XEONSCAL4 0xF07 AMRR_MASK_3_3
XEONSCAL4 0xF08 AMRR_BASE_4_4
XEONSCAL4 0xF09 AMRR_MASK_4_4

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/ArchMsr.h
0x1000 MPX_LAX # MPX extension for determine MAWAU

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x1001 CORE_SPECIFIC_13_BIT_SPARE_0_0 # Spare core MSRs supported by the cregpla. Ucode (instead of the PLA) will signal #GP on access
XEONSCAL4 0x1002 CORE_SPECIFIC_13_BIT_SPARE_1_1
XEONSCAL4 0x1003 CORE_SPECIFIC_13_BIT_SPARE_2_2
XEONSCAL4 0x1004 THREAD_SPECIFIC_13_BIT_SPARE_0_0 # Spare Thread MSRs supported by the cregpla. Ucode (instead of the PLA) will signal #GP on access
XEONSCAL4 0x1005 THREAD_SPECIFIC_13_BIT_SPARE_1_1
XEONSCAL4 0x1006 THREAD_SPECIFIC_13_BIT_SPARE_2_2

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
# SPIRAL is Security Protocol with Independent Recovery Algorithm: https://www.intel.com/content/dam/www/central-libraries/us/en/documents/below-the-os-security-white-paper.pdf
XEONSCAL4 0x1130 SPIRAL_UCODE_SVN # This read-only MSR is going to return data from the CORE_SPIRAL_STATUS VCR (UCODE_SVN field). It's in the core CREGPLA as uncore CREGPLA is frozen
XEONSCAL4 0x1131 SPIRAL_CSME_CTRL        # This read/write MSR sets up (or reads) from the Host Secure Boot SPIRAL Buffer Control Register in the CSME (offset 0xFED58D00 ~ 0xFED58D07). It's in the core CREGPLA as uncore CREGPLA is frozen. #GP on read if SPIRAL is fuse-disabled or we aren't in ACM mode
XEONSCAL4 0x1132 SPIRAL_CSME_DATA_ACCESS # This read/write ACM-only MSR is going to either send data on a write or return data from a read to the CSME's Secure Boot SPIRAL Buffer write (o 0xFED58D60-0xFED58D67) or read (to 0xFED58D40-0xFED58D47). It's in the core CREGPLA as uncore CREGPLA is frozen. #GP on read if SPIRAL is fuse-disabled or we aren't in ACM mode
XEONSCAL4 0x1133 SPIRAL_CSME_ACCESS_CTRL # This read-only MSR is going to return data from a read to the CSME's Secure Boot SPIRAL Buffer read (to 0xFED58D40-0xFED58D47). It's in the core CREGPLA as uncore CREGPLA is frozen. #GP on read if SPIRAL is fuse-disabled or we aren't in ACM mode
XEONSCAL4 0x1134 SPIRAL_ACM_ACCESS_INDEX # This register will be used to save the current index that the ACM is going to access for the SPIRAL MSRs. It doesn't need to be C6 saved (C6NoSave candidate). After reset it can be considered a spare FSCP and can be re-used
XEONSCAL4 0x1135 SPIRAL_SHARED_SECRET_2  # Shared secret. Derived from CPU seed with 4 factors: uCode patch SVN p, ACM SVN n, CSE SVN m, and CSE public key PBK_m. SS is 32 bytes for non-PQC and 48 bytes for PQC
XEONSCAL4 0x1136 SPIRAL_SEED_ID          # Seed ID. Derived from CPU seed with a simple text string
XEONSCAL4 0x1137 SPIRAL_CA_SIGNATURE     # CA Signature. This signature is strictly a set of fuses that have been tied via a one-way function to the CPU seed fuses. This read-only MSR will be ACM-only and will strictly return sequential portions of the signature
XEONSCAL4 0x1138 SPIRAL_SEED_PASSWORD_2_1_1 # Seed Password. CPU's private credential for authenticating to CSE. SP is derived from CPU seed with 4 factors in 4 steps: Peer ID i (in this spec, it is using only one Peer with ID i=1 and that Peer is CSE), uCode patch SVN p, ACM SVN n, and CSE SVN m. SP_i_p_n_m refers to the SP used with this combination of the 4 factors. Four versions of this MSR series will be defined (i = 1 to 4). SP is 32 bytes for non-PQC and 48 bytes for PQC
XEONSCAL4 0x1139 SPIRAL_SEED_PASSWORD_2_2_2
XEONSCAL4 0x113A SPIRAL_SEED_PASSWORD_2_3_3
XEONSCAL4 0x113B SPIRAL_SEED_PASSWORD_2_4_4

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h?h=v6.1 VIA Cyrix defined MSRs
# https://www.etallen.com/msr.html
# https://wiki.osdev.org/User:Lionel/MSR_Draft
VIA 0x1107 FCR
VIA 0x1108 FCR2
VIA 0x1109 FCR3
VIA 0x110A LONGHAUL
VIA 0x110B RNG
VIA 0x1147 BCR2

# 0x1200-0x121F Intel-SDM-Vol4 Last Branch Record Entry X Info Register
0x1200 IA32_LBR_0_INFO
0x1201 IA32_LBR_1_INFO
0x1202 IA32_LBR_2_INFO
0x1203 IA32_LBR_3_INFO
0x1204 IA32_LBR_4_INFO
0x1205 IA32_LBR_5_INFO
0x1206 IA32_LBR_6_INFO
0x1207 IA32_LBR_7_INFO
0x1208 IA32_LBR_8_INFO
0x1209 IA32_LBR_9_INFO
0x120A IA32_LBR_10_INFO
0x120B IA32_LBR_11_INFO
0x120C IA32_LBR_12_INFO
0x120D IA32_LBR_13_INFO
0x120E IA32_LBR_14_INFO
0x120F IA32_LBR_15_INFO
0x1210 IA32_LBR_16_INFO
0x1211 IA32_LBR_17_INFO
0x1212 IA32_LBR_18_INFO
0x1213 IA32_LBR_19_INFO
0x1214 IA32_LBR_20_INFO
0x1215 IA32_LBR_21_INFO
0x1216 IA32_LBR_22_INFO
0x1217 IA32_LBR_23_INFO
0x1218 IA32_LBR_24_INFO
0x1219 IA32_LBR_25_INFO
0x121A IA32_LBR_26_INFO
0x121B IA32_LBR_27_INFO
0x121C IA32_LBR_28_INFO
0x121D IA32_LBR_29_INFO
0x121E IA32_LBR_30_INFO
0x121F IA32_LBR_31_INFO

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/kernel/cpu/zhaoxin.c?h=v6.1 Zhaoxin processors
ZHAOXIN 0x1257 FCR57

# Intel-SDM-Vol4 (12th and 13th Generation Intel Core Processors) Reload value for IA32_FIXED_CTRx
CORE12 0x1309 RELOAD_FIXED_CTR0
CORE12 0x130A RELOAD_FIXED_CTR1
CORE12 0x130B RELOAD_FIXED_CTR2

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=38aaf921e92dc5cf87e4a6c5a4b24dd99155cace "perf/x86: Add Meteor Lake support"
CORE14 0x1328 SNOOP_RSP_0   # Module Snoop Response Events on the e-core
CORE14 0x1329 SNOOP_RSP_1

# https://www.intel.com/content/dam/develop/external/us/en/documents-tps/intel-tdx-cpu-architectural-specification.pdf Intel Trust Domain CPU Architectural Extensions
0x1400 IA32_SEAMRR_PHYS_BASE   # Secure Arbitration Mode Range Register - Physical Base Control Register
0x1401 IA32_SEAMRR_PHYS_MASK   # Secure Arbitration Mode Range Register - Physical Mask Control Register

# From https://github.com/intel/seam-loader/blob/eadff76d36d214419c801f1cee1828ea437c91a5/p-seam-loader/src/common/x86_defs/msr_defs.h
# https://services.google.com/fh/files/misc/intel_tdx_-_full_report_041423.pdf
0x1402 IA32_SEAM_EXTEND # Secure Arbitration Mode Range Register - Extend

0x1406 IA32_MCU_CONTROL # Intel-SDM-Vol4 MCU Control

# Intel-SDM-Vol4 (12th and 13th Generation Intel Core Processors) Reload value for IA32_PMCx
CORE12 0x14C1 RELOAD_PMC0
CORE12 0x14C2 RELOAD_PMC1
CORE12 0x14C3 RELOAD_PMC2
CORE12 0x14C4 RELOAD_PMC3
CORE12 0x14C5 RELOAD_PMC4
CORE12 0x14C6 RELOAD_PMC5

0x14CE IA32_LBR_CTL   # Intel-SDM-Vol4 Last Branch Record Enabling and Configuration Register
0x14CF IA32_LBR_DEPTH # Intel-SDM-Vol4 Last Branch Record Maximum Stack Depth Register

# 0x1500-0x151F Intel-SDM-Vol4 Last Branch Record entry X source IP register
0x1500 IA32_LBR_0_FROM_IP
0x1501 IA32_LBR_1_FROM_IP
0x1502 IA32_LBR_2_FROM_IP
0x1503 IA32_LBR_3_FROM_IP
0x1504 IA32_LBR_4_FROM_IP
0x1505 IA32_LBR_5_FROM_IP
0x1506 IA32_LBR_6_FROM_IP
0x1507 IA32_LBR_7_FROM_IP
0x1508 IA32_LBR_8_FROM_IP
0x1509 IA32_LBR_9_FROM_IP
0x150A IA32_LBR_10_FROM_IP
0x150B IA32_LBR_11_FROM_IP
0x150C IA32_LBR_12_FROM_IP
0x150D IA32_LBR_13_FROM_IP
0x150E IA32_LBR_14_FROM_IP
0x150F IA32_LBR_15_FROM_IP
0x1510 IA32_LBR_16_FROM_IP
0x1511 IA32_LBR_17_FROM_IP
0x1512 IA32_LBR_18_FROM_IP
0x1513 IA32_LBR_19_FROM_IP
0x1514 IA32_LBR_20_FROM_IP
0x1515 IA32_LBR_21_FROM_IP
0x1516 IA32_LBR_22_FROM_IP
0x1517 IA32_LBR_23_FROM_IP
0x1518 IA32_LBR_24_FROM_IP
0x1519 IA32_LBR_25_FROM_IP
0x151A IA32_LBR_26_FROM_IP
0x151B IA32_LBR_27_FROM_IP
0x151C IA32_LBR_28_FROM_IP
0x151D IA32_LBR_29_FROM_IP
0x151E IA32_LBR_30_FROM_IP
0x151F IA32_LBR_31_FROM_IP

# 0x1600-0x161F Intel-SDM-Vol4 Last Branch Record entry X destination IP register
0x1600 IA32_LBR_0_TO_IP
0x1601 IA32_LBR_1_TO_IP
0x1602 IA32_LBR_2_TO_IP
0x1603 IA32_LBR_3_TO_IP
0x1604 IA32_LBR_4_TO_IP
0x1605 IA32_LBR_5_TO_IP
0x1606 IA32_LBR_6_TO_IP
0x1607 IA32_LBR_7_TO_IP
0x1608 IA32_LBR_8_TO_IP
0x1609 IA32_LBR_9_TO_IP
0x160A IA32_LBR_10_TO_IP
0x160B IA32_LBR_11_TO_IP
0x160C IA32_LBR_12_TO_IP
0x160D IA32_LBR_13_TO_IP
0x160E IA32_LBR_14_TO_IP
0x160F IA32_LBR_15_TO_IP
0x1610 IA32_LBR_16_TO_IP
0x1611 IA32_LBR_17_TO_IP
0x1612 IA32_LBR_18_TO_IP
0x1613 IA32_LBR_19_TO_IP
0x1614 IA32_LBR_20_TO_IP
0x1615 IA32_LBR_21_TO_IP
0x1616 IA32_LBR_22_TO_IP
0x1617 IA32_LBR_23_TO_IP
0x1618 IA32_LBR_24_TO_IP
0x1619 IA32_LBR_25_TO_IP
0x161A IA32_LBR_26_TO_IP
0x161B IA32_LBR_27_TO_IP
0x161C IA32_LBR_28_TO_IP
0x161D IA32_LBR_29_TO_IP
0x161E IA32_LBR_30_TO_IP
0x161F IA32_LBR_31_TO_IP

0x17D0 IA32_HW_FEEDBACK_PTR           # Intel-SDM-Vol4 Hardware Feedback Interface Pointer
0x17D1 IA32_HW_FEEDBACK_CONFIG        # Intel-SDM-Vol4 Hardware Feedback Interface Configuration
0x17D2 IA32_THREAD_FEEDBACK_CHAR      # Intel-SDM-Vol4 Thread Feedback Characteristics
0x17D4 IA32_HW_FEEDBACK_THREAD_CONFIG # Intel-SDM-Vol4 Hardware Feedback Thread Configuration
0x17DA IA32_HRESET_ENABLE             # Intel-SDM-Vol4 History Reset Enable

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/ArchMsr.h
XEONSCAL4 0x1830 GT_SF_QOS_MASK_0_0 # available ways vectors for class of service of LLC snoop filter. "seq has 16 instances in addresses range 0x1890 to 0x189F"
XEONSCAL4 0x1831 GT_SF_QOS_MASK_1_1
XEONSCAL4 0x1832 GT_SF_QOS_MASK_2_2
XEONSCAL4 0x1833 GT_SF_QOS_MASK_3_3
XEONSCAL4 0x1834 GT_SF_QOS_MASK_4_4
XEONSCAL4 0x1835 GT_SF_QOS_MASK_5_5
XEONSCAL4 0x1836 GT_SF_QOS_MASK_6_6
XEONSCAL4 0x1837 GT_SF_QOS_MASK_7_7
XEONSCAL4 0x1838 GT_SF_QOS_MASK_8_8
XEONSCAL4 0x1839 GT_SF_QOS_MASK_9_9
XEONSCAL4 0x183A GT_SF_QOS_MASK_10_10
XEONSCAL4 0x183B GT_SF_QOS_MASK_11_11
XEONSCAL4 0x183C GT_SF_QOS_MASK_12_12
XEONSCAL4 0x183D GT_SF_QOS_MASK_13_13
XEONSCAL4 0x183E GT_SF_QOS_MASK_14_14
XEONSCAL4 0x183F GT_SF_QOS_MASK_15_15

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/ArchMsr.h
XEONSCAL4 0x1850 WRC_SF_QOS_MASK_0_0 # available ways vectors for class of service of LLC snoop filter. "seq has 16 instances in addresses range 0x1890 to 0x189F"
XEONSCAL4 0x1851 WRC_SF_QOS_MASK_1_1
XEONSCAL4 0x1852 WRC_SF_QOS_MASK_2_2
XEONSCAL4 0x1853 WRC_SF_QOS_MASK_3_3
XEONSCAL4 0x1854 WRC_SF_QOS_MASK_4_4
XEONSCAL4 0x1855 WRC_SF_QOS_MASK_5_5
XEONSCAL4 0x1856 WRC_SF_QOS_MASK_6_6
XEONSCAL4 0x1857 WRC_SF_QOS_MASK_7_7
XEONSCAL4 0x1858 WRC_SF_QOS_MASK_8_8
XEONSCAL4 0x1859 WRC_SF_QOS_MASK_9_9
XEONSCAL4 0x185A WRC_SF_QOS_MASK_10_10
XEONSCAL4 0x185B WRC_SF_QOS_MASK_11_11
XEONSCAL4 0x185C WRC_SF_QOS_MASK_12_12
XEONSCAL4 0x185D WRC_SF_QOS_MASK_13_13
XEONSCAL4 0x185E WRC_SF_QOS_MASK_14_14
XEONSCAL4 0x185F WRC_SF_QOS_MASK_15_15

# https://github.com/coreboot/coreboot/blob/4.18/src/include/cpu/x86/msr.h
0x1891 IA32_CR_SF_QOS_MASK_1
0x1892 IA32_CR_SF_QOS_MASK_2

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/ArchMsr.h
XEONSCAL4 0x1890 SF_QOS_MASK_0_0 # available ways vectors for class of service of LLC snoop filter
XEONSCAL4 0x1891 SF_QOS_MASK_1_1
XEONSCAL4 0x1892 SF_QOS_MASK_2_2
XEONSCAL4 0x1893 SF_QOS_MASK_3_3
XEONSCAL4 0x1894 SF_QOS_MASK_4_4
XEONSCAL4 0x1895 SF_QOS_MASK_5_5
XEONSCAL4 0x1896 SF_QOS_MASK_6_6
XEONSCAL4 0x1897 SF_QOS_MASK_7_7
XEONSCAL4 0x1898 SF_QOS_MASK_8_8
XEONSCAL4 0x1899 SF_QOS_MASK_9_9
XEONSCAL4 0x189A SF_QOS_MASK_10_10
XEONSCAL4 0x189B SF_QOS_MASK_11_11
XEONSCAL4 0x189C SF_QOS_MASK_12_12
XEONSCAL4 0x189D SF_QOS_MASK_13_13
XEONSCAL4 0x189E SF_QOS_MASK_14_14
XEONSCAL4 0x189F SF_QOS_MASK_15_15

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/ArchMsr.h
XEONSCAL4 0x18B0 GT_COS_WAY_MASK_0_0 # available ways vectors for class of service of IA core. MSRs exposed to allow QoS for GT access to LLC QoS masks
XEONSCAL4 0x18B1 GT_COS_WAY_MASK_1_1
XEONSCAL4 0x18B2 GT_COS_WAY_MASK_2_2
XEONSCAL4 0x18B3 GT_COS_WAY_MASK_3_3
XEONSCAL4 0x18B4 GT_COS_WAY_MASK_4_4
XEONSCAL4 0x18B5 GT_COS_WAY_MASK_5_5
XEONSCAL4 0x18B6 GT_COS_WAY_MASK_6_6
XEONSCAL4 0x18B7 GT_COS_WAY_MASK_7_7
XEONSCAL4 0x18B8 GT_COS_WAY_MASK_8_8
XEONSCAL4 0x18B9 GT_COS_WAY_MASK_9_9
XEONSCAL4 0x18BA GT_COS_WAY_MASK_10_10
XEONSCAL4 0x18BB GT_COS_WAY_MASK_11_11
XEONSCAL4 0x18BC GT_COS_WAY_MASK_12_12
XEONSCAL4 0x18BD GT_COS_WAY_MASK_13_13
XEONSCAL4 0x18BE GT_COS_WAY_MASK_14_14
XEONSCAL4 0x18BF GT_COS_WAY_MASK_15_15

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/ArchMsr.h
XEONSCAL4 0x18D0 WRC_COS_WAY_MASK_0_0 # available ways vectors for class of service of IA core. MSRs exposed to allow QoS for WRC access to LLC QoS masks
XEONSCAL4 0x18D1 WRC_COS_WAY_MASK_1_1
XEONSCAL4 0x18D2 WRC_COS_WAY_MASK_2_2
XEONSCAL4 0x18D3 WRC_COS_WAY_MASK_3_3
XEONSCAL4 0x18D4 WRC_COS_WAY_MASK_4_4
XEONSCAL4 0x18D5 WRC_COS_WAY_MASK_5_5
XEONSCAL4 0x18D6 WRC_COS_WAY_MASK_6_6
XEONSCAL4 0x18D7 WRC_COS_WAY_MASK_7_7
XEONSCAL4 0x18D8 WRC_COS_WAY_MASK_8_8
XEONSCAL4 0x18D9 WRC_COS_WAY_MASK_9_9
XEONSCAL4 0x18DA WRC_COS_WAY_MASK_10_10
XEONSCAL4 0x18DB WRC_COS_WAY_MASK_11_11
XEONSCAL4 0x18DC WRC_COS_WAY_MASK_12_12
XEONSCAL4 0x18DD WRC_COS_WAY_MASK_13_13
XEONSCAL4 0x18DE WRC_COS_WAY_MASK_14_14
XEONSCAL4 0x18DF WRC_COS_WAY_MASK_15_15

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=149fd4712bcd492a031945f92e5ce19879f62311 "perf/x86/intel: Support Perfmon MSRs aliasing" define MSR for "architectural performance monitoring V6"
# https://cdrdv2-public.intel.com/819680/architecture-instruction-set-extensions-programming-reference.pdf
0x1900 IA32_PMC_V6_GP0_CTR      # General Counter 0
0x1901 IA32_PMC_V6_GP0_CFG_A    # General Counter 0 Event-Select
0x1902 IA32_PMC_V6_GP0_CFG_B    # General Counter 0 Reload Config
0x1903 IA32_PMC_V6_GP0_CFG_C    # General Counter 0 Event-Select Extended
0x1904 IA32_PMC_V6_GP1_CTR      # General Counter 1
0x1905 IA32_PMC_V6_GP1_CFG_A    # General Counter 1 Event-Select
0x1906 IA32_PMC_V6_GP1_CFG_B    # General Counter 1 Reload Config
0x1907 IA32_PMC_V6_GP1_CFG_C    # General Counter 1 Event-Select Extended
0x1980 IA32_PMC_V6_FX0_CTR      # Fixed Counter 0
0x1982 IA32_PMC_V6_FX0_CFG_B    # Fixed Counter 0 Reload Config
0x1983 IA32_PMC_V6_FX0_CFG_C    # Fixed Counter 0 Event-Select Extended
0x1984 IA32_PMC_V6_FX1_CTR      # Fixed Counter 1
0x1986 IA32_PMC_V6_FX1_CFG_B    # Fixed Counter 1 Reload Config
0x1987 IA32_PMC_V6_FX1_CFG_C    # Fixed Counter 1 Event-Select Extended

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h?h=v6.1 Geode defined MSRs
GEODE 0x1900 BUSCONT_CONF0

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x1A8F STLB_QOS_CFG       # STLB QoS MASK configuration
XEONSCAL4 0x1A90 STLB_QOS_MASK_0_0
XEONSCAL4 0x1A91 STLB_QOS_MASK_1_1
XEONSCAL4 0x1A92 STLB_QOS_MASK_2_2
XEONSCAL4 0x1A93 STLB_QOS_MASK_3_3
XEONSCAL4 0x1A94 STLB_QOS_MASK_4_4
XEONSCAL4 0x1A95 STLB_QOS_MASK_5_5
XEONSCAL4 0x1A96 STLB_QOS_MASK_6_6
XEONSCAL4 0x1A97 STLB_QOS_MASK_7_7

# https://www.intel.com/content/www/us/en/developer/articles/technical/software-security-guidance/best-practices/data-operand-independent-timing-isa-guidance.html
# https://www.intel.com/content/www/us/en/developer/articles/technical/software-security-guidance/technical-documentation/cpuid-enumeration-and-architectural-msrs.html
# DOITM = Data Operand Independent Timing Mode
0x1B01 IA32_UARCH_MISC_CTL            # Intel-SDM-Vol4 (bit 0 is DOITM)

# Intel-SDM-Vol4 (12th and 13th Generation Intel Core Processors)
CORE12 0x2000 UNC_CBO_0_PERFEVTSEL0  # Uncore C-Box 0, Counter 0 Event Select MSR
CORE12 0x2001 UNC_CBO_0_PERFEVTSEL1  # Uncore C-Box 0, Counter 1 Event Select MSR
CORE12 0x2002 UNC_CBO_0_PERFCTR0     # Uncore C-Box 0, Performance Counter 0
CORE12 0x2003 UNC_CBO_0_PERFCTR1     # Uncore C-Box 0, Performance Counter 1
CORE12 0x2008 UNC_CBO_1_PERFEVTSEL0  # Uncore C-Box 1, Counter 0 Event Select MSR
CORE12 0x2009 UNC_CBO_1_PERFEVTSEL1  # Uncore C-Box 1, Counter 1 Event Select MSR
CORE12 0x200A UNC_CBO_1_PERFCTR0     # Uncore C-Box 1, Performance Counter 0
CORE12 0x200B UNC_CBO_1_PERFCTR1     # Uncore C-Box 1, Performance Counter 1
CORE12 0x2010 UNC_CBO_2_PERFEVTSEL0  # Uncore C-Box 2, Counter 0 Event Select MSR
CORE12 0x2011 UNC_CBO_2_PERFEVTSEL1  # Uncore C-Box 2, Counter 1 Event Select MSR
CORE12 0x2012 UNC_CBO_2_PERFCTR0     # Uncore C-Box 2, Performance Counter 0
CORE12 0x2013 UNC_CBO_2_PERFCTR1     # Uncore C-Box 2, Performance Counter 1
CORE12 0x2018 UNC_CBO_3_PERFEVTSEL0  # Uncore C-Box 3, Counter 0 Event Select MSR
CORE12 0x2019 UNC_CBO_3_PERFEVTSEL1  # Uncore C-Box 3, Counter 1 Event Select MSR
CORE12 0x201A UNC_CBO_3_PERFCTR0     # Uncore C-Box 3, Performance Counter 0
CORE12 0x201B UNC_CBO_3_PERFCTR1     # Uncore C-Box 3, Performance Counter 1
CORE12 0x2020 UNC_CBO_4_PERFEVTSEL0  # Uncore C-Box 4, Counter 0 Event Select MSR
CORE12 0x2021 UNC_CBO_4_PERFEVTSEL1  # Uncore C-Box 4, Counter 1 Event Select MSR
CORE12 0x2022 UNC_CBO_4_PERFCTR0     # Uncore C-Box 4, Performance Counter 0
CORE12 0x2023 UNC_CBO_4_PERFCTR1     # Uncore C-Box 4, Performance Counter 1
CORE12 0x2028 UNC_CBO_5_PERFEVTSEL0  # Uncore C-Box 5, Counter 0 Event Select MSR
CORE12 0x2029 UNC_CBO_5_PERFEVTSEL1  # Uncore C-Box 5, Counter 1 Event Select MSR
CORE12 0x202A UNC_CBO_5_PERFCTR0     # Uncore C-Box 5, Performance Counter 0
CORE12 0x202B UNC_CBO_5_PERFCTR1     # Uncore C-Box 5, Performance Counter 1
CORE12 0x2030 UNC_CBO_6_PERFEVTSEL0  # Uncore C-Box 6, Counter 0 Event Select MSR
CORE12 0x2031 UNC_CBO_6_PERFEVTSEL1  # Uncore C-Box 6, Counter 1 Event Select MSR
CORE12 0x2032 UNC_CBO_6_PERFCTR0     # Uncore C-Box 6, Performance Counter 0
CORE12 0x2033 UNC_CBO_6_PERFCTR1     # Uncore C-Box 6, Performance Counter 1
CORE12 0x2038 UNC_CBO_7_PERFEVTSEL0  # Uncore C-Box 7, Counter 0 Event Select MSR
CORE12 0x2039 UNC_CBO_7_PERFEVTSEL1  # Uncore C-Box 7, Counter 1 Event Select MSR
CORE12 0x203A UNC_CBO_7_PERFCTR0     # Uncore C-Box 7, Performance Counter 0
CORE12 0x203B UNC_CBO_7_PERFCTR1     # Uncore C-Box 7, Performance Counter 1
CORE12 0x2040 UNC_CBO_8_PERFEVTSEL0  # Uncore C-Box 8, Counter 0 Event Select MSR
CORE12 0x2041 UNC_CBO_8_PERFEVTSEL1  # Uncore C-Box 8, Counter 1 Event Select MSR
CORE12 0x2042 UNC_CBO_8_PERFCTR0     # Uncore C-Box 8, Performance Counter 0
CORE12 0x2043 UNC_CBO_8_PERFCTR1     # Uncore C-Box 8, Performance Counter 1
CORE12 0x2048 UNC_CBO_9_PERFEVTSEL0  # Uncore C-Box 9, Counter 0 Event Select MSR
CORE12 0x2049 UNC_CBO_9_PERFEVTSEL1  # Uncore C-Box 9, Counter 1 Event Select MSR
CORE12 0x204A UNC_CBO_9_PERFCTR0     # Uncore C-Box 9, Performance Counter 0
CORE12 0x204B UNC_CBO_9_PERFCTR1     # Uncore C-Box 9, Performance Counter 1
CORE12 0x2FD0 UNC_ARB_0_PERFEVTSEL0  # Uncore Arb Unit 0, Counter 0 Event Select MSR
CORE12 0x2FD1 UNC_ARB_0_PERFEVTSEL1  # Uncore Arb Unit 0, Counter 1 Event Select MSR
CORE12 0x2FD2 UNC_ARB_0_PERFCTR0     # Uncore Arb Unit 0, Performance Counter 0
CORE12 0x2FD3 UNC_ARB_0_PERFCTR1     # Uncore Arb Unit 0, Performance Counter 1
CORE12 0x2FD4 UNC_ARB_0_PERF_STATUS  # Uncore Arb Unit 0, Performance Status
CORE12 0x2FD5 UNC_ARB_0_PERF_CTRL    # Uncore Arb Unit 0, Performance Control
CORE12 0x2FD8 UNC_ARB_1_PERFEVTSEL0  # Uncore Arb Unit 1, Counter 0 Event Select MSR
CORE12 0x2FD9 UNC_ARB_1_PERFEVTSEL1  # Uncore Arb Unit 1, Counter 1 Event Select MSR
CORE12 0x2FDA UNC_ARB_1_PERFCTR0     # Uncore Arb Unit 1, Performance Counter 0
CORE12 0x2FDB UNC_ARB_1_PERFCTR1     # Uncore Arb Unit 1, Performance Counter 1
CORE12 0x2FDC UNC_ARB_1_PERF_STATUS  # Uncore Arb Unit 1, Performance Status
CORE12 0x2FDD UNC_ARB_1_PERF_CTRL    # Uncore Arb Unit 1, Performance Control
CORE12 0x2FDE UNC_PERF_FIXED_CTRL    # Uncore Fixed Counter Control (R/W)
CORE12 0x2FDF UNC_PERF_FIXED_CTR     # Uncore Fixed Counter
CORE12 0x2FF0 UNC_PERF_GLOBAL_CTRL   # Uncore PMU Global Control
CORE12 0x2FF2 UNC_PERF_GLOBAL_STATUS # Uncore PMU Main Status

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h
XEONSCAL4 0x2000 CBOPMONUNITCTRL_0  # When this bit is written to, the counter configuration registers will be reset. This does not effect the values in the counters. To reset the counters, this bit need only be set by one of the unit control registers
XEONSCAL4 0x2001 CBOPMONCTRSTATUS_0
XEONSCAL4 0x2002 CBOPMONCT_0_0      # PMON Counter 0 data register. Holds the counter value
XEONSCAL4 0x2003 CBOPMONCT_1_0

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/GnrMsr.h and SprMsr.h
XEONSCAL4 0x2004 CBOPMONCTRCTRL_2_0 # Holds the status information and control the operation of the PerfMon Fixed Counter
XEONSCAL4 0x2005 CBOPMONCTRCTRL_3_0

# 4th Generation Intel Xeon Scalable Processor Family UEFI source: Intel/ServerSiliconPkg/Include/Cpu/Msr/CommonMsr.h and GnrMsr.h
XEONSCAL4 0x2008 CBOPMONCTRCTRL_0_1 # Holds the status information and control the operation of the the PMON Fixed Counter
XEONSCAL4 0x2009 CBOPMONCTRCTRL_1_1
XEONSCAL4 0x200A CBOPMONCT_2_0
XEONSCAL4 0x200B CBOPMONCT_3_0
XEONSCAL4 0x200E CBOPMONCTRLGLCTR_0
XEONSCAL4 0x2010 CBOPMONUNITCTRL_1
XEONSCAL4 0x2011 CBOPMONCTRSTATUS_1
XEONSCAL4 0x2012 CBOPMONCT_0_2
XEONSCAL4 0x2013 CBOPMONCT_1_2
XEONSCAL4 0x2014 CBOPMONCTRCTRL_2_1
XEONSCAL4 0x2015 CBOPMONCTRCTRL_3_1
XEONSCAL4 0x2018 CBOPMONCTRCTRL_0_3
XEONSCAL4 0x2019 CBOPMONCTRCTRL_1_3
XEONSCAL4 0x201A CBOPMONCT_2_1
XEONSCAL4 0x201B CBOPMONCT_3_1
XEONSCAL4 0x201E CBOPMONCTRLGLCTR_1
XEONSCAL4 0x2020 CBOPMONUNITCTRL_2
XEONSCAL4 0x2021 CBOPMONCTRSTATUS_2
XEONSCAL4 0x2022 CBOPMONCT_0_4
XEONSCAL4 0x2023 CBOPMONCT_1_4
XEONSCAL4 0x2024 CBOPMONCTRCTRL_2_2
XEONSCAL4 0x2025 CBOPMONCTRCTRL_3_2
XEONSCAL4 0x2028 CBOPMONCTRCTRL_0_5
XEONSCAL4 0x2029 CBOPMONCTRCTRL_1_5
XEONSCAL4 0x202A CBOPMONCT_2_2
XEONSCAL4 0x202B CBOPMONCT_3_2
XEONSCAL4 0x202E CBOPMONCTRLGLCTR_2
XEONSCAL4 0x2030 CBOPMONUNITCTRL_3
XEONSCAL4 0x2031 CBOPMONCTRSTATUS_3
XEONSCAL4 0x2032 CBOPMONCT_0_6
XEONSCAL4 0x2033 CBOPMONCT_1_6
XEONSCAL4 0x2034 CBOPMONCTRCTRL_2_3
XEONSCAL4 0x2035 CBOPMONCTRCTRL_3_3
XEONSCAL4 0x2038 CBOPMONCTRCTRL_0_7
XEONSCAL4 0x2039 CBOPMONCTRCTRL_1_7
XEONSCAL4 0x203A CBOPMONCT_2_3
XEONSCAL4 0x203B CBOPMONCT_3_3
XEONSCAL4 0x203E CBOPMONCTRLGLCTR_3
XEONSCAL4 0x2040 CBOPMONUNITCTRL_4
XEONSCAL4 0x2041 CBOPMONCTRSTATUS_4
XEONSCAL4 0x2042 CBOPMONCT_0_8
XEONSCAL4 0x2043 CBOPMONCT_1_8
XEONSCAL4 0x2044 CBOPMONCTRCTRL_2_4
XEONSCAL4 0x2045 CBOPMONCTRCTRL_3_4
XEONSCAL4 0x2048 CBOPMONCTRCTRL_0_9
XEONSCAL4 0x2049 CBOPMONCTRCTRL_1_9
XEONSCAL4 0x204A CBOPMONCT_2_4
XEONSCAL4 0x204B CBOPMONCT_3_4
XEONSCAL4 0x204E CBOPMONCTRLGLCTR_4
XEONSCAL4 0x2050 CBOPMONUNITCTRL_5
XEONSCAL4 0x2051 CBOPMONCTRSTATUS_5
XEONSCAL4 0x2052 CBOPMONCT_0_10
XEONSCAL4 0x2053 CBOPMONCT_1_10
XEONSCAL4 0x2054 CBOPMONCTRCTRL_2_5
XEONSCAL4 0x2055 CBOPMONCTRCTRL_3_5
XEONSCAL4 0x2058 CBOPMONCTRCTRL_0_11
XEONSCAL4 0x2059 CBOPMONCTRCTRL_1_11
XEONSCAL4 0x205A CBOPMONCT_2_5
XEONSCAL4 0x205B CBOPMONCT_3_5
XEONSCAL4 0x205E CBOPMONCTRLGLCTR_5
XEONSCAL4 0x2060 CBOPMONUNITCTRL_6
XEONSCAL4 0x2061 CBOPMONCTRSTATUS_6
XEONSCAL4 0x2062 CBOPMONCT_0_12
XEONSCAL4 0x2063 CBOPMONCT_1_12
XEONSCAL4 0x2064 CBOPMONCTRCTRL_2_6
XEONSCAL4 0x2065 CBOPMONCTRCTRL_3_6
XEONSCAL4 0x2068 CBOPMONCTRCTRL_0_13
XEONSCAL4 0x2069 CBOPMONCTRCTRL_1_13
XEONSCAL4 0x206A CBOPMONCT_2_6
XEONSCAL4 0x206B CBOPMONCT_3_6
XEONSCAL4 0x206E CBOPMONCTRLGLCTR_6
XEONSCAL4 0x2070 CBOPMONUNITCTRL_7
XEONSCAL4 0x2071 CBOPMONCTRSTATUS_7
XEONSCAL4 0x2072 CBOPMONCT_0_14
XEONSCAL4 0x2073 CBOPMONCT_1_14
XEONSCAL4 0x2074 CBOPMONCTRCTRL_2_7
XEONSCAL4 0x2075 CBOPMONCTRCTRL_3_7
XEONSCAL4 0x2078 CBOPMONCTRCTRL_0_15
XEONSCAL4 0x2079 CBOPMONCTRCTRL_1_15
XEONSCAL4 0x207A CBOPMONCT_2_7
XEONSCAL4 0x207B CBOPMONCT_3_7
XEONSCAL4 0x207E CBOPMONCTRLGLCTR_7
XEONSCAL4 0x2080 CBOPMONUNITCTRL_8
XEONSCAL4 0x2081 CBOPMONCTRSTATUS_8
XEONSCAL4 0x2084 CBOPMONCTRCTRL_2_8
XEONSCAL4 0x2085 CBOPMONCTRCTRL_3_8
XEONSCAL4 0x208A CBOPMONCT_2_8
XEONSCAL4 0x208B CBOPMONCT_3_8
XEONSCAL4 0x208E CBOPMONCTRLGLCTR_8
XEONSCAL4 0x2090 CBOPMONUNITCTRL_9
XEONSCAL4 0x2091 CBOPMONCTRSTATUS_9
XEONSCAL4 0x2094 CBOPMONCTRCTRL_2_9
XEONSCAL4 0x2095 CBOPMONCTRCTRL_3_9
XEONSCAL4 0x209A CBOPMONCT_2_9
XEONSCAL4 0x209B CBOPMONCT_3_9
XEONSCAL4 0x209E CBOPMONCTRLGLCTR_9
XEONSCAL4 0x20A0 CBOPMONUNITCTRL_10
XEONSCAL4 0x20A1 CBOPMONCTRSTATUS_10
XEONSCAL4 0x20A4 CBOPMONCTRCTRL_2_10
XEONSCAL4 0x20A5 CBOPMONCTRCTRL_3_10
XEONSCAL4 0x20AA CBOPMONCT_2_10
XEONSCAL4 0x20AB CBOPMONCT_3_10
XEONSCAL4 0x20AE CBOPMONCTRLGLCTR_10
XEONSCAL4 0x20B0 CBOPMONUNITCTRL_11
XEONSCAL4 0x20B1 CBOPMONCTRSTATUS_11
XEONSCAL4 0x20B4 CBOPMONCTRCTRL_2_11
XEONSCAL4 0x20B5 CBOPMONCTRCTRL_3_11
XEONSCAL4 0x20BA CBOPMONCT_2_11
XEONSCAL4 0x20BB CBOPMONCT_3_11
XEONSCAL4 0x20BE CBOPMONCTRLGLCTR_11
XEONSCAL4 0x20C0 CBOPMONUNITCTRL_12
XEONSCAL4 0x20C1 CBOPMONCTRSTATUS_12
XEONSCAL4 0x20C4 CBOPMONCTRCTRL_2_12
XEONSCAL4 0x20C5 CBOPMONCTRCTRL_3_12
XEONSCAL4 0x20CA CBOPMONCT_2_12
XEONSCAL4 0x20CB CBOPMONCT_3_12
XEONSCAL4 0x20CE CBOPMONCTRLGLCTR_12
XEONSCAL4 0x20D0 CBOPMONUNITCTRL_13
XEONSCAL4 0x20D1 CBOPMONCTRSTATUS_13
XEONSCAL4 0x20D4 CBOPMONCTRCTRL_2_13
XEONSCAL4 0x20D5 CBOPMONCTRCTRL_3_13
XEONSCAL4 0x20DA CBOPMONCT_2_13
XEONSCAL4 0x20DB CBOPMONCT_3_13
XEONSCAL4 0x20DE CBOPMONCTRLGLCTR_13
XEONSCAL4 0x20E0 CBOPMONUNITCTRL_14
XEONSCAL4 0x20E1 CBOPMONCTRSTATUS_14
XEONSCAL4 0x20E4 CBOPMONCTRCTRL_2_14
XEONSCAL4 0x20E5 CBOPMONCTRCTRL_3_14
XEONSCAL4 0x20EA CBOPMONCT_2_14
XEONSCAL4 0x20EB CBOPMONCT_3_14
XEONSCAL4 0x20EE CBOPMONCTRLGLCTR_14
XEONSCAL4 0x20F0 CBOPMONUNITCTRL_15
XEONSCAL4 0x20F1 CBOPMONCTRSTATUS_15
XEONSCAL4 0x20F4 CBOPMONCTRCTRL_2_15
XEONSCAL4 0x20F5 CBOPMONCTRCTRL_3_15
XEONSCAL4 0x20FA CBOPMONCT_2_15
XEONSCAL4 0x20FB CBOPMONCT_3_15
XEONSCAL4 0x20FE CBOPMONCTRLGLCTR_15
XEONSCAL4 0x2100 CBOPMONUNITCTRL_16
XEONSCAL4 0x2101 CBOPMONCTRSTATUS_16
XEONSCAL4 0x2102 CBOPMONCTRCTRL_0_16
XEONSCAL4 0x2103 CBOPMONCTRCTRL_1_16
XEONSCAL4 0x2104 CBOPMONCTRCTRL_2_16
XEONSCAL4 0x2105 CBOPMONCTRCTRL_3_16
XEONSCAL4 0x2108 CBOPMONCT_0_16
XEONSCAL4 0x2109 CBOPMONCT_1_16
XEONSCAL4 0x210A CBOPMONCT_2_16
XEONSCAL4 0x210B CBOPMONCT_3_16
XEONSCAL4 0x210E CBOPMONCTRLGLCTR_16
XEONSCAL4 0x2110 CBOPMONUNITCTRL_17
XEONSCAL4 0x2111 CBOPMONCTRSTATUS_17
XEONSCAL4 0x2112 CBOPMONCTRCTRL_0_17
XEONSCAL4 0x2113 CBOPMONCTRCTRL_1_17
XEONSCAL4 0x2114 CBOPMONCTRCTRL_2_17
XEONSCAL4 0x2115 CBOPMONCTRCTRL_3_17
XEONSCAL4 0x2118 CBOPMONCT_0_17
XEONSCAL4 0x2119 CBOPMONCT_1_17
XEONSCAL4 0x211A CBOPMONCT_2_17
XEONSCAL4 0x211B CBOPMONCT_3_17
XEONSCAL4 0x211E CBOPMONCTRLGLCTR_17
XEONSCAL4 0x2120 CBOPMONUNITCTRL_18
XEONSCAL4 0x2121 CBOPMONCTRSTATUS_18
XEONSCAL4 0x2122 CBOPMONCTRCTRL_0_18
XEONSCAL4 0x2123 CBOPMONCTRCTRL_1_18
XEONSCAL4 0x2124 CBOPMONCTRCTRL_2_18
XEONSCAL4 0x2125 CBOPMONCTRCTRL_3_18
XEONSCAL4 0x2128 CBOPMONCT_0_18
XEONSCAL4 0x2129 CBOPMONCT_1_18
XEONSCAL4 0x212A CBOPMONCT_2_18
XEONSCAL4 0x212B CBOPMONCT_3_18
XEONSCAL4 0x212E CBOPMONCTRLGLCTR_18
XEONSCAL4 0x2130 CBOPMONUNITCTRL_19
XEONSCAL4 0x2131 CBOPMONCTRSTATUS_19
XEONSCAL4 0x2132 CBOPMONCTRCTRL_0_19
XEONSCAL4 0x2133 CBOPMONCTRCTRL_1_19
XEONSCAL4 0x2134 CBOPMONCTRCTRL_2_19
XEONSCAL4 0x2135 CBOPMONCTRCTRL_3_19
XEONSCAL4 0x2138 CBOPMONCT_0_19
XEONSCAL4 0x2139 CBOPMONCT_1_19
XEONSCAL4 0x213A CBOPMONCT_2_19
XEONSCAL4 0x213B CBOPMONCT_3_19
XEONSCAL4 0x213E CBOPMONCTRLGLCTR_19
XEONSCAL4 0x2140 CBOPMONUNITCTRL_20
XEONSCAL4 0x2141 CBOPMONCTRSTATUS_20
XEONSCAL4 0x2142 CBOPMONCTRCTRL_0_20
XEONSCAL4 0x2143 CBOPMONCTRCTRL_1_20
XEONSCAL4 0x2144 CBOPMONCTRCTRL_2_20
XEONSCAL4 0x2145 CBOPMONCTRCTRL_3_20
XEONSCAL4 0x2148 CBOPMONCT_0_20
XEONSCAL4 0x2149 CBOPMONCT_1_20
XEONSCAL4 0x214A CBOPMONCT_2_20
XEONSCAL4 0x214B CBOPMONCT_3_20
XEONSCAL4 0x214E CBOPMONCTRLGLCTR_20
XEONSCAL4 0x2150 CBOPMONUNITCTRL_21
XEONSCAL4 0x2151 CBOPMONCTRSTATUS_21
XEONSCAL4 0x2152 CBOPMONCTRCTRL_0_21
XEONSCAL4 0x2153 CBOPMONCTRCTRL_1_21
XEONSCAL4 0x2154 CBOPMONCTRCTRL_2_21
XEONSCAL4 0x2155 CBOPMONCTRCTRL_3_21
XEONSCAL4 0x2158 CBOPMONCT_0_21
XEONSCAL4 0x2159 CBOPMONCT_1_21
XEONSCAL4 0x215A CBOPMONCT_2_21
XEONSCAL4 0x215B CBOPMONCT_3_21
XEONSCAL4 0x215E CBOPMONCTRLGLCTR_21
XEONSCAL4 0x2160 CBOPMONUNITCTRL_22
XEONSCAL4 0x2161 CBOPMONCTRSTATUS_22
XEONSCAL4 0x2162 CBOPMONCTRCTRL_0_22
XEONSCAL4 0x2163 CBOPMONCTRCTRL_1_22
XEONSCAL4 0x2164 CBOPMONCTRCTRL_2_22
XEONSCAL4 0x2165 CBOPMONCTRCTRL_3_22
XEONSCAL4 0x2168 CBOPMONCT_0_22
XEONSCAL4 0x2169 CBOPMONCT_1_22
XEONSCAL4 0x216A CBOPMONCT_2_22
XEONSCAL4 0x216B CBOPMONCT_3_22
XEONSCAL4 0x216E CBOPMONCTRLGLCTR_22
XEONSCAL4 0x2170 CBOPMONUNITCTRL_23
XEONSCAL4 0x2171 CBOPMONCTRSTATUS_23
XEONSCAL4 0x2172 CBOPMONCTRCTRL_0_23
XEONSCAL4 0x2173 CBOPMONCTRCTRL_1_23
XEONSCAL4 0x2174 CBOPMONCTRCTRL_2_23
XEONSCAL4 0x2175 CBOPMONCTRCTRL_3_23
XEONSCAL4 0x2178 CBOPMONCT_0_23
XEONSCAL4 0x2179 CBOPMONCT_1_23
XEONSCAL4 0x217A CBOPMONCT_2_23
XEONSCAL4 0x217B CBOPMONCT_3_23
XEONSCAL4 0x217E CBOPMONCTRLGLCTR_23
XEONSCAL4 0x2180 CBOPMONUNITCTRL_24
XEONSCAL4 0x2181 CBOPMONCTRSTATUS_24
XEONSCAL4 0x2182 CBOPMONCTRCTRL_0_24
XEONSCAL4 0x2183 CBOPMONCTRCTRL_1_24
XEONSCAL4 0x2184 CBOPMONCTRCTRL_2_24
XEONSCAL4 0x2185 CBOPMONCTRCTRL_3_24
XEONSCAL4 0x2188 CBOPMONCT_0_24
XEONSCAL4 0x2189 CBOPMONCT_1_24
XEONSCAL4 0x218A CBOPMONCT_2_24
XEONSCAL4 0x218B CBOPMONCT_3_24
XEONSCAL4 0x218E CBOPMONCTRLGLCTR_24
XEONSCAL4 0x2190 CBOPMONUNITCTRL_25
XEONSCAL4 0x2191 CBOPMONCTRSTATUS_25
XEONSCAL4 0x2192 CBOPMONCTRCTRL_0_25
XEONSCAL4 0x2193 CBOPMONCTRCTRL_1_25
XEONSCAL4 0x2194 CBOPMONCTRCTRL_2_25
XEONSCAL4 0x2195 CBOPMONCTRCTRL_3_25
XEONSCAL4 0x2198 CBOPMONCT_0_25
XEONSCAL4 0x2199 CBOPMONCT_1_25
XEONSCAL4 0x219A CBOPMONCT_2_25
XEONSCAL4 0x219B CBOPMONCT_3_25
XEONSCAL4 0x219E CBOPMONCTRLGLCTR_25
XEONSCAL4 0x21A0 CBOPMONUNITCTRL_26
XEONSCAL4 0x21A1 CBOPMONCTRSTATUS_26
XEONSCAL4 0x21A2 CBOPMONCTRCTRL_0_26
XEONSCAL4 0x21A3 CBOPMONCTRCTRL_1_26
XEONSCAL4 0x21A4 CBOPMONCTRCTRL_2_26
XEONSCAL4 0x21A5 CBOPMONCTRCTRL_3_26
XEONSCAL4 0x21A8 CBOPMONCT_0_26
XEONSCAL4 0x21A9 CBOPMONCT_1_26
XEONSCAL4 0x21AA CBOPMONCT_2_26
XEONSCAL4 0x21AB CBOPMONCT_3_26
XEONSCAL4 0x21AE CBOPMONCTRLGLCTR_26
XEONSCAL4 0x21B0 CBOPMONUNITCTRL_27
XEONSCAL4 0x21B1 CBOPMONCTRSTATUS_27
XEONSCAL4 0x21B2 CBOPMONCTRCTRL_0_27
XEONSCAL4 0x21B3 CBOPMONCTRCTRL_1_27
XEONSCAL4 0x21B4 CBOPMONCTRCTRL_2_27
XEONSCAL4 0x21B5 CBOPMONCTRCTRL_3_27
XEONSCAL4 0x21B8 CBOPMONCT_0_27
XEONSCAL4 0x21B9 CBOPMONCT_1_27
XEONSCAL4 0x21BA CBOPMONCT_2_27
XEONSCAL4 0x21BB CBOPMONCT_3_27
XEONSCAL4 0x21BE CBOPMONCTRLGLCTR_27
XEONSCAL4 0x21C0 CBOPMONUNITCTRL_28
XEONSCAL4 0x21C1 CBOPMONCTRSTATUS_28
XEONSCAL4 0x21C2 CBOPMONCTRCTRL_0_28
XEONSCAL4 0x21C3 CBOPMONCTRCTRL_1_28
XEONSCAL4 0x21C4 CBOPMONCTRCTRL_2_28
XEONSCAL4 0x21C5 CBOPMONCTRCTRL_3_28
XEONSCAL4 0x21C8 CBOPMONCT_0_28
XEONSCAL4 0x21C9 CBOPMONCT_1_28
XEONSCAL4 0x21CA CBOPMONCT_2_28
XEONSCAL4 0x21CB CBOPMONCT_3_28
XEONSCAL4 0x21CE CBOPMONCTRLGLCTR_28
XEONSCAL4 0x21D0 CBOPMONUNITCTRL_29
XEONSCAL4 0x21D1 CBOPMONCTRSTATUS_29
XEONSCAL4 0x21D2 CBOPMONCTRCTRL_0_29
XEONSCAL4 0x21D3 CBOPMONCTRCTRL_1_29
XEONSCAL4 0x21D4 CBOPMONCTRCTRL_2_29
XEONSCAL4 0x21D5 CBOPMONCTRCTRL_3_29
XEONSCAL4 0x21D8 CBOPMONCT_0_29
XEONSCAL4 0x21D9 CBOPMONCT_1_29
XEONSCAL4 0x21DA CBOPMONCT_2_29
XEONSCAL4 0x21DB CBOPMONCT_3_29
XEONSCAL4 0x21DE CBOPMONCTRLGLCTR_29
XEONSCAL4 0x21E0 CBOPMONUNITCTRL_30
XEONSCAL4 0x21E1 CBOPMONCTRSTATUS_30
XEONSCAL4 0x21E2 CBOPMONCTRCTRL_0_30
XEONSCAL4 0x21E3 CBOPMONCTRCTRL_1_30
XEONSCAL4 0x21E4 CBOPMONCTRCTRL_2_30
XEONSCAL4 0x21E5 CBOPMONCTRCTRL_3_30
XEONSCAL4 0x21E8 CBOPMONCT_0_30
XEONSCAL4 0x21E9 CBOPMONCT_1_30
XEONSCAL4 0x21EA CBOPMONCT_2_30
XEONSCAL4 0x21EB CBOPMONCT_3_30
XEONSCAL4 0x21EE CBOPMONCTRLGLCTR_30
XEONSCAL4 0x21F0 CBOPMONUNITCTRL_31
XEONSCAL4 0x21F1 CBOPMONCTRSTATUS_31
XEONSCAL4 0x21F2 CBOPMONCTRCTRL_0_31
XEONSCAL4 0x21F3 CBOPMONCTRCTRL_1_31
XEONSCAL4 0x21F4 CBOPMONCTRCTRL_2_31
XEONSCAL4 0x21F5 CBOPMONCTRCTRL_3_31
XEONSCAL4 0x21F8 CBOPMONCT_0_31
XEONSCAL4 0x21F9 CBOPMONCT_1_31
XEONSCAL4 0x21FA CBOPMONCT_2_31
XEONSCAL4 0x21FB CBOPMONCT_3_31
XEONSCAL4 0x21FE CBOPMONCTRLGLCTR_31
XEONSCAL4 0x2200 CBOPMONUNITCTRL_32
XEONSCAL4 0x2201 CBOPMONCTRSTATUS_32
XEONSCAL4 0x2202 CBOPMONCTRCTRL_0_32
XEONSCAL4 0x2203 CBOPMONCTRCTRL_1_32
XEONSCAL4 0x2204 CBOPMONCTRCTRL_2_32
XEONSCAL4 0x2205 CBOPMONCTRCTRL_3_32
XEONSCAL4 0x2208 CBOPMONCT_0_32
XEONSCAL4 0x2209 CBOPMONCT_1_32
XEONSCAL4 0x220A CBOPMONCT_2_32
XEONSCAL4 0x220B CBOPMONCT_3_32
XEONSCAL4 0x220E CBOPMONCTRLGLCTR_32
XEONSCAL4 0x2210 CBOPMONUNITCTRL_33
XEONSCAL4 0x2211 CBOPMONCTRSTATUS_33
XEONSCAL4 0x2212 CBOPMONCTRCTRL_0_33
XEONSCAL4 0x2213 CBOPMONCTRCTRL_1_33
XEONSCAL4 0x2214 CBOPMONCTRCTRL_2_33
XEONSCAL4 0x2215 CBOPMONCTRCTRL_3_33
XEONSCAL4 0x2218 CBOPMONCT_0_33
XEONSCAL4 0x2219 CBOPMONCT_1_33
XEONSCAL4 0x221A CBOPMONCT_2_33
XEONSCAL4 0x221B CBOPMONCT_3_33
XEONSCAL4 0x221E CBOPMONCTRLGLCTR_33
XEONSCAL4 0x2220 CBOPMONUNITCTRL_34
XEONSCAL4 0x2221 CBOPMONCTRSTATUS_34
XEONSCAL4 0x2222 CBOPMONCTRCTRL_0_34
XEONSCAL4 0x2223 CBOPMONCTRCTRL_1_34
XEONSCAL4 0x2224 CBOPMONCTRCTRL_2_34
XEONSCAL4 0x2225 CBOPMONCTRCTRL_3_34
XEONSCAL4 0x2228 CBOPMONCT_0_34
XEONSCAL4 0x2229 CBOPMONCT_1_34
XEONSCAL4 0x222A CBOPMONCT_2_34
XEONSCAL4 0x222B CBOPMONCT_3_34
XEONSCAL4 0x222E CBOPMONCTRLGLCTR_34
XEONSCAL4 0x2230 CBOPMONUNITCTRL_35
XEONSCAL4 0x2231 CBOPMONCTRSTATUS_35
XEONSCAL4 0x2232 CBOPMONCTRCTRL_0_35
XEONSCAL4 0x2233 CBOPMONCTRCTRL_1_35
XEONSCAL4 0x2234 CBOPMONCTRCTRL_2_35
XEONSCAL4 0x2235 CBOPMONCTRCTRL_3_35
XEONSCAL4 0x2238 CBOPMONCT_0_35
XEONSCAL4 0x2239 CBOPMONCT_1_35
XEONSCAL4 0x223A CBOPMONCT_2_35
XEONSCAL4 0x223B CBOPMONCT_3_35
XEONSCAL4 0x223E CBOPMONCTRLGLCTR_35
XEONSCAL4 0x2240 CBOPMONUNITCTRL_36
XEONSCAL4 0x2241 CBOPMONCTRSTATUS_36
XEONSCAL4 0x2242 CBOPMONCTRCTRL_0_36
XEONSCAL4 0x2243 CBOPMONCTRCTRL_1_36
XEONSCAL4 0x2244 CBOPMONCTRCTRL_2_36
XEONSCAL4 0x2245 CBOPMONCTRCTRL_3_36
XEONSCAL4 0x2248 CBOPMONCT_0_36
XEONSCAL4 0x2249 CBOPMONCT_1_36
XEONSCAL4 0x224A CBOPMONCT_2_36
XEONSCAL4 0x224B CBOPMONCT_3_36
XEONSCAL4 0x224E CBOPMONCTRLGLCTR_36
XEONSCAL4 0x2250 CBOPMONUNITCTRL_37
XEONSCAL4 0x2251 CBOPMONCTRSTATUS_37
XEONSCAL4 0x2252 CBOPMONCTRCTRL_0_37
XEONSCAL4 0x2253 CBOPMONCTRCTRL_1_37
XEONSCAL4 0x2254 CBOPMONCTRCTRL_2_37
XEONSCAL4 0x2255 CBOPMONCTRCTRL_3_37
XEONSCAL4 0x2258 CBOPMONCT_0_37
XEONSCAL4 0x2259 CBOPMONCT_1_37
XEONSCAL4 0x225A CBOPMONCT_2_37
XEONSCAL4 0x225B CBOPMONCT_3_37
XEONSCAL4 0x225E CBOPMONCTRLGLCTR_37
XEONSCAL4 0x2260 CBOPMONUNITCTRL_38
XEONSCAL4 0x2261 CBOPMONCTRSTATUS_38
XEONSCAL4 0x2262 CBOPMONCTRCTRL_0_38
XEONSCAL4 0x2263 CBOPMONCTRCTRL_1_38
XEONSCAL4 0x2264 CBOPMONCTRCTRL_2_38
XEONSCAL4 0x2265 CBOPMONCTRCTRL_3_38
XEONSCAL4 0x2268 CBOPMONCT_0_38
XEONSCAL4 0x2269 CBOPMONCT_1_38
XEONSCAL4 0x226A CBOPMONCT_2_38
XEONSCAL4 0x226B CBOPMONCT_3_38
XEONSCAL4 0x226E CBOPMONCTRLGLCTR_38
XEONSCAL4 0x2270 CBOPMONUNITCTRL_39
XEONSCAL4 0x2271 CBOPMONCTRSTATUS_39
XEONSCAL4 0x2272 CBOPMONCTRCTRL_0_39
XEONSCAL4 0x2273 CBOPMONCTRCTRL_1_39
XEONSCAL4 0x2274 CBOPMONCTRCTRL_2_39
XEONSCAL4 0x2275 CBOPMONCTRCTRL_3_39
XEONSCAL4 0x2278 CBOPMONCT_0_39
XEONSCAL4 0x2279 CBOPMONCT_1_39
XEONSCAL4 0x227A CBOPMONCT_2_39
XEONSCAL4 0x227B CBOPMONCT_3_39
XEONSCAL4 0x227E CBOPMONCTRLGLCTR_39
XEONSCAL4 0x2280 CBOPMONUNITCTRL_40
XEONSCAL4 0x2281 CBOPMONCTRSTATUS_40
XEONSCAL4 0x2282 CBOPMONCTRCTRL_0_40
XEONSCAL4 0x2283 CBOPMONCTRCTRL_1_40
XEONSCAL4 0x2284 CBOPMONCTRCTRL_2_40
XEONSCAL4 0x2285 CBOPMONCTRCTRL_3_40
XEONSCAL4 0x2288 CBOPMONCT_0_40
XEONSCAL4 0x2289 CBOPMONCT_1_40
XEONSCAL4 0x228A CBOPMONCT_2_40
XEONSCAL4 0x228B CBOPMONCT_3_40
XEONSCAL4 0x228E CBOPMONCTRLGLCTR_40
XEONSCAL4 0x2290 CBOPMONUNITCTRL_41
XEONSCAL4 0x2291 CBOPMONCTRSTATUS_41
XEONSCAL4 0x2292 CBOPMONCTRCTRL_0_41
XEONSCAL4 0x2293 CBOPMONCTRCTRL_1_41
XEONSCAL4 0x2294 CBOPMONCTRCTRL_2_41
XEONSCAL4 0x2295 CBOPMONCTRCTRL_3_41
XEONSCAL4 0x2298 CBOPMONCT_0_41
XEONSCAL4 0x2299 CBOPMONCT_1_41
XEONSCAL4 0x229A CBOPMONCT_2_41
XEONSCAL4 0x229B CBOPMONCT_3_41
XEONSCAL4 0x229E CBOPMONCTRLGLCTR_41
XEONSCAL4 0x22A0 CBOPMONUNITCTRL_42
XEONSCAL4 0x22A1 CBOPMONCTRSTATUS_42
XEONSCAL4 0x22A2 CBOPMONCTRCTRL_0_42
XEONSCAL4 0x22A3 CBOPMONCTRCTRL_1_42
XEONSCAL4 0x22A4 CBOPMONCTRCTRL_2_42
XEONSCAL4 0x22A5 CBOPMONCTRCTRL_3_42
XEONSCAL4 0x22A8 CBOPMONCT_0_42
XEONSCAL4 0x22A9 CBOPMONCT_1_42
XEONSCAL4 0x22AA CBOPMONCT_2_42
XEONSCAL4 0x22AB CBOPMONCT_3_42
XEONSCAL4 0x22AE CBOPMONCTRLGLCTR_42
XEONSCAL4 0x22B0 CBOPMONUNITCTRL_43
XEONSCAL4 0x22B1 CBOPMONCTRSTATUS_43
XEONSCAL4 0x22B2 CBOPMONCTRCTRL_0_43
XEONSCAL4 0x22B3 CBOPMONCTRCTRL_1_43
XEONSCAL4 0x22B4 CBOPMONCTRCTRL_2_43
XEONSCAL4 0x22B5 CBOPMONCTRCTRL_3_43
XEONSCAL4 0x22B8 CBOPMONCT_0_43
XEONSCAL4 0x22B9 CBOPMONCT_1_43
XEONSCAL4 0x22BA CBOPMONCT_2_43
XEONSCAL4 0x22BB CBOPMONCT_3_43
XEONSCAL4 0x22BE CBOPMONCTRLGLCTR_43
XEONSCAL4 0x22C0 CBOPMONUNITCTRL_44
XEONSCAL4 0x22C1 CBOPMONCTRSTATUS_44
XEONSCAL4 0x22C2 CBOPMONCTRCTRL_0_44
XEONSCAL4 0x22C3 CBOPMONCTRCTRL_1_44
XEONSCAL4 0x22C4 CBOPMONCTRCTRL_2_44
XEONSCAL4 0x22C5 CBOPMONCTRCTRL_3_44
XEONSCAL4 0x22C8 CBOPMONCT_0_44
XEONSCAL4 0x22C9 CBOPMONCT_1_44
XEONSCAL4 0x22CA CBOPMONCT_2_44
XEONSCAL4 0x22CB CBOPMONCT_3_44
XEONSCAL4 0x22CE CBOPMONCTRLGLCTR_44
XEONSCAL4 0x22D0 CBOPMONUNITCTRL_45
XEONSCAL4 0x22D1 CBOPMONCTRSTATUS_45
XEONSCAL4 0x22D2 CBOPMONCTRCTRL_0_45
XEONSCAL4 0x22D3 CBOPMONCTRCTRL_1_45
XEONSCAL4 0x22D4 CBOPMONCTRCTRL_2_45
XEONSCAL4 0x22D5 CBOPMONCTRCTRL_3_45
XEONSCAL4 0x22D8 CBOPMONCT_0_45
XEONSCAL4 0x22D9 CBOPMONCT_1_45
XEONSCAL4 0x22DA CBOPMONCT_2_45
XEONSCAL4 0x22DB CBOPMONCT_3_45
XEONSCAL4 0x22DE CBOPMONCTRLGLCTR_45
XEONSCAL4 0x22E0 CBOPMONUNITCTRL_46
XEONSCAL4 0x22E1 CBOPMONCTRSTATUS_46
XEONSCAL4 0x22E2 CBOPMONCTRCTRL_0_46
XEONSCAL4 0x22E3 CBOPMONCTRCTRL_1_46
XEONSCAL4 0x22E4 CBOPMONCTRCTRL_2_46
XEONSCAL4 0x22E5 CBOPMONCTRCTRL_3_46
XEONSCAL4 0x22E8 CBOPMONCT_0_46
XEONSCAL4 0x22E9 CBOPMONCT_1_46
XEONSCAL4 0x22EA CBOPMONCT_2_46
XEONSCAL4 0x22EB CBOPMONCT_3_46
XEONSCAL4 0x22EE CBOPMONCTRLGLCTR_46
XEONSCAL4 0x22F0 CBOPMONUNITCTRL_47
XEONSCAL4 0x22F1 CBOPMONCTRSTATUS_47
XEONSCAL4 0x22F2 CBOPMONCTRCTRL_0_47
XEONSCAL4 0x22F3 CBOPMONCTRCTRL_1_47
XEONSCAL4 0x22F4 CBOPMONCTRCTRL_2_47
XEONSCAL4 0x22F5 CBOPMONCTRCTRL_3_47
XEONSCAL4 0x22F8 CBOPMONCT_0_47
XEONSCAL4 0x22F9 CBOPMONCT_1_47
XEONSCAL4 0x22FA CBOPMONCT_2_47
XEONSCAL4 0x22FB CBOPMONCT_3_47
XEONSCAL4 0x22FE CBOPMONCTRLGLCTR_47
XEONSCAL4 0x2300 CBOPMONUNITCTRL_48
XEONSCAL4 0x2301 CBOPMONCTRSTATUS_48
XEONSCAL4 0x2302 CBOPMONCTRCTRL_0_48
XEONSCAL4 0x2303 CBOPMONCTRCTRL_1_48
XEONSCAL4 0x2304 CBOPMONCTRCTRL_2_48
XEONSCAL4 0x2305 CBOPMONCTRCTRL_3_48
XEONSCAL4 0x2308 CBOPMONCT_0_48
XEONSCAL4 0x2309 CBOPMONCT_1_48
XEONSCAL4 0x230A CBOPMONCT_2_48
XEONSCAL4 0x230B CBOPMONCT_3_48
XEONSCAL4 0x230E CBOPMONCTRLGLCTR_48
XEONSCAL4 0x2310 CBOPMONUNITCTRL_49
XEONSCAL4 0x2311 CBOPMONCTRSTATUS_49
XEONSCAL4 0x2312 CBOPMONCTRCTRL_0_49
XEONSCAL4 0x2313 CBOPMONCTRCTRL_1_49
XEONSCAL4 0x2314 CBOPMONCTRCTRL_2_49
XEONSCAL4 0x2315 CBOPMONCTRCTRL_3_49
XEONSCAL4 0x2318 CBOPMONCT_0_49
XEONSCAL4 0x2319 CBOPMONCT_1_49
XEONSCAL4 0x231A CBOPMONCT_2_49
XEONSCAL4 0x231B CBOPMONCT_3_49
XEONSCAL4 0x231E CBOPMONCTRLGLCTR_49
XEONSCAL4 0x2320 CBOPMONUNITCTRL_50
XEONSCAL4 0x2321 CBOPMONCTRSTATUS_50
XEONSCAL4 0x2322 CBOPMONCTRCTRL_0_50
XEONSCAL4 0x2323 CBOPMONCTRCTRL_1_50
XEONSCAL4 0x2324 CBOPMONCTRCTRL_2_50
XEONSCAL4 0x2325 CBOPMONCTRCTRL_3_50
XEONSCAL4 0x2328 CBOPMONCT_0_50
XEONSCAL4 0x2329 CBOPMONCT_1_50
XEONSCAL4 0x232A CBOPMONCT_2_50
XEONSCAL4 0x232B CBOPMONCT_3_50
XEONSCAL4 0x232E CBOPMONCTRLGLCTR_50
XEONSCAL4 0x2330 CBOPMONUNITCTRL_51
XEONSCAL4 0x2331 CBOPMONCTRSTATUS_51
XEONSCAL4 0x2332 CBOPMONCTRCTRL_0_51
XEONSCAL4 0x2333 CBOPMONCTRCTRL_1_51
XEONSCAL4 0x2334 CBOPMONCTRCTRL_2_51
XEONSCAL4 0x2335 CBOPMONCTRCTRL_3_51
XEONSCAL4 0x2338 CBOPMONCT_0_51
XEONSCAL4 0x2339 CBOPMONCT_1_51
XEONSCAL4 0x233A CBOPMONCT_2_51
XEONSCAL4 0x233B CBOPMONCT_3_51
XEONSCAL4 0x233E CBOPMONCTRLGLCTR_51
XEONSCAL4 0x2340 CBOPMONUNITCTRL_52
XEONSCAL4 0x2341 CBOPMONCTRSTATUS_52
XEONSCAL4 0x2342 CBOPMONCTRCTRL_0_52
XEONSCAL4 0x2343 CBOPMONCTRCTRL_1_52
XEONSCAL4 0x2344 CBOPMONCTRCTRL_2_52
XEONSCAL4 0x2345 CBOPMONCTRCTRL_3_52
XEONSCAL4 0x2348 CBOPMONCT_0_52
XEONSCAL4 0x2349 CBOPMONCT_1_52
XEONSCAL4 0x234A CBOPMONCT_2_52
XEONSCAL4 0x234B CBOPMONCT_3_52
XEONSCAL4 0x234E CBOPMONCTRLGLCTR_52
XEONSCAL4 0x2350 CBOPMONUNITCTRL_53
XEONSCAL4 0x2351 CBOPMONCTRSTATUS_53
XEONSCAL4 0x2352 CBOPMONCTRCTRL_0_53
XEONSCAL4 0x2353 CBOPMONCTRCTRL_1_53
XEONSCAL4 0x2354 CBOPMONCTRCTRL_2_53
XEONSCAL4 0x2355 CBOPMONCTRCTRL_3_53
XEONSCAL4 0x2358 CBOPMONCT_0_53
XEONSCAL4 0x2359 CBOPMONCT_1_53
XEONSCAL4 0x235A CBOPMONCT_2_53
XEONSCAL4 0x235B CBOPMONCT_3_53
XEONSCAL4 0x235E CBOPMONCTRLGLCTR_53
XEONSCAL4 0x2360 CBOPMONUNITCTRL_54
XEONSCAL4 0x2361 CBOPMONCTRSTATUS_54
XEONSCAL4 0x2362 CBOPMONCTRCTRL_0_54
XEONSCAL4 0x2363 CBOPMONCTRCTRL_1_54
XEONSCAL4 0x2364 CBOPMONCTRCTRL_2_54
XEONSCAL4 0x2365 CBOPMONCTRCTRL_3_54
XEONSCAL4 0x2368 CBOPMONCT_0_54
XEONSCAL4 0x2369 CBOPMONCT_1_54
XEONSCAL4 0x236A CBOPMONCT_2_54
XEONSCAL4 0x236B CBOPMONCT_3_54
XEONSCAL4 0x236E CBOPMONCTRLGLCTR_54
XEONSCAL4 0x2370 CBOPMONUNITCTRL_55
XEONSCAL4 0x2371 CBOPMONCTRSTATUS_55
XEONSCAL4 0x2372 CBOPMONCTRCTRL_0_55
XEONSCAL4 0x2373 CBOPMONCTRCTRL_1_55
XEONSCAL4 0x2374 CBOPMONCTRCTRL_2_55
XEONSCAL4 0x2375 CBOPMONCTRCTRL_3_55
XEONSCAL4 0x2378 CBOPMONCT_0_55
XEONSCAL4 0x2379 CBOPMONCT_1_55
XEONSCAL4 0x237A CBOPMONCT_2_55
XEONSCAL4 0x237B CBOPMONCT_3_55
XEONSCAL4 0x237E CBOPMONCTRLGLCTR_55
XEONSCAL4 0x2380 CBOPMONUNITCTRL_56
XEONSCAL4 0x2381 CBOPMONCTRSTATUS_56
XEONSCAL4 0x2382 CBOPMONCTRCTRL_0_56
XEONSCAL4 0x2383 CBOPMONCTRCTRL_1_56
XEONSCAL4 0x2384 CBOPMONCTRCTRL_2_56
XEONSCAL4 0x2385 CBOPMONCTRCTRL_3_56
XEONSCAL4 0x2388 CBOPMONCT_0_56
XEONSCAL4 0x2389 CBOPMONCT_1_56
XEONSCAL4 0x238A CBOPMONCT_2_56
XEONSCAL4 0x238B CBOPMONCT_3_56
XEONSCAL4 0x238E CBOPMONCTRLGLCTR_56
XEONSCAL4 0x2390 CBOPMONUNITCTRL_57
XEONSCAL4 0x2391 CBOPMONCTRSTATUS_57
XEONSCAL4 0x2392 CBOPMONCTRCTRL_0_57
XEONSCAL4 0x2393 CBOPMONCTRCTRL_1_57
XEONSCAL4 0x2394 CBOPMONCTRCTRL_2_57
XEONSCAL4 0x2395 CBOPMONCTRCTRL_3_57
XEONSCAL4 0x2398 CBOPMONCT_0_57
XEONSCAL4 0x2399 CBOPMONCT_1_57
XEONSCAL4 0x239A CBOPMONCT_2_57
XEONSCAL4 0x239B CBOPMONCT_3_57
XEONSCAL4 0x239E CBOPMONCTRLGLCTR_57
XEONSCAL4 0x23A0 CBOPMONUNITCTRL_58
XEONSCAL4 0x23A1 CBOPMONCTRSTATUS_58
XEONSCAL4 0x23A2 CBOPMONCTRCTRL_0_58
XEONSCAL4 0x23A3 CBOPMONCTRCTRL_1_58
XEONSCAL4 0x23A4 CBOPMONCTRCTRL_2_58
XEONSCAL4 0x23A5 CBOPMONCTRCTRL_3_58
XEONSCAL4 0x23A8 CBOPMONCT_0_58
XEONSCAL4 0x23A9 CBOPMONCT_1_58
XEONSCAL4 0x23AA CBOPMONCT_2_58
XEONSCAL4 0x23AB CBOPMONCT_3_58
XEONSCAL4 0x23AE CBOPMONCTRLGLCTR_58
XEONSCAL4 0x23B0 CBOPMONUNITCTRL_59
XEONSCAL4 0x23B1 CBOPMONCTRSTATUS_59
XEONSCAL4 0x23B2 CBOPMONCTRCTRL_0_59
XEONSCAL4 0x23B3 CBOPMONCTRCTRL_1_59
XEONSCAL4 0x23B4 CBOPMONCTRCTRL_2_59
XEONSCAL4 0x23B5 CBOPMONCTRCTRL_3_59
XEONSCAL4 0x23B8 CBOPMONCT_0_59
XEONSCAL4 0x23B9 CBOPMONCT_1_59
XEONSCAL4 0x23BA CBOPMONCT_2_59
XEONSCAL4 0x23BB CBOPMONCT_3_59
XEONSCAL4 0x23BE CBOPMONCTRLGLCTR_59
XEONSCAL4 0x2800 PMON_UNIT_CTRL_0
XEONSCAL4 0x2801 PMON_COUNTER_STATUS_0
XEONSCAL4 0x2802 PMON_COUNTER_CTRL_0_0
XEONSCAL4 0x2803 PMON_COUNTER_CTRL_1_0
XEONSCAL4 0x2804 PMON_COUNTER_CTRL_2_0
XEONSCAL4 0x2805 PMON_COUNTER_CTRL_3_0
XEONSCAL4 0x2808 PMON_COUNTER_0_0
XEONSCAL4 0x2809 PMON_COUNTER_1_0
XEONSCAL4 0x280A PMON_COUNTER_2_0
XEONSCAL4 0x280B PMON_COUNTER_3_0
XEONSCAL4 0x2810 PMON_UNIT_CTRL_1
XEONSCAL4 0x2811 PMON_COUNTER_STATUS_1
XEONSCAL4 0x2812 PMON_COUNTER_CTRL_0_1
XEONSCAL4 0x2813 PMON_COUNTER_CTRL_1_1
XEONSCAL4 0x2814 PMON_COUNTER_CTRL_2_1
XEONSCAL4 0x2815 PMON_COUNTER_CTRL_3_1
XEONSCAL4 0x2818 PMON_COUNTER_0_1
XEONSCAL4 0x2819 PMON_COUNTER_1_1
XEONSCAL4 0x281A PMON_COUNTER_2_1
XEONSCAL4 0x281B PMON_COUNTER_3_1
XEONSCAL4 0x2820 PMON_UNIT_CTRL_2
XEONSCAL4 0x2821 PMON_COUNTER_STATUS_2
XEONSCAL4 0x2822 PMON_COUNTER_CTRL_0_2
XEONSCAL4 0x2823 PMON_COUNTER_CTRL_1_2
XEONSCAL4 0x2824 PMON_COUNTER_CTRL_2_2
XEONSCAL4 0x2825 PMON_COUNTER_CTRL_3_2
XEONSCAL4 0x2828 PMON_COUNTER_0_2
XEONSCAL4 0x2829 PMON_COUNTER_1_2
XEONSCAL4 0x282A PMON_COUNTER_2_2
XEONSCAL4 0x282B PMON_COUNTER_3_2
XEONSCAL4 0x2830 PMON_UNIT_CTRL_3
XEONSCAL4 0x2831 PMON_COUNTER_STATUS_3
XEONSCAL4 0x2832 PMON_COUNTER_CTRL_0_3
XEONSCAL4 0x2833 PMON_COUNTER_CTRL_1_3
XEONSCAL4 0x2834 PMON_COUNTER_CTRL_2_3
XEONSCAL4 0x2835 PMON_COUNTER_CTRL_3_3
XEONSCAL4 0x2838 PMON_COUNTER_0_3
XEONSCAL4 0x2839 PMON_COUNTER_1_3
XEONSCAL4 0x283A PMON_COUNTER_2_3
XEONSCAL4 0x283B PMON_COUNTER_3_3
XEONSCAL4 0x2840 PMON_UNIT_CTRL_4
XEONSCAL4 0x2841 PMON_COUNTER_STATUS_4
XEONSCAL4 0x2842 PMON_COUNTER_CTRL_0_4
XEONSCAL4 0x2843 PMON_COUNTER_CTRL_1_4
XEONSCAL4 0x2844 PMON_COUNTER_CTRL_2_4
XEONSCAL4 0x2845 PMON_COUNTER_CTRL_3_4
XEONSCAL4 0x2848 PMON_COUNTER_0_4
XEONSCAL4 0x2849 PMON_COUNTER_1_4
XEONSCAL4 0x284A PMON_COUNTER_2_4
XEONSCAL4 0x284B PMON_COUNTER_3_4
XEONSCAL4 0x2850 PMON_UNIT_CTRL_5
XEONSCAL4 0x2851 PMON_COUNTER_STATUS_5
XEONSCAL4 0x2852 PMON_COUNTER_CTRL_0_5
XEONSCAL4 0x2853 PMON_COUNTER_CTRL_1_5
XEONSCAL4 0x2854 PMON_COUNTER_CTRL_2_5
XEONSCAL4 0x2855 PMON_COUNTER_CTRL_3_5
XEONSCAL4 0x2858 PMON_COUNTER_0_5
XEONSCAL4 0x2859 PMON_COUNTER_1_5
XEONSCAL4 0x285A PMON_COUNTER_2_5
XEONSCAL4 0x285B PMON_COUNTER_3_5
XEONSCAL4 0x2860 PMON_UNIT_CTRL_6
XEONSCAL4 0x2861 PMON_COUNTER_STATUS_6
XEONSCAL4 0x2862 PMON_COUNTER_CTRL_0_6
XEONSCAL4 0x2863 PMON_COUNTER_CTRL_1_6
XEONSCAL4 0x2864 PMON_COUNTER_CTRL_2_6
XEONSCAL4 0x2865 PMON_COUNTER_CTRL_3_6
XEONSCAL4 0x2868 PMON_COUNTER_0_6
XEONSCAL4 0x2869 PMON_COUNTER_1_6
XEONSCAL4 0x286A PMON_COUNTER_2_6
XEONSCAL4 0x286B PMON_COUNTER_3_6
XEONSCAL4 0x2870 PMON_UNIT_CTRL_7
XEONSCAL4 0x2871 PMON_COUNTER_STATUS_7
XEONSCAL4 0x2872 PMON_COUNTER_CTRL_0_7
XEONSCAL4 0x2873 PMON_COUNTER_CTRL_1_7
XEONSCAL4 0x2874 PMON_COUNTER_CTRL_2_7
XEONSCAL4 0x2875 PMON_COUNTER_CTRL_3_7
XEONSCAL4 0x2878 PMON_COUNTER_0_7
XEONSCAL4 0x2879 PMON_COUNTER_1_7
XEONSCAL4 0x287A PMON_COUNTER_2_7
XEONSCAL4 0x287B PMON_COUNTER_3_7
XEONSCAL4 0x2880 PMON_UNIT_CTRL_8
XEONSCAL4 0x2881 PMON_COUNTER_STATUS_8
XEONSCAL4 0x2882 PMON_COUNTER_CTRL_0_8
XEONSCAL4 0x2883 PMON_COUNTER_CTRL_1_8
XEONSCAL4 0x2884 PMON_COUNTER_CTRL_2_8
XEONSCAL4 0x2885 PMON_COUNTER_CTRL_3_8
XEONSCAL4 0x2888 PMON_COUNTER_0_8
XEONSCAL4 0x2889 PMON_COUNTER_1_8
XEONSCAL4 0x288A PMON_COUNTER_2_8
XEONSCAL4 0x288B PMON_COUNTER_3_8
XEONSCAL4 0x2890 PMON_UNIT_CTRL_9
XEONSCAL4 0x2891 PMON_COUNTER_STATUS_9
XEONSCAL4 0x2892 PMON_COUNTER_CTRL_0_9
XEONSCAL4 0x2893 PMON_COUNTER_CTRL_1_9
XEONSCAL4 0x2894 PMON_COUNTER_CTRL_2_9
XEONSCAL4 0x2895 PMON_COUNTER_CTRL_3_9
XEONSCAL4 0x2898 PMON_COUNTER_0_9
XEONSCAL4 0x2899 PMON_COUNTER_1_9
XEONSCAL4 0x289A PMON_COUNTER_2_9
XEONSCAL4 0x289B PMON_COUNTER_3_9
XEONSCAL4 0x28A0 PMON_UNIT_CTRL_10
XEONSCAL4 0x28A1 PMON_COUNTER_STATUS_10
XEONSCAL4 0x28A2 PMON_COUNTER_CTRL_0_10
XEONSCAL4 0x28A3 PMON_COUNTER_CTRL_1_10
XEONSCAL4 0x28A4 PMON_COUNTER_CTRL_2_10
XEONSCAL4 0x28A5 PMON_COUNTER_CTRL_3_10
XEONSCAL4 0x28A8 PMON_COUNTER_0_10
XEONSCAL4 0x28A9 PMON_COUNTER_1_10
XEONSCAL4 0x28AA PMON_COUNTER_2_10
XEONSCAL4 0x28AB PMON_COUNTER_3_10
XEONSCAL4 0x28B0 PMON_UNIT_CTRL_11
XEONSCAL4 0x28B1 PMON_COUNTER_STATUS_11
XEONSCAL4 0x28B2 PMON_COUNTER_CTRL_0_11
XEONSCAL4 0x28B3 PMON_COUNTER_CTRL_1_11
XEONSCAL4 0x28B4 PMON_COUNTER_CTRL_2_11
XEONSCAL4 0x28B5 PMON_COUNTER_CTRL_3_11
XEONSCAL4 0x28B8 PMON_COUNTER_0_11
XEONSCAL4 0x28B9 PMON_COUNTER_1_11
XEONSCAL4 0x28BA PMON_COUNTER_2_11
XEONSCAL4 0x28BB PMON_COUNTER_3_11
XEONSCAL4 0x28C0 PMON_UNIT_CTRL_12
XEONSCAL4 0x28C1 PMON_COUNTER_STATUS_12
XEONSCAL4 0x28C2 PMON_COUNTER_CTRL_0_12
XEONSCAL4 0x28C3 PMON_COUNTER_CTRL_1_12
XEONSCAL4 0x28C4 PMON_COUNTER_CTRL_2_12
XEONSCAL4 0x28C5 PMON_COUNTER_CTRL_3_12
XEONSCAL4 0x28C8 PMON_COUNTER_0_12
XEONSCAL4 0x28C9 PMON_COUNTER_1_12
XEONSCAL4 0x28CA PMON_COUNTER_2_12
XEONSCAL4 0x28CB PMON_COUNTER_3_12
XEONSCAL4 0x28D0 PMON_UNIT_CTRL_13
XEONSCAL4 0x28D1 PMON_COUNTER_STATUS_13
XEONSCAL4 0x28D2 PMON_COUNTER_CTRL_0_13
XEONSCAL4 0x28D3 PMON_COUNTER_CTRL_1_13
XEONSCAL4 0x28D4 PMON_COUNTER_CTRL_2_13
XEONSCAL4 0x28D5 PMON_COUNTER_CTRL_3_13
XEONSCAL4 0x28D8 PMON_COUNTER_0_13
XEONSCAL4 0x28D9 PMON_COUNTER_1_13
XEONSCAL4 0x28DA PMON_COUNTER_2_13
XEONSCAL4 0x28DB PMON_COUNTER_3_13
XEONSCAL4 0x28E0 PMON_UNIT_CTRL_14
XEONSCAL4 0x28E1 PMON_COUNTER_STATUS_14
XEONSCAL4 0x28E2 PMON_COUNTER_CTRL_0_14
XEONSCAL4 0x28E3 PMON_COUNTER_CTRL_1_14
XEONSCAL4 0x28E4 PMON_COUNTER_CTRL_2_14
XEONSCAL4 0x28E5 PMON_COUNTER_CTRL_3_14
XEONSCAL4 0x28E8 PMON_COUNTER_0_14
XEONSCAL4 0x28E9 PMON_COUNTER_1_14
XEONSCAL4 0x28EA PMON_COUNTER_2_14
XEONSCAL4 0x28EB PMON_COUNTER_3_14
XEONSCAL4 0x28F0 PMON_UNIT_CTRL_15
XEONSCAL4 0x28F1 PMON_COUNTER_STATUS_15
XEONSCAL4 0x28F2 PMON_COUNTER_CTRL_0_15
XEONSCAL4 0x28F3 PMON_COUNTER_CTRL_1_15
XEONSCAL4 0x28F4 PMON_COUNTER_CTRL_2_15
XEONSCAL4 0x28F5 PMON_COUNTER_CTRL_3_15
XEONSCAL4 0x28F8 PMON_COUNTER_0_15
XEONSCAL4 0x28F9 PMON_COUNTER_1_15
XEONSCAL4 0x28FA PMON_COUNTER_2_15
XEONSCAL4 0x28FB PMON_COUNTER_3_15
XEONSCAL4 0x2900 PMON_UNIT_CTRL_16
XEONSCAL4 0x2901 PMON_COUNTER_STATUS_16
XEONSCAL4 0x2902 PMON_COUNTER_CTRL_0_16
XEONSCAL4 0x2903 PMON_COUNTER_CTRL_1_16
XEONSCAL4 0x2904 PMON_COUNTER_CTRL_2_16
XEONSCAL4 0x2905 PMON_COUNTER_CTRL_3_16
XEONSCAL4 0x2908 PMON_COUNTER_0_16
XEONSCAL4 0x2909 PMON_COUNTER_1_16
XEONSCAL4 0x290A PMON_COUNTER_2_16
XEONSCAL4 0x290B PMON_COUNTER_3_16
XEONSCAL4 0x2910 PMON_UNIT_CTRL_17
XEONSCAL4 0x2911 PMON_COUNTER_STATUS_17
XEONSCAL4 0x2912 PMON_COUNTER_CTRL_0_17
XEONSCAL4 0x2913 PMON_COUNTER_CTRL_1_17
XEONSCAL4 0x2914 PMON_COUNTER_CTRL_2_17
XEONSCAL4 0x2915 PMON_COUNTER_CTRL_3_17
XEONSCAL4 0x2918 PMON_COUNTER_0_17
XEONSCAL4 0x2919 PMON_COUNTER_1_17
XEONSCAL4 0x291A PMON_COUNTER_2_17
XEONSCAL4 0x291B PMON_COUNTER_3_17
XEONSCAL4 0x2920 PMON_UNIT_CTRL_18
XEONSCAL4 0x2921 PMON_COUNTER_STATUS_18
XEONSCAL4 0x2922 PMON_COUNTER_CTRL_0_18
XEONSCAL4 0x2923 PMON_COUNTER_CTRL_1_18
XEONSCAL4 0x2924 PMON_COUNTER_CTRL_2_18
XEONSCAL4 0x2925 PMON_COUNTER_CTRL_3_18
XEONSCAL4 0x2928 PMON_COUNTER_0_18
XEONSCAL4 0x2929 PMON_COUNTER_1_18
XEONSCAL4 0x292A PMON_COUNTER_2_18
XEONSCAL4 0x292B PMON_COUNTER_3_18
XEONSCAL4 0x2930 PMON_UNIT_CTRL_19
XEONSCAL4 0x2931 PMON_COUNTER_STATUS_19
XEONSCAL4 0x2932 PMON_COUNTER_CTRL_0_19
XEONSCAL4 0x2933 PMON_COUNTER_CTRL_1_19
XEONSCAL4 0x2934 PMON_COUNTER_CTRL_2_19
XEONSCAL4 0x2935 PMON_COUNTER_CTRL_3_19
XEONSCAL4 0x2938 PMON_COUNTER_0_19
XEONSCAL4 0x2939 PMON_COUNTER_1_19
XEONSCAL4 0x293A PMON_COUNTER_2_19
XEONSCAL4 0x293B PMON_COUNTER_3_19
XEONSCAL4 0x2940 PMON_UNIT_CTRL_20
XEONSCAL4 0x2941 PMON_COUNTER_STATUS_20
XEONSCAL4 0x2942 PMON_COUNTER_CTRL_0_20
XEONSCAL4 0x2943 PMON_COUNTER_CTRL_1_20
XEONSCAL4 0x2944 PMON_COUNTER_CTRL_2_20
XEONSCAL4 0x2945 PMON_COUNTER_CTRL_3_20
XEONSCAL4 0x2948 PMON_COUNTER_0_20
XEONSCAL4 0x2949 PMON_COUNTER_1_20
XEONSCAL4 0x294A PMON_COUNTER_2_20
XEONSCAL4 0x294B PMON_COUNTER_3_20
XEONSCAL4 0x2950 PMON_UNIT_CTRL_21
XEONSCAL4 0x2951 PMON_COUNTER_STATUS_21
XEONSCAL4 0x2952 PMON_COUNTER_CTRL_0_21
XEONSCAL4 0x2953 PMON_COUNTER_CTRL_1_21
XEONSCAL4 0x2954 PMON_COUNTER_CTRL_2_21
XEONSCAL4 0x2955 PMON_COUNTER_CTRL_3_21
XEONSCAL4 0x2958 PMON_COUNTER_0_21
XEONSCAL4 0x2959 PMON_COUNTER_1_21
XEONSCAL4 0x295A PMON_COUNTER_2_21
XEONSCAL4 0x295B PMON_COUNTER_3_21
XEONSCAL4 0x2960 PMON_UNIT_CTRL_22
XEONSCAL4 0x2961 PMON_COUNTER_STATUS_22
XEONSCAL4 0x2962 PMON_COUNTER_CTRL_0_22
XEONSCAL4 0x2963 PMON_COUNTER_CTRL_1_22
XEONSCAL4 0x2964 PMON_COUNTER_CTRL_2_22
XEONSCAL4 0x2965 PMON_COUNTER_CTRL_3_22
XEONSCAL4 0x2968 PMON_COUNTER_0_22
XEONSCAL4 0x2969 PMON_COUNTER_1_22
XEONSCAL4 0x296A PMON_COUNTER_2_22
XEONSCAL4 0x296B PMON_COUNTER_3_22
XEONSCAL4 0x2970 PMON_UNIT_CTRL_23
XEONSCAL4 0x2971 PMON_COUNTER_STATUS_23
XEONSCAL4 0x2972 PMON_COUNTER_CTRL_0_23
XEONSCAL4 0x2973 PMON_COUNTER_CTRL_1_23
XEONSCAL4 0x2974 PMON_COUNTER_CTRL_2_23
XEONSCAL4 0x2975 PMON_COUNTER_CTRL_3_23
XEONSCAL4 0x2978 PMON_COUNTER_0_23
XEONSCAL4 0x2979 PMON_COUNTER_1_23
XEONSCAL4 0x297A PMON_COUNTER_2_23
XEONSCAL4 0x297B PMON_COUNTER_3_23
XEONSCAL4 0x2980 PMON_UNIT_CTRL_24
XEONSCAL4 0x2981 PMON_COUNTER_STATUS_24
XEONSCAL4 0x2982 PMON_COUNTER_CTRL_0_24
XEONSCAL4 0x2983 PMON_COUNTER_CTRL_1_24
XEONSCAL4 0x2984 PMON_COUNTER_CTRL_2_24
XEONSCAL4 0x2985 PMON_COUNTER_CTRL_3_24
XEONSCAL4 0x2988 PMON_COUNTER_0_24
XEONSCAL4 0x2989 PMON_COUNTER_1_24
XEONSCAL4 0x298A PMON_COUNTER_2_24
XEONSCAL4 0x298B PMON_COUNTER_3_24
XEONSCAL4 0x2990 PMON_UNIT_CTRL_25
XEONSCAL4 0x2991 PMON_COUNTER_STATUS_25
XEONSCAL4 0x2992 PMON_COUNTER_CTRL_0_25
XEONSCAL4 0x2993 PMON_COUNTER_CTRL_1_25
XEONSCAL4 0x2994 PMON_COUNTER_CTRL_2_25
XEONSCAL4 0x2995 PMON_COUNTER_CTRL_3_25
XEONSCAL4 0x2998 PMON_COUNTER_0_25
XEONSCAL4 0x2999 PMON_COUNTER_1_25
XEONSCAL4 0x299A PMON_COUNTER_2_25
XEONSCAL4 0x299B PMON_COUNTER_3_25
XEONSCAL4 0x29A0 PMON_UNIT_CTRL_26
XEONSCAL4 0x29A1 PMON_COUNTER_STATUS_26
XEONSCAL4 0x29A2 PMON_COUNTER_CTRL_0_26
XEONSCAL4 0x29A3 PMON_COUNTER_CTRL_1_26
XEONSCAL4 0x29A4 PMON_COUNTER_CTRL_2_26
XEONSCAL4 0x29A5 PMON_COUNTER_CTRL_3_26
XEONSCAL4 0x29A8 PMON_COUNTER_0_26
XEONSCAL4 0x29A9 PMON_COUNTER_1_26
XEONSCAL4 0x29AA PMON_COUNTER_2_26
XEONSCAL4 0x29AB PMON_COUNTER_3_26
XEONSCAL4 0x29B0 PMON_UNIT_CTRL_27
XEONSCAL4 0x29B1 PMON_COUNTER_STATUS_27
XEONSCAL4 0x29B2 PMON_COUNTER_CTRL_0_27
XEONSCAL4 0x29B3 PMON_COUNTER_CTRL_1_27
XEONSCAL4 0x29B4 PMON_COUNTER_CTRL_2_27
XEONSCAL4 0x29B5 PMON_COUNTER_CTRL_3_27
XEONSCAL4 0x29B8 PMON_COUNTER_0_27
XEONSCAL4 0x29B9 PMON_COUNTER_1_27
XEONSCAL4 0x29BA PMON_COUNTER_2_27
XEONSCAL4 0x29BB PMON_COUNTER_3_27
XEONSCAL4 0x29C0 PMON_UNIT_CTRL_28
XEONSCAL4 0x29C1 PMON_COUNTER_STATUS_28
XEONSCAL4 0x29C2 PMON_COUNTER_CTRL_0_28
XEONSCAL4 0x29C3 PMON_COUNTER_CTRL_1_28
XEONSCAL4 0x29C4 PMON_COUNTER_CTRL_2_28
XEONSCAL4 0x29C5 PMON_COUNTER_CTRL_3_28
XEONSCAL4 0x29C8 PMON_COUNTER_0_28
XEONSCAL4 0x29C9 PMON_COUNTER_1_28
XEONSCAL4 0x29CA PMON_COUNTER_2_28
XEONSCAL4 0x29CB PMON_COUNTER_3_28
XEONSCAL4 0x29D0 PMON_UNIT_CTRL_29
XEONSCAL4 0x29D1 PMON_COUNTER_STATUS_29
XEONSCAL4 0x29D2 PMON_COUNTER_CTRL_0_29
XEONSCAL4 0x29D3 PMON_COUNTER_CTRL_1_29
XEONSCAL4 0x29D4 PMON_COUNTER_CTRL_2_29
XEONSCAL4 0x29D5 PMON_COUNTER_CTRL_3_29
XEONSCAL4 0x29D8 PMON_COUNTER_0_29
XEONSCAL4 0x29D9 PMON_COUNTER_1_29
XEONSCAL4 0x29DA PMON_COUNTER_2_29
XEONSCAL4 0x29DB PMON_COUNTER_3_29
XEONSCAL4 0x29E0 PMON_UNIT_CTRL_30
XEONSCAL4 0x29E1 PMON_COUNTER_STATUS_30
XEONSCAL4 0x29E2 PMON_COUNTER_CTRL_0_30
XEONSCAL4 0x29E3 PMON_COUNTER_CTRL_1_30
XEONSCAL4 0x29E4 PMON_COUNTER_CTRL_2_30
XEONSCAL4 0x29E5 PMON_COUNTER_CTRL_3_30
XEONSCAL4 0x29E8 PMON_COUNTER_0_30
XEONSCAL4 0x29E9 PMON_COUNTER_1_30
XEONSCAL4 0x29EA PMON_COUNTER_2_30
XEONSCAL4 0x29EB PMON_COUNTER_3_30
XEONSCAL4 0x29F0 PMON_UNIT_CTRL_31
XEONSCAL4 0x29F1 PMON_COUNTER_STATUS_31
XEONSCAL4 0x29F2 PMON_COUNTER_CTRL_0_31
XEONSCAL4 0x29F3 PMON_COUNTER_CTRL_1_31
XEONSCAL4 0x29F4 PMON_COUNTER_CTRL_2_31
XEONSCAL4 0x29F5 PMON_COUNTER_CTRL_3_31
XEONSCAL4 0x29F8 PMON_COUNTER_0_31
XEONSCAL4 0x29F9 PMON_COUNTER_1_31
XEONSCAL4 0x29FA PMON_COUNTER_2_31
XEONSCAL4 0x29FB PMON_COUNTER_3_31
XEONSCAL4 0x2A00 PMON_UNIT_CTRL_32
XEONSCAL4 0x2A01 PMON_COUNTER_STATUS_32
XEONSCAL4 0x2A02 PMON_COUNTER_CTRL_0_32
XEONSCAL4 0x2A03 PMON_COUNTER_CTRL_1_32
XEONSCAL4 0x2A04 PMON_COUNTER_CTRL_2_32
XEONSCAL4 0x2A05 PMON_COUNTER_CTRL_3_32
XEONSCAL4 0x2A08 PMON_COUNTER_0_32
XEONSCAL4 0x2A09 PMON_COUNTER_1_32
XEONSCAL4 0x2A0A PMON_COUNTER_2_32
XEONSCAL4 0x2A0B PMON_COUNTER_3_32
XEONSCAL4 0x2A10 PMON_UNIT_CTRL_33
XEONSCAL4 0x2A11 PMON_COUNTER_STATUS_33
XEONSCAL4 0x2A12 PMON_COUNTER_CTRL_0_33
XEONSCAL4 0x2A13 PMON_COUNTER_CTRL_1_33
XEONSCAL4 0x2A14 PMON_COUNTER_CTRL_2_33
XEONSCAL4 0x2A15 PMON_COUNTER_CTRL_3_33
XEONSCAL4 0x2A18 PMON_COUNTER_0_33
XEONSCAL4 0x2A19 PMON_COUNTER_1_33
XEONSCAL4 0x2A1A PMON_COUNTER_2_33
XEONSCAL4 0x2A1B PMON_COUNTER_3_33
XEONSCAL4 0x2A20 PMON_UNIT_CTRL_34
XEONSCAL4 0x2A21 PMON_COUNTER_STATUS_34
XEONSCAL4 0x2A22 PMON_COUNTER_CTRL_0_34
XEONSCAL4 0x2A23 PMON_COUNTER_CTRL_1_34
XEONSCAL4 0x2A24 PMON_COUNTER_CTRL_2_34
XEONSCAL4 0x2A25 PMON_COUNTER_CTRL_3_34
XEONSCAL4 0x2A28 PMON_COUNTER_0_34
XEONSCAL4 0x2A29 PMON_COUNTER_1_34
XEONSCAL4 0x2A2A PMON_COUNTER_2_34
XEONSCAL4 0x2A2B PMON_COUNTER_3_34
XEONSCAL4 0x2A30 PMON_UNIT_CTRL_35
XEONSCAL4 0x2A31 PMON_COUNTER_STATUS_35
XEONSCAL4 0x2A32 PMON_COUNTER_CTRL_0_35
XEONSCAL4 0x2A33 PMON_COUNTER_CTRL_1_35
XEONSCAL4 0x2A34 PMON_COUNTER_CTRL_2_35
XEONSCAL4 0x2A35 PMON_COUNTER_CTRL_3_35
XEONSCAL4 0x2A38 PMON_COUNTER_0_35
XEONSCAL4 0x2A39 PMON_COUNTER_1_35
XEONSCAL4 0x2A3A PMON_COUNTER_2_35
XEONSCAL4 0x2A3B PMON_COUNTER_3_35
XEONSCAL4 0x2A40 PMON_UNIT_CTRL_36
XEONSCAL4 0x2A41 PMON_COUNTER_STATUS_36
XEONSCAL4 0x2A42 PMON_COUNTER_CTRL_0_36
XEONSCAL4 0x2A43 PMON_COUNTER_CTRL_1_36
XEONSCAL4 0x2A44 PMON_COUNTER_CTRL_2_36
XEONSCAL4 0x2A45 PMON_COUNTER_CTRL_3_36
XEONSCAL4 0x2A48 PMON_COUNTER_0_36
XEONSCAL4 0x2A49 PMON_COUNTER_1_36
XEONSCAL4 0x2A4A PMON_COUNTER_2_36
XEONSCAL4 0x2A4B PMON_COUNTER_3_36
XEONSCAL4 0x2A50 PMON_UNIT_CTRL_37
XEONSCAL4 0x2A51 PMON_COUNTER_STATUS_37
XEONSCAL4 0x2A52 PMON_COUNTER_CTRL_0_37
XEONSCAL4 0x2A53 PMON_COUNTER_CTRL_1_37
XEONSCAL4 0x2A54 PMON_COUNTER_CTRL_2_37
XEONSCAL4 0x2A55 PMON_COUNTER_CTRL_3_37
XEONSCAL4 0x2A58 PMON_COUNTER_0_37
XEONSCAL4 0x2A59 PMON_COUNTER_1_37
XEONSCAL4 0x2A5A PMON_COUNTER_2_37
XEONSCAL4 0x2A5B PMON_COUNTER_3_37
XEONSCAL4 0x2A60 PMON_UNIT_CTRL_38
XEONSCAL4 0x2A61 PMON_COUNTER_STATUS_38
XEONSCAL4 0x2A62 PMON_COUNTER_CTRL_0_38
XEONSCAL4 0x2A63 PMON_COUNTER_CTRL_1_38
XEONSCAL4 0x2A64 PMON_COUNTER_CTRL_2_38
XEONSCAL4 0x2A65 PMON_COUNTER_CTRL_3_38
XEONSCAL4 0x2A68 PMON_COUNTER_0_38
XEONSCAL4 0x2A69 PMON_COUNTER_1_38
XEONSCAL4 0x2A6A PMON_COUNTER_2_38
XEONSCAL4 0x2A6B PMON_COUNTER_3_38
XEONSCAL4 0x2A70 PMON_UNIT_CTRL_39
XEONSCAL4 0x2A71 PMON_COUNTER_STATUS_39
XEONSCAL4 0x2A72 PMON_COUNTER_CTRL_0_39
XEONSCAL4 0x2A73 PMON_COUNTER_CTRL_1_39
XEONSCAL4 0x2A74 PMON_COUNTER_CTRL_2_39
XEONSCAL4 0x2A75 PMON_COUNTER_CTRL_3_39
XEONSCAL4 0x2A78 PMON_COUNTER_0_39
XEONSCAL4 0x2A79 PMON_COUNTER_1_39
XEONSCAL4 0x2A7A PMON_COUNTER_2_39
XEONSCAL4 0x2A7B PMON_COUNTER_3_39
XEONSCAL4 0x2FC0 PCUPMONUNITCTRL
XEONSCAL4 0x2FC1 PCUPMONUNITSTATUS
XEONSCAL4 0x2FC2 PCUPMONCNTRCFG_0
XEONSCAL4 0x2FC3 PCUPMONCNTRCFG_1
XEONSCAL4 0x2FC4 PCUPMONCNTRCFG_2
XEONSCAL4 0x2FC5 PCUPMONCNTRCFG_3
XEONSCAL4 0x2FC8 PCUPMONCNTR_0
XEONSCAL4 0x2FC9 PCUPMONCNTR_1
XEONSCAL4 0x2FCA PCUPMONCNTR_2
XEONSCAL4 0x2FCB PCUPMONCNTR_3
XEONSCAL4 0x2FCE PCUPMONFILTER
XEONSCAL4 0x2FD0 UNIT_CONTROL_REGISTER
XEONSCAL4 0x2FD2 PERFEVTSEL0_0
XEONSCAL4 0x2FD3 PERFEVTSEL1_1
XEONSCAL4 0x2FD8 PERFCTR0_0
XEONSCAL4 0x2FD9 PERFCTR1_1
XEONSCAL4 0x2FDA PERFCTR0
XEONSCAL4 0x2FDB PERFCTR1
XEONSCAL4 0x2FDD PERF_CTRL
XEONSCAL4 0x2FDE NCUPMONCTLFIX
XEONSCAL4 0x2FDF NCUPMONCTRFX
XEONSCAL4 0x2FF0 NCUPMONGLCTRL  # Global PerfMon
XEONSCAL4 0x2FF1 NCUPMONGLCTRL2
XEONSCAL4 0x2FF2 NCUPMONGLSTS0
XEONSCAL4 0x2FF3 NCUPMONGLSTS1
XEONSCAL4 0x2FF4 NCUPMONGLSTS2
XEONSCAL4 0x2FF5 NCUPMONGLSTS3
XEONSCAL4 0x2FFB UBOX_PMON_EVENT_NCDEC_MASK_CTL0
XEONSCAL4 0x2FFC UBOX_PMON_EVENT_NCDEC_MASK_CTL1
XEONSCAL4 0x2FFD UBOX_PMON_EVENT_NCDEC_MATCH_ADDR
XEONSCAL4 0x2FFF NCUPMONCTRLGLCTR

XEONSCAL4 0x3000 IIOPMONUNITCTRL_0
XEONSCAL4 0x3001 IIOPMONUNITSTATUS_0
XEONSCAL4 0x3002 IOPMONCNTRCFG_0_0
XEONSCAL4 0x3003 IOPMONCNTRCFG_1_0
XEONSCAL4 0x3004 IOPMONCNTRCFG_2_0
XEONSCAL4 0x3005 IOPMONCNTRCFG_3_0
XEONSCAL4 0x3010 IIOPMONUNITCTRL_1
XEONSCAL4 0x3011 IIOPMONUNITSTATUS_1
XEONSCAL4 0x3012 IOPMONCNTRCFG_0_1
XEONSCAL4 0x3013 IOPMONCNTRCFG_1_1
XEONSCAL4 0x3014 IOPMONCNTRCFG_2_1
XEONSCAL4 0x3015 IOPMONCNTRCFG_3_1
XEONSCAL4 0x3020 IIOPMONUNITCTRL_2
XEONSCAL4 0x3021 IIOPMONUNITSTATUS_2
XEONSCAL4 0x3022 IOPMONCNTRCFG_0_2
XEONSCAL4 0x3023 IOPMONCNTRCFG_1_2
XEONSCAL4 0x3024 IOPMONCNTRCFG_2_2
XEONSCAL4 0x3025 IOPMONCNTRCFG_3_2
XEONSCAL4 0x3030 IIOPMONUNITCTRL_3
XEONSCAL4 0x3031 IIOPMONUNITSTATUS_3
XEONSCAL4 0x3032 IOPMONCNTRCFG_0_3
XEONSCAL4 0x3033 IOPMONCNTRCFG_1_3
XEONSCAL4 0x3034 IOPMONCNTRCFG_2_3
XEONSCAL4 0x3035 IOPMONCNTRCFG_3_3
XEONSCAL4 0x3040 IIOPMONUNITCTRL_4
XEONSCAL4 0x3041 IIOPMONUNITSTATUS_4
XEONSCAL4 0x3042 IOPMONCNTRCFG_0_4
XEONSCAL4 0x3043 IOPMONCNTRCFG_1_4
XEONSCAL4 0x3044 IOPMONCNTRCFG_2_4
XEONSCAL4 0x3045 IOPMONCNTRCFG_3_4
XEONSCAL4 0x3050 IIOPMONUNITCTRL_5
XEONSCAL4 0x3051 IIOPMONUNITSTATUS_5
XEONSCAL4 0x3052 IOPMONCNTRCFG_0_5
XEONSCAL4 0x3053 IOPMONCNTRCFG_1_5
XEONSCAL4 0x3054 IOPMONCNTRCFG_2_5
XEONSCAL4 0x3055 IOPMONCNTRCFG_3_5
XEONSCAL4 0x3060 IIOPMONUNITCTRL_6
XEONSCAL4 0x3061 IIOPMONUNITSTATUS_6
XEONSCAL4 0x3062 IOPMONCNTRCFG_0_6
XEONSCAL4 0x3063 IOPMONCNTRCFG_1_6
XEONSCAL4 0x3064 IOPMONCNTRCFG_2_6
XEONSCAL4 0x3065 IOPMONCNTRCFG_3_6
XEONSCAL4 0x3070 IIOPMONUNITCTRL_7
XEONSCAL4 0x3071 IIOPMONUNITSTATUS_7
XEONSCAL4 0x3072 IOPMONCNTRCFG_0_7
XEONSCAL4 0x3073 IOPMONCNTRCFG_1_7
XEONSCAL4 0x3074 IOPMONCNTRCFG_2_7
XEONSCAL4 0x3075 IOPMONCNTRCFG_3_7
XEONSCAL4 0x3080 IIOPMONUNITCTRL_8
XEONSCAL4 0x3081 IIOPMONUNITSTATUS_8
XEONSCAL4 0x3082 IOPMONCNTRCFG_0_8
XEONSCAL4 0x3083 IOPMONCNTRCFG_1_8
XEONSCAL4 0x3084 IOPMONCNTRCFG_2_8
XEONSCAL4 0x3085 IOPMONCNTRCFG_3_8
XEONSCAL4 0x3090 IIOPMONUNITCTRL_9
XEONSCAL4 0x3091 IIOPMONUNITSTATUS_9
XEONSCAL4 0x3092 IOPMONCNTRCFG_0_9
XEONSCAL4 0x3093 IOPMONCNTRCFG_1_9
XEONSCAL4 0x3094 IOPMONCNTRCFG_2_9
XEONSCAL4 0x3095 IOPMONCNTRCFG_3_9
XEONSCAL4 0x30A0 IIOPMONUNITCTRL_10
XEONSCAL4 0x30A1 IIOPMONUNITSTATUS_10
XEONSCAL4 0x30A2 IOPMONCNTRCFG_0_10
XEONSCAL4 0x30A3 IOPMONCNTRCFG_1_10
XEONSCAL4 0x30A4 IOPMONCNTRCFG_2_10
XEONSCAL4 0x30A5 IOPMONCNTRCFG_3_10
XEONSCAL4 0x30B0 IIOPMONUNITCTRL_11
XEONSCAL4 0x30B1 IIOPMONUNITSTATUS_11
XEONSCAL4 0x30B2 IOPMONCNTRCFG_0_11
XEONSCAL4 0x30B3 IOPMONCNTRCFG_1_11
XEONSCAL4 0x30B4 IOPMONCNTRCFG_2_11
XEONSCAL4 0x30B5 IOPMONCNTRCFG_3_11
XEONSCAL4 0x3202 M2PPMONCNTRCFG_0_0
XEONSCAL4 0x3203 M2PPMONCNTRCFG_1_0
XEONSCAL4 0x3204 M2PPMONCNTRCFG_2_0
XEONSCAL4 0x3205 M2PPMONCNTRCFG_3_0
XEONSCAL4 0x320A IIOPMONCNTR_2_0
XEONSCAL4 0x320B IIOPMONCNTR_3_0
XEONSCAL4 0x3212 M2PPMONCNTRCFG_0_1
XEONSCAL4 0x3213 M2PPMONCNTRCFG_1_1
XEONSCAL4 0x3214 M2PPMONCNTRCFG_2_1
XEONSCAL4 0x3215 M2PPMONCNTRCFG_3_1
XEONSCAL4 0x321A IIOPMONCNTR_2_1
XEONSCAL4 0x321B IIOPMONCNTR_3_1
XEONSCAL4 0x3222 M2PPMONCNTRCFG_0_2
XEONSCAL4 0x3223 M2PPMONCNTRCFG_1_2
XEONSCAL4 0x3224 M2PPMONCNTRCFG_2_2
XEONSCAL4 0x3225 M2PPMONCNTRCFG_3_2
XEONSCAL4 0x322A IIOPMONCNTR_2_2
XEONSCAL4 0x322B IIOPMONCNTR_3_2
XEONSCAL4 0x3232 M2PPMONCNTRCFG_0_3
XEONSCAL4 0x3233 M2PPMONCNTRCFG_1_3
XEONSCAL4 0x3234 M2PPMONCNTRCFG_2_3
XEONSCAL4 0x3235 M2PPMONCNTRCFG_3_3
XEONSCAL4 0x323A IIOPMONCNTR_2_3
XEONSCAL4 0x323B IIOPMONCNTR_3_3
XEONSCAL4 0x3242 M2PPMONCNTRCFG_0_4
XEONSCAL4 0x3243 M2PPMONCNTRCFG_1_4
XEONSCAL4 0x3244 M2PPMONCNTRCFG_2_4
XEONSCAL4 0x3245 M2PPMONCNTRCFG_3_4
XEONSCAL4 0x324A IIOPMONCNTR_2_4
XEONSCAL4 0x324B IIOPMONCNTR_3_4
XEONSCAL4 0x3252 M2PPMONCNTRCFG_0_5
XEONSCAL4 0x3253 M2PPMONCNTRCFG_1_5
XEONSCAL4 0x3254 M2PPMONCNTRCFG_2_5
XEONSCAL4 0x3255 M2PPMONCNTRCFG_3_5
XEONSCAL4 0x325A IIOPMONCNTR_2_5
XEONSCAL4 0x325B IIOPMONCNTR_3_5
XEONSCAL4 0x3262 M2PPMONCNTRCFG_0_6
XEONSCAL4 0x3263 M2PPMONCNTRCFG_1_6
XEONSCAL4 0x3264 M2PPMONCNTRCFG_2_6
XEONSCAL4 0x3265 M2PPMONCNTRCFG_3_6
XEONSCAL4 0x326A IIOPMONCNTR_2_6
XEONSCAL4 0x326B IIOPMONCNTR_3_6
XEONSCAL4 0x3272 M2PPMONCNTRCFG_0_7
XEONSCAL4 0x3273 M2PPMONCNTRCFG_1_7
XEONSCAL4 0x3274 M2PPMONCNTRCFG_2_7
XEONSCAL4 0x3275 M2PPMONCNTRCFG_3_7
XEONSCAL4 0x327A IIOPMONCNTR_2_7
XEONSCAL4 0x327B IIOPMONCNTR_3_7
XEONSCAL4 0x3282 M2PPMONCNTRCFG_0_8
XEONSCAL4 0x3283 M2PPMONCNTRCFG_1_8
XEONSCAL4 0x3284 M2PPMONCNTRCFG_2_8
XEONSCAL4 0x3285 M2PPMONCNTRCFG_3_8
XEONSCAL4 0x328A IIOPMONCNTR_2_8
XEONSCAL4 0x328B IIOPMONCNTR_3_8
XEONSCAL4 0x3292 M2PPMONCNTRCFG_0_9
XEONSCAL4 0x3293 M2PPMONCNTRCFG_1_9
XEONSCAL4 0x3294 M2PPMONCNTRCFG_2_9
XEONSCAL4 0x3295 M2PPMONCNTRCFG_3_9
XEONSCAL4 0x329A IIOPMONCNTR_2_9
XEONSCAL4 0x329B IIOPMONCNTR_3_9
XEONSCAL4 0x32A2 M2PPMONCNTRCFG_0_10
XEONSCAL4 0x32A3 M2PPMONCNTRCFG_1_10
XEONSCAL4 0x32A4 M2PPMONCNTRCFG_2_10
XEONSCAL4 0x32A5 M2PPMONCNTRCFG_3_10
XEONSCAL4 0x32AA IIOPMONCNTR_2_10
XEONSCAL4 0x32AB IIOPMONCNTR_3_10
XEONSCAL4 0x32B2 M2PPMONCNTRCFG_0_11
XEONSCAL4 0x32B3 M2PPMONCNTRCFG_1_11
XEONSCAL4 0x32B4 M2PPMONCNTRCFG_2_11
XEONSCAL4 0x32B5 M2PPMONCNTRCFG_3_11
XEONSCAL4 0x32BA IIOPMONCNTR_2_11
XEONSCAL4 0x32BB IIOPMONCNTR_3_11
XEONSCAL4 0x3402 IRPPMONCNTRCFG_0_0
XEONSCAL4 0x3403 IRPPMONCNTRCFG_1_0
XEONSCAL4 0x3408 IIOPMONCNTR_0_0
XEONSCAL4 0x3409 IIOPMONCNTR_1_0
XEONSCAL4 0x340E IIOPMONFRCNTRCLK_0
XEONSCAL4 0x3412 IRPPMONCNTRCFG_0_1
XEONSCAL4 0x3413 IRPPMONCNTRCFG_1_1
XEONSCAL4 0x3418 IIOPMONCNTR_0_1
XEONSCAL4 0x3419 IIOPMONCNTR_1_1
XEONSCAL4 0x341E IIOPMONFRCNTRCLK_1
XEONSCAL4 0x3422 IRPPMONCNTRCFG_0_2
XEONSCAL4 0x3423 IRPPMONCNTRCFG_1_2
XEONSCAL4 0x3428 IIOPMONCNTR_0_2
XEONSCAL4 0x3429 IIOPMONCNTR_1_2
XEONSCAL4 0x342E IIOPMONFRCNTRCLK_2
XEONSCAL4 0x3432 IRPPMONCNTRCFG_0_3
XEONSCAL4 0x3433 IRPPMONCNTRCFG_1_3
XEONSCAL4 0x3438 IIOPMONCNTR_0_3
XEONSCAL4 0x3439 IIOPMONCNTR_1_3
XEONSCAL4 0x343E IIOPMONFRCNTRCLK_3
XEONSCAL4 0x3442 IRPPMONCNTRCFG_0_4
XEONSCAL4 0x3443 IRPPMONCNTRCFG_1_4
XEONSCAL4 0x3448 IIOPMONCNTR_0_4
XEONSCAL4 0x3449 IIOPMONCNTR_1_4
XEONSCAL4 0x344E IIOPMONFRCNTRCLK_4
XEONSCAL4 0x3452 IRPPMONCNTRCFG_0_5
XEONSCAL4 0x3453 IRPPMONCNTRCFG_1_5
XEONSCAL4 0x3458 IIOPMONCNTR_0_5
XEONSCAL4 0x3459 IIOPMONCNTR_1_5
XEONSCAL4 0x345E IIOPMONFRCNTRCLK_5
XEONSCAL4 0x3462 IRPPMONCNTRCFG_0_6
XEONSCAL4 0x3463 IRPPMONCNTRCFG_1_6
XEONSCAL4 0x3468 IIOPMONCNTR_0_6
XEONSCAL4 0x3469 IIOPMONCNTR_1_6
XEONSCAL4 0x346E IIOPMONFRCNTRCLK_6
XEONSCAL4 0x3472 IRPPMONCNTRCFG_0_7
XEONSCAL4 0x3473 IRPPMONCNTRCFG_1_7
XEONSCAL4 0x3478 IIOPMONCNTR_0_7
XEONSCAL4 0x3479 IIOPMONCNTR_1_7
XEONSCAL4 0x347E IIOPMONFRCNTRCLK_7
XEONSCAL4 0x3482 IRPPMONCNTRCFG_0_8
XEONSCAL4 0x3483 IRPPMONCNTRCFG_1_8
XEONSCAL4 0x3488 IIOPMONCNTR_0_8
XEONSCAL4 0x3489 IIOPMONCNTR_1_8
XEONSCAL4 0x348E IIOPMONFRCNTRCLK_8
XEONSCAL4 0x3492 IRPPMONCNTRCFG_0_9
XEONSCAL4 0x3493 IRPPMONCNTRCFG_1_9
XEONSCAL4 0x3498 IIOPMONCNTR_0_9
XEONSCAL4 0x3499 IIOPMONCNTR_1_9
XEONSCAL4 0x349E IIOPMONFRCNTRCLK_9
XEONSCAL4 0x34A2 IRPPMONCNTRCFG_0_10
XEONSCAL4 0x34A3 IRPPMONCNTRCFG_1_10
XEONSCAL4 0x34A8 IIOPMONCNTR_0_10
XEONSCAL4 0x34A9 IIOPMONCNTR_1_10
XEONSCAL4 0x34AE IIOPMONFRCNTRCLK_10
XEONSCAL4 0x34B2 IRPPMONCNTRCFG_0_11
XEONSCAL4 0x34B3 IRPPMONCNTRCFG_1_11
XEONSCAL4 0x34B8 IIOPMONCNTR_0_11
XEONSCAL4 0x34B9 IIOPMONCNTR_1_11
XEONSCAL4 0x34BE IIOPMONFRCNTRCLK_11
XEONSCAL4 0x3800 IIOPMONFRCNTR_0
XEONSCAL4 0x3801 IIOPMONFRCNTR_1
XEONSCAL4 0x3802 IIOPMONFRCNTR_2
XEONSCAL4 0x3803 IIOPMONFRCNTR_3
XEONSCAL4 0x3804 IIOPMONFRCNTR_4
XEONSCAL4 0x3805 IIOPMONFRCNTR_5
XEONSCAL4 0x3806 IIOPMONFRCNTR_6
XEONSCAL4 0x3807 IIOPMONFRCNTR_7
XEONSCAL4 0x3808 IIOPMONFRCNTR_8
XEONSCAL4 0x3809 IIOPMONFRCNTR_9
XEONSCAL4 0x380A IIOPMONFRCNTR_10
XEONSCAL4 0x380B IIOPMONFRCNTR_11
XEONSCAL4 0x380C IIOPMONFRCNTR_12
XEONSCAL4 0x380D IIOPMONFRCNTR_13
XEONSCAL4 0x380E IIOPMONFRCNTR_14
XEONSCAL4 0x380F IIOPMONFRCNTR_15
XEONSCAL4 0x3810 IIOPMONFRCNTR_16
XEONSCAL4 0x3811 IIOPMONFRCNTR_17
XEONSCAL4 0x3812 IIOPMONFRCNTR_18
XEONSCAL4 0x3813 IIOPMONFRCNTR_19
XEONSCAL4 0x3814 IIOPMONFRCNTR_20
XEONSCAL4 0x3815 IIOPMONFRCNTR_21
XEONSCAL4 0x3816 IIOPMONFRCNTR_22
XEONSCAL4 0x3817 IIOPMONFRCNTR_23
XEONSCAL4 0x3818 IIOPMONFRCNTR_24
XEONSCAL4 0x3819 IIOPMONFRCNTR_25
XEONSCAL4 0x381A IIOPMONFRCNTR_26
XEONSCAL4 0x381B IIOPMONFRCNTR_27
XEONSCAL4 0x381C IIOPMONFRCNTR_28
XEONSCAL4 0x381D IIOPMONFRCNTR_29
XEONSCAL4 0x381E IIOPMONFRCNTR_30
XEONSCAL4 0x381F IIOPMONFRCNTR_31
XEONSCAL4 0x3820 IIOPMONFRCNTR_32
XEONSCAL4 0x3821 IIOPMONFRCNTR_33
XEONSCAL4 0x3822 IIOPMONFRCNTR_34
XEONSCAL4 0x3823 IIOPMONFRCNTR_35
XEONSCAL4 0x3824 IIOPMONFRCNTR_36
XEONSCAL4 0x3825 IIOPMONFRCNTR_37
XEONSCAL4 0x3826 IIOPMONFRCNTR_38
XEONSCAL4 0x3827 IIOPMONFRCNTR_39
XEONSCAL4 0x3828 IIOPMONFRCNTR_40
XEONSCAL4 0x3829 IIOPMONFRCNTR_41
XEONSCAL4 0x382A IIOPMONFRCNTR_42
XEONSCAL4 0x382B IIOPMONFRCNTR_43
XEONSCAL4 0x382C IIOPMONFRCNTR_44
XEONSCAL4 0x382D IIOPMONFRCNTR_45
XEONSCAL4 0x382E IIOPMONFRCNTR_46
XEONSCAL4 0x382F IIOPMONFRCNTR_47
XEONSCAL4 0x3830 IIOPMONFRCNTR_48
XEONSCAL4 0x3831 IIOPMONFRCNTR_49
XEONSCAL4 0x3832 IIOPMONFRCNTR_50
XEONSCAL4 0x3833 IIOPMONFRCNTR_51
XEONSCAL4 0x3834 IIOPMONFRCNTR_52
XEONSCAL4 0x3835 IIOPMONFRCNTR_53
XEONSCAL4 0x3836 IIOPMONFRCNTR_54
XEONSCAL4 0x3837 IIOPMONFRCNTR_55
XEONSCAL4 0x3838 IIOPMONFRCNTR_56
XEONSCAL4 0x3839 IIOPMONFRCNTR_57
XEONSCAL4 0x383A IIOPMONFRCNTR_58
XEONSCAL4 0x383B IIOPMONFRCNTR_59
XEONSCAL4 0x383C IIOPMONFRCNTR_60
XEONSCAL4 0x383D IIOPMONFRCNTR_61
XEONSCAL4 0x383E IIOPMONFRCNTR_62
XEONSCAL4 0x383F IIOPMONFRCNTR_63
XEONSCAL4 0x3840 IIOPMONFRCNTR_64
XEONSCAL4 0x3841 IIOPMONFRCNTR_65
XEONSCAL4 0x3842 IIOPMONFRCNTR_66
XEONSCAL4 0x3843 IIOPMONFRCNTR_67
XEONSCAL4 0x3844 IIOPMONFRCNTR_68
XEONSCAL4 0x3845 IIOPMONFRCNTR_69
XEONSCAL4 0x3846 IIOPMONFRCNTR_70
XEONSCAL4 0x3847 IIOPMONFRCNTR_71
XEONSCAL4 0x3848 IIOPMONFRCNTR_72
XEONSCAL4 0x3849 IIOPMONFRCNTR_73
XEONSCAL4 0x384A IIOPMONFRCNTR_74
XEONSCAL4 0x384B IIOPMONFRCNTR_75
XEONSCAL4 0x384C IIOPMONFRCNTR_76
XEONSCAL4 0x384D IIOPMONFRCNTR_77
XEONSCAL4 0x384E IIOPMONFRCNTR_78
XEONSCAL4 0x384F IIOPMONFRCNTR_79
XEONSCAL4 0x3850 IIOPMONFRCNTR_80
XEONSCAL4 0x3851 IIOPMONFRCNTR_81
XEONSCAL4 0x3852 IIOPMONFRCNTR_82
XEONSCAL4 0x3853 IIOPMONFRCNTR_83
XEONSCAL4 0x3854 IIOPMONFRCNTR_84
XEONSCAL4 0x3855 IIOPMONFRCNTR_85
XEONSCAL4 0x3856 IIOPMONFRCNTR_86
XEONSCAL4 0x3857 IIOPMONFRCNTR_87
XEONSCAL4 0x3858 IIOPMONFRCNTR_88
XEONSCAL4 0x3859 IIOPMONFRCNTR_89
XEONSCAL4 0x385A IIOPMONFRCNTR_90
XEONSCAL4 0x385B IIOPMONFRCNTR_91
XEONSCAL4 0x385C IIOPMONFRCNTR_92
XEONSCAL4 0x385D IIOPMONFRCNTR_93
XEONSCAL4 0x385E IIOPMONFRCNTR_94
XEONSCAL4 0x385F IIOPMONFRCNTR_95
XEONSCAL4 0x3860 IIOPMONFRCNTR_96
XEONSCAL4 0x3861 IIOPMONFRCNTR_97
XEONSCAL4 0x3862 IIOPMONFRCNTR_98
XEONSCAL4 0x3863 IIOPMONFRCNTR_99
XEONSCAL4 0x3864 IIOPMONFRCNTR_100
XEONSCAL4 0x3865 IIOPMONFRCNTR_101
XEONSCAL4 0x3866 IIOPMONFRCNTR_102
XEONSCAL4 0x3867 IIOPMONFRCNTR_103
XEONSCAL4 0x3868 IIOPMONFRCNTR_104
XEONSCAL4 0x3869 IIOPMONFRCNTR_105
XEONSCAL4 0x386A IIOPMONFRCNTR_106
XEONSCAL4 0x386B IIOPMONFRCNTR_107
XEONSCAL4 0x386C IIOPMONFRCNTR_108
XEONSCAL4 0x386D IIOPMONFRCNTR_109
XEONSCAL4 0x386E IIOPMONFRCNTR_110
XEONSCAL4 0x386F IIOPMONFRCNTR_111
XEONSCAL4 0x3870 IIOPMONFRCNTR_112
XEONSCAL4 0x3871 IIOPMONFRCNTR_113
XEONSCAL4 0x3872 IIOPMONFRCNTR_114
XEONSCAL4 0x3873 IIOPMONFRCNTR_115
XEONSCAL4 0x3874 IIOPMONFRCNTR_116
XEONSCAL4 0x3875 IIOPMONFRCNTR_117
XEONSCAL4 0x3876 IIOPMONFRCNTR_118
XEONSCAL4 0x3877 IIOPMONFRCNTR_119
XEONSCAL4 0x3878 IIOPMONFRCNTR_120
XEONSCAL4 0x3879 IIOPMONFRCNTR_121
XEONSCAL4 0x387A IIOPMONFRCNTR_122
XEONSCAL4 0x387B IIOPMONFRCNTR_123
XEONSCAL4 0x387C IIOPMONFRCNTR_124
XEONSCAL4 0x387D IIOPMONFRCNTR_125
XEONSCAL4 0x387E IIOPMONFRCNTR_126
XEONSCAL4 0x387F IIOPMONFRCNTR_127
XEONSCAL4 0x3880 IIOPMONFRCNTR_128
XEONSCAL4 0x3881 IIOPMONFRCNTR_129
XEONSCAL4 0x3882 IIOPMONFRCNTR_130
XEONSCAL4 0x3883 IIOPMONFRCNTR_131
XEONSCAL4 0x3884 IIOPMONFRCNTR_132
XEONSCAL4 0x3885 IIOPMONFRCNTR_133
XEONSCAL4 0x3886 IIOPMONFRCNTR_134
XEONSCAL4 0x3887 IIOPMONFRCNTR_135
XEONSCAL4 0x3888 IIOPMONFRCNTR_136
XEONSCAL4 0x3889 IIOPMONFRCNTR_137
XEONSCAL4 0x388A IIOPMONFRCNTR_138
XEONSCAL4 0x388B IIOPMONFRCNTR_139
XEONSCAL4 0x388C IIOPMONFRCNTR_140
XEONSCAL4 0x388D IIOPMONFRCNTR_141
XEONSCAL4 0x388E IIOPMONFRCNTR_142
XEONSCAL4 0x388F IIOPMONFRCNTR_143
XEONSCAL4 0x3890 IIOPMONFRCNTR_144
XEONSCAL4 0x3891 IIOPMONFRCNTR_145
XEONSCAL4 0x3892 IIOPMONFRCNTR_146
XEONSCAL4 0x3893 IIOPMONFRCNTR_147
XEONSCAL4 0x3894 IIOPMONFRCNTR_148
XEONSCAL4 0x3895 IIOPMONFRCNTR_149
XEONSCAL4 0x3896 IIOPMONFRCNTR_150
XEONSCAL4 0x3897 IIOPMONFRCNTR_151
XEONSCAL4 0x3898 IIOPMONFRCNTR_152
XEONSCAL4 0x3899 IIOPMONFRCNTR_153
XEONSCAL4 0x389A IIOPMONFRCNTR_154
XEONSCAL4 0x389B IIOPMONFRCNTR_155
XEONSCAL4 0x389C IIOPMONFRCNTR_156
XEONSCAL4 0x389D IIOPMONFRCNTR_157
XEONSCAL4 0x389E IIOPMONFRCNTR_158
XEONSCAL4 0x389F IIOPMONFRCNTR_159
XEONSCAL4 0x38A0 IIOPMONFRCNTR_160
XEONSCAL4 0x38A1 IIOPMONFRCNTR_161
XEONSCAL4 0x38A2 IIOPMONFRCNTR_162
XEONSCAL4 0x38A3 IIOPMONFRCNTR_163
XEONSCAL4 0x38A4 IIOPMONFRCNTR_164
XEONSCAL4 0x38A5 IIOPMONFRCNTR_165
XEONSCAL4 0x38A6 IIOPMONFRCNTR_166
XEONSCAL4 0x38A7 IIOPMONFRCNTR_167
XEONSCAL4 0x38A8 IIOPMONFRCNTR_168
XEONSCAL4 0x38A9 IIOPMONFRCNTR_169
XEONSCAL4 0x38AA IIOPMONFRCNTR_170
XEONSCAL4 0x38AB IIOPMONFRCNTR_171
XEONSCAL4 0x38AC IIOPMONFRCNTR_172
XEONSCAL4 0x38AD IIOPMONFRCNTR_173
XEONSCAL4 0x38AE IIOPMONFRCNTR_174
XEONSCAL4 0x38AF IIOPMONFRCNTR_175
XEONSCAL4 0x38B0 IIOPMONFRCNTR_176
XEONSCAL4 0x38B1 IIOPMONFRCNTR_177
XEONSCAL4 0x38B2 IIOPMONFRCNTR_178
XEONSCAL4 0x38B3 IIOPMONFRCNTR_179
XEONSCAL4 0x38B4 IIOPMONFRCNTR_180
XEONSCAL4 0x38B5 IIOPMONFRCNTR_181
XEONSCAL4 0x38B6 IIOPMONFRCNTR_182
XEONSCAL4 0x38B7 IIOPMONFRCNTR_183
XEONSCAL4 0x38B8 IIOPMONFRCNTR_184
XEONSCAL4 0x38B9 IIOPMONFRCNTR_185
XEONSCAL4 0x38BA IIOPMONFRCNTR_186
XEONSCAL4 0x38BB IIOPMONFRCNTR_187
XEONSCAL4 0x38BC IIOPMONFRCNTR_188
XEONSCAL4 0x38BD IIOPMONFRCNTR_189
XEONSCAL4 0x38BE IIOPMONFRCNTR_190
XEONSCAL4 0x38BF IIOPMONFRCNTR_191

# Intel-SDM-Vol4 (Intel Core Microarchitecture)
0x107CC EMON_L3_CTR_CTL0 # GBUSQ Event Control/Counter Register
0x107CD EMON_L3_CTR_CTL1 # GBUSQ Event Control/Counter Register
0x107CE EMON_L3_CTR_CTL2 # GSNPQ Event Control/Counter Register
0x107CF EMON_L3_CTR_CTL3 # GSNPQ Event Control/Counter Register
0x107D0 EMON_L3_CTR_CTL4 # FSB Event Control/Counter Register
0x107D1 EMON_L3_CTR_CTL5 # FSB Event Control/Counter Register
0x107D2 EMON_L3_CTR_CTL6 # FSB Event Control/Counter Register
0x107D3 EMON_L3_CTR_CTL7 # FSB Event Control/Counter Register
0x107D8 EMON_L3_GL_CTL # L3/FSB Common Control Register

# Intel-SDM-Vol4 (MSRs Unique to Intel Xeon Processor MP with L3 Cache)
XEONMPL3 0x107CC IFSB_BUSQ0 # IFSB BUSQ Event Control and Counter Register
XEONMPL3 0x107CD IFSB_BUSQ1 # IFSB BUSQ Event Control and Counter Register
XEONMPL3 0x107CE IFSB_SNPQ0 # IFSB SNPQ Event Control and Counter Register
XEONMPL3 0x107CF IFSB_SNPQ1 # IFSB SNPQ Event Control and Counter Register
XEONMPL3 0x107D0 EFSB_DRDY0 # EFSB DRDY Event Control and Counter Register
XEONMPL3 0x107D1 EFSB_DRDY1 # EFSB DRDY Event Control and Counter Register
XEONMPL3 0x107D2 IFSB_CTL6  # IFSB Latency Event Control Register
XEONMPL3 0x107D3 IFSB_CNTR7 # IFSB Latency Event Counter Register

# Hyper-V MSR from https://learn.microsoft.com/en-us/virtualization/hyper-v-on-windows/tlfs/hypercall-interface
# https://github.com/chipsec/chipsec/blob/1.10.4/chipsec/modules/tools/vmm/hv/define.py
# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/hyperv-tlfs.h?h=v6.2
# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/tools/testing/selftests/kvm/include/x86_64/hyperv.h?h=v6.2
HYPERV 0x40000000 HV_X64_MSR_GUEST_OS_ID        # identify the guest OS
HYPERV 0x40000001 HV_X64_MSR_HYPERCALL          # setup pages used to communicate with the hypervisor
HYPERV 0x40000002 HV_X64_MSR_VP_INDEX           # provide vcpu index
HYPERV 0x40000003 HV_X64_MSR_RESET              # reset the guest OS
HYPERV 0x40000010 HV_X64_MSR_VP_RUNTIME         # provide vcpu runtime in 100ns units
HYPERV 0x40000020 HV_X64_MSR_TIME_REF_COUNT     # read the per-partition time reference counter
HYPERV 0x40000021 HV_X64_MSR_REFERENCE_TSC      # partition's reference time stamp counter (TSC) page
HYPERV 0x40000022 HV_X64_MSR_TSC_FREQUENCY      # retrieve the TSC frequency
HYPERV 0x40000023 HV_X64_MSR_APIC_FREQUENCY     # retrieve the local APIC timer frequency
HYPERV 0x40000040 HV_X64_MSR_NPIEP_CONFIG       # Non-Privileged Instruction Execution Prevention configuration
HYPERV 0x40000070 HV_X64_MSR_EOI                # virtual APIC register
HYPERV 0x40000071 HV_X64_MSR_ICR                # virtual APIC register
HYPERV 0x40000072 HV_X64_MSR_TPR                # virtual APIC register
HYPERV 0x40000073 HV_X64_MSR_APIC_ASSIST_PAGE   # virtual APIC register
HYPERV 0x40000080 HV_X64_MSR_SCONTROL           # synthetic interrupt controller model specific registers...
# FIXME HV_X64_MSR_SIRBP is referenced without any value
HYPERV 0x40000081 HV_X64_MSR_SVERSION
HYPERV 0x40000082 HV_X64_MSR_SIEFP
HYPERV 0x40000083 HV_X64_MSR_SIMP
HYPERV 0x40000084 HV_X64_MSR_EOM
HYPERV 0x40000090 HV_X64_MSR_SINT0
HYPERV 0x40000091 HV_X64_MSR_SINT1
HYPERV 0x40000092 HV_X64_MSR_SINT2
HYPERV 0x40000093 HV_X64_MSR_SINT3
HYPERV 0x40000094 HV_X64_MSR_SINT4
HYPERV 0x40000095 HV_X64_MSR_SINT5
HYPERV 0x40000096 HV_X64_MSR_SINT6
HYPERV 0x40000097 HV_X64_MSR_SINT7
HYPERV 0x40000098 HV_X64_MSR_SINT8
HYPERV 0x40000099 HV_X64_MSR_SINT9
HYPERV 0x4000009A HV_X64_MSR_SINT10
HYPERV 0x4000009B HV_X64_MSR_SINT11
HYPERV 0x4000009C HV_X64_MSR_SINT12
HYPERV 0x4000009D HV_X64_MSR_SINT13
HYPERV 0x4000009E HV_X64_MSR_SINT14
HYPERV 0x4000009F HV_X64_MSR_SINT15
HYPERV 0x400000B0 HV_X64_MSR_STIMER0_CONFIG     # Synthetic Timer
HYPERV 0x400000B1 HV_X64_MSR_STIMER0_COUNT
HYPERV 0x400000B2 HV_X64_MSR_STIMER1_CONFIG
HYPERV 0x400000B3 HV_X64_MSR_STIMER1_COUNT
HYPERV 0x400000B4 HV_X64_MSR_STIMER2_CONFIG
HYPERV 0x400000B5 HV_X64_MSR_STIMER2_COUNT
HYPERV 0x400000B6 HV_X64_MSR_STIMER3_CONFIG
HYPERV 0x400000B7 HV_X64_MSR_STIMER3_COUNT
HYPERV 0x400000C1 HV_X64_MSR_POWER_STATE_TRIGGER_C1
HYPERV 0x400000C2 HV_X64_MSR_POWER_STATE_TRIGGER_C2
HYPERV 0x400000C3 HV_X64_MSR_POWER_STATE_TRIGGER_C3
HYPERV 0x400000D1 HV_X64_MSR_POWER_STATE_CONFIG_C1
HYPERV 0x400000D2 HV_X64_MSR_POWER_STATE_CONFIG_C2
HYPERV 0x400000D3 HV_X64_MSR_POWER_STATE_CONFIG_C3
HYPERV 0x400000E0 HV_X64_MSR_STATS_PARTITION_RETAIL_PAGE
HYPERV 0x400000E1 HV_X64_MSR_STATS_PARTITION_INTERNAL_PAGE
HYPERV 0x400000E2 HV_X64_MSR_STATS_VP_RETAIL_PAGE
HYPERV 0x400000E3 HV_X64_MSR_STATS_VP_INTERNAL_PAGE
HYPERV 0x400000F0 HV_X64_MSR_GUEST_IDLE                     # Hyper-V guest idle
HYPERV 0x400000F1 HV_X64_MSR_SYNTH_DEBUG_CONTROL
HYPERV 0x400000F2 HV_X64_MSR_SYNTH_DEBUG_STATUS
HYPERV 0x400000F3 HV_X64_MSR_SYNTH_DEBUG_SEND_BUFFER
HYPERV 0x400000F4 HV_X64_MSR_SYNTH_DEBUG_RECEIVE_BUFFER
HYPERV 0x400000F5 HV_X64_MSR_SYNTH_DEBUG_PENDING_BUFFER
HYPERV 0x400000FF HV_X64_MSR_SYNDBG_OPTIONS
HYPERV 0x40000100 HV_X64_MSR_CRASH_P0           # Hyper-V guest crash notification
HYPERV 0x40000101 HV_X64_MSR_CRASH_P1
HYPERV 0x40000102 HV_X64_MSR_CRASH_P2
HYPERV 0x40000103 HV_X64_MSR_CRASH_P3
HYPERV 0x40000104 HV_X64_MSR_CRASH_P4
HYPERV 0x40000105 HV_X64_MSR_CRASH_CTL
HYPERV 0x40000106 HV_X64_MSR_REENLIGHTENMENT_CONTROL    # TSC emulation after migration
HYPERV 0x40000107 HV_X64_MSR_TSC_EMULATION_CONTROL
HYPERV 0x40000108 HV_X64_MSR_TSC_EMULATION_STATUS
HYPERV 0x40000118 HV_X64_MSR_TSC_INVARIANT_CONTROL      # TSC invariant control

HYPERV 0x40001002 HV_X64_MSR_NESTED_VP_INDEX    # In a nested root partition, reports the current processor's underlying VP index
HYPERV 0x40001080 HV_X64_MSR_NESTED_SCONTROL    # Used to control specific behaviors of the synthetic interrupt controller of the base hypervisor in a nested root partition
HYPERV 0x40001081 HV_X64_MSR_NESTED_SVERSION    # Specifies the SynIC version of the base hypervisor in a nested root partition
HYPERV 0x40001082 HV_X64_MSR_NESTED_SIEFP       # Controls the base address of the synthetic interrupt event flag page of the base hypervisor in a nested root partition
HYPERV 0x40001083 HV_X64_MSR_NESTED_SIMP        # Controls the base address of the synthetic interrupt parameter page of the base hypervisor in a nested root partition
HYPERV 0x40001084 HV_X64_MSR_NESTED_EOM         # Indicates the end of message in the SynIC of the base hypervisor in a nested root partition
HYPERV 0x40001090 HV_X64_MSR_NESTED_SINT0       # Configures synthetic interrupt source 0 of the base hypervisor in a nested root partition
HYPERV 0x40001091 HV_X64_MSR_NESTED_SINT1
HYPERV 0x40001092 HV_X64_MSR_NESTED_SINT2
HYPERV 0x40001093 HV_X64_MSR_NESTED_SINT3
HYPERV 0x40001094 HV_X64_MSR_NESTED_SINT4
HYPERV 0x40001095 HV_X64_MSR_NESTED_SINT5
HYPERV 0x40001096 HV_X64_MSR_NESTED_SINT6
HYPERV 0x40001097 HV_X64_MSR_NESTED_SINT7
HYPERV 0x40001098 HV_X64_MSR_NESTED_SINT8
HYPERV 0x40001099 HV_X64_MSR_NESTED_SINT9
HYPERV 0x4000109A HV_X64_MSR_NESTED_SINT10
HYPERV 0x4000109B HV_X64_MSR_NESTED_SINT11
HYPERV 0x4000109C HV_X64_MSR_NESTED_SINT12
HYPERV 0x4000109D HV_X64_MSR_NESTED_SINT13
HYPERV 0x4000109E HV_X64_MSR_NESTED_SINT14
HYPERV 0x4000109F HV_X64_MSR_NESTED_SINT15

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/uapi/asm/kvm_para.h?h=v6.1
# https://gitlab.com/qemu-project/qemu/-/blob/v7.2.0/include/standard-headers/asm-x86/kvm_para.h
KVM 0x4B564D00 KVM_WALL_CLOCK_NEW
KVM 0x4B564D01 KVM_SYSTEM_TIME_NEW
KVM 0x4B564D02 KVM_ASYNC_PF_EN
KVM 0x4B564D03 KVM_STEAL_TIME
KVM 0x4B564D04 KVM_PV_EOI_EN
KVM 0x4B564D05 KVM_POLL_CONTROL
KVM 0x4B564D06 KVM_ASYNC_PF_INT
KVM 0x4B564D07 KVM_ASYNC_PF_ACK
KVM 0x4B564D08 KVM_MIGRATION_CONTROL

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h?h=v6.1 Transmeta defined MSRs
# http://datasheets.chipdb.org/Transmeta/Crusoe/Crusoe_MSR_4-10-02.pdf
TRANSMETA 0x80860000 CPUID_TFMS         # CPUID type. family, model and stepping
TRANSMETA 0x80860001 CPUID_VND1         # CPUID vendor ID string, part 1/3
TRANSMETA 0x80860002 CPUID_VND2         # CPUID vendor ID string, part 2/3
TRANSMETA 0x80860003 CPUID_VND3         # CPUID vendor ID string, part 3/3
TRANSMETA 0x80860004 CPUID_MASK         # CPUID  feature flags mask

TRANSMETA 0x80868010 LONGRUN_CTRL       # LongRun control and status register
TRANSMETA 0x80868011 LONGRUN_FLAGS      # LongRun flags register
TRANSMETA 0x80868018 LRTI_READOUT       # LongRun Table Interface readout
TRANSMETA 0x80868019 LRTI_PERF          # LongRun Table Interface performance index
TRANSMETA 0x8086801A LRTI_VOLT_MHZ      # LongRun Table Interface voltage and frequency
TRANSMETA 0x8086801B LRTI_DIV_MEM       # LongRun Table Interface memory divisors
TRANSMETA 0x8086801C LRTI_DIV_IO        # LongRun Table Interface I/O divisors
TRANSMETA 0x8086801D LRTI_GATE          # LongRun Table Interface gate delay
TRANSMETA 0x80868030 LRTI_SDR_MISC      # LongRun Table Interface SDR MISC
TRANSMETA 0x80868031 LRTI_SDR_TIF       # LongRun Table Interface SDR TIF
TRANSMETA 0x80868032 LRTI_SDR_MRS       # LongRun Table Interface SDR MRS
TRANSMETA 0x80868033 LRTI_SDR_LBT       # LongRun Table Interface SDR LBT
TRANSMETA 0x80868034 LRTI_DDR_MISC_TIF  # LongRun Table Interface DDR MISC/TIF
TRANSMETA 0x80868035 LRTI_DDR_MRS0      # LongRun Table Interface DDR MRS0
TRANSMETA 0x80868036 LRTI_DDR_MRS1_MRS2 # LongRun Table Interface DDR MRS1_MRS2
TRANSMETA 0x80868037 LRTI_PFTIMING      # LongRun Table Interface PFTIMING

0xC0000080 IA32_EFER   # Intel-SDM-Vol4 Extended Feature Enable
0xC0000081 IA32_STAR   # Intel-SDM-Vol4 System Call Target Address
0xC0000082 IA32_LSTAR  # Intel-SDM-Vol4 IA-32e Long Mode System Call Target Address
0xC0000083 IA32_CSTAR  # Intel-SDM-Vol4 IA-32e Compatibility Mode System Call Target Address. Not used, as the SYSCALL instruction is not recognized in compatibility mode
0xC0000084 IA32_FMASK  # Intel-SDM-Vol4 System Call Flag Mask

AMDK6 0xC0000082 WHCR  # AMD-K6 Write Handling Control Register
AMDK6 0xC0000085 UWCCR # AMD-K6 UC/WC Cacheability Control Register
AMDK6 0xC0000086 EPMR  # AMD-K6 Enhanced Power Management Register (only in low-power versions)
AMDK6 0xC0000087 PSOR  # AMD-K6 Processor State Observability Register
AMDK6 0xC0000088 PFIR  # AMD-K6 Page Flush/Invalidate Register
AMDK6 0xC0000089 L2AAR # AMD-K6 Level-2 Cache Array Register

AMD64 0xC00000E7 M_PERF_READ_ONLY # AMD64-Vol2 Read only version of MPERF
AMD64 0xC00000E8 A_PERF_READ_ONLY # AMD64-Vol2 Read only version of APERF
AMD64 0xC00000E9 IR_PERF_COUNT    # AMD64-Vol2 Dedicated instructions retired performance counter.

0xC0000100 IA32_FS_BASE  # Intel-SDM-Vol4 Map of BASE Address of FS
0xC0000101 IA32_GS_BASE  # Intel-SDM-Vol4 Map of BASE Address of GS
0xC0000102 IA32_KERNEL_GS_BASE  # Intel-SDM-Vol4 Swap Target of BASE Address of GS

0xC0000103 IA32_TSC_AUX  # Intel-SDM-Vol4 Auxiliary TSC

AMD64 0xC0000104 TSC_RATIO                # AMD64-Vol2 Specifies the TSCRatio value which is used to scale the TSC value read by a Guest

AMD64 0xC0000105 LWP_CFG    # AMD-2013 Lightweight Profile Configuration
AMD64 0xC0000106 LWP_CBADDR # AMD-2013 Lightweight Profile Control Block Address

AMD64 0xC0000108 PREFETCH_CONTROL         # AMD64-Vol2 Controls enabling / disabling hardware prefetchers
AMD64 0xC000010E LAST_BRANCH_STACK_SELECT # AMD64-Vol2 Software Debug "Last Branch Record Stack
AMD64 0xC000010F DEBUG_EXTN_CTL           # AMD64-Vol2 Software Debug "Debug-Extension-Control MSR

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/kernel/cpu/resctrl/internal.h?h=v6.1 defines MSR_IA32_MBA_BW_BASE=0xc0000200
# https://github.com/intel/intel-cmt-cat/blob/6f385efba25682bc1d3dd2332fd177639ac8d0c7/lib/cpu_registers.h defines PQOS_MSR_MBA_MASK_START_AMD=0xC0000200
AMD64 0xC0000200 MBA_BW_0  # Memory Bandwidth Allocation

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=5b6fac3fa44bafee12e0c3d1c5cbae6d058e9c98 defines MSR_IA32_SMBA_BW_BASE=0xc0000280
AMD64 0xC0000280 SMBA_BW_BASE   # Slow Memory Bandwidth Allocation

AMD64 0xC0000300 PERF_CNTR_GLOBAL_STATUS     # AMD64-Vol2 Core Performance Counter Status Registers
AMD64 0xC0000301 PERF_CNTR_GLOBAL_CTL        # AMD64-Vol2 Core Performance Global Control Register (with a typo: "PerfCntrGobalCtl" in the spec)
AMD64 0xC0000302 PERF_CNTR_GLOBAL_STATUS_CLR # AMD64-Vol2 Performance Counter Global Status Clear Register
AMD64 0xC0000303 PERF_CNTR_GLOBAL_STATUS_SET # AMD64-Vol2 Performance Counter Global Status Set Register

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=dc2a3e857981f859889933cf66ded117d74edff1 defines MSR_IA32_EVT_CFG_BASE=0xc0000400
AMD64 0xC0000400 EVT_CFG_BASE   # Monitor Event Configuration

# AMD64-Vol2 Additional Machine-Check Miscellaneous-Error Information Registers
AMD64 0xC0000408 MC4_MISC1    # AMD64-Vol2 (AMD-2013: "Link Thresholding")
AMD64 0xC0000409 MC4_MISC2    # AMD64-Vol2 (AMD-2013: "L3 Thresholding")
AMD64 0xC000040A MC4_MISC3    # AMD64-Vol2
AMD64 0xC000040B MC4_MISC4    # AMD64-Vol2
AMD64 0xC000040C MC4_MISC5    # AMD64-Vol2
AMD64 0xC000040D MC4_MISC6    # AMD64-Vol2
AMD64 0xC000040E MC4_MISC7    # AMD64-Vol2
AMD64 0xC000040F MC4_MISC8    # AMD64-Vol2

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/kernel/cpu/mce/amd.c?h=v6.1 defines MSR_CU_DEF_ERR=0xC0000410 (Deferred error settings)
AMD64 0xC0000410 MCA_INTR_CFG # AMD64-Vol2 MCA interrupt configuration

# AMD64 0xC0001019 DR1_ADDR_MASK # AMD64-Vol2 Address mask for DR1 breakpoint (probably a typo for 0xC0011019)
# AMD64 0xC000101A DR2_ADDR_MASK # AMD64-Vol2 Address mask for DR2 breakpoint (probably a typo for 0xC001101A)
# AMD64 0xC000101B DR3_ADDR_MASK # AMD64-Vol2 Address mask for DR3 breakpoint (probably a typo for 0xC001101B)
# AMD64 0xC0001027 DR0_ADDR_MASK # AMD64-Vol2 Address mask for DR0 breakpoint (probably a typo for 0xC0011027)

# AMD64-Vol2 MCAi_... Machine Check Architecture Registers, 32 banks at 0xC000200x + 0x10*i.
# AMD-2017 Bank 0 is LS, 1 is IF, 2 is L2, 3 is DE, 5 is EX, 6 is FP, 7 is L3, 0xF is UMC, 0x13 is PB, 0x14 is CS, 0x16 is PIE
AMD64 0xC0002000 MCA0_CTL
AMD64 0xC0002001 MCA0_STATUS # Machine-Check Status Register
AMD64 0xC0002002 MCA0_ADDR   # Machine-Check Address Register
AMD64 0xC0002003 MCA0_MISC0  # Machine-Check Miscellaneous-Error Information Register 0
AMD64 0xC0002004 MCA0_CONFIG # MCA Configuration Register
AMD64 0xC0002005 MCA0_IPID   # MCA IP Identification
AMD64 0xC0002006 MCA0_SYND   # MCA Syndrome Register
AMD64 0xC0002008 MCA0_DESTAT # MCA Deferred Error Status Register
AMD64 0xC0002009 MCA0_DEADDR # MCA Deferred Error Address Register
AMD64 0xC000200A MCA0_MISC1  # MCA Miscellaneous Register 1
AMD64 0xC000200B MCA0_MISC2  # MCA Miscellaneous Register 2
AMD64 0xC000200C MCA0_MISC3  # MCA Miscellaneous Register 3
AMD64 0xC000200D MCA0_MISC4  # MCA Miscellaneous Register 4
AMD64 0xC000200E MCA0_SYND1  # MCA Syndrome Register 1
AMD64 0xC000200F MCA0_SYND2  # MCA Syndrome Register Z

AMD64 0xC0010000 PERFEVTSEL0 # AMD64-Vol2 Core Performance Event-Select Register (AMD-2017 defines it as Legacy)
AMD64 0xC0010001 PERFEVTSEL1 # AMD64-Vol2 Core Performance Event-Select Register (AMD-2017 defines it as Legacy)
AMD64 0xC0010002 PERFEVTSEL2 # AMD64-Vol2 Core Performance Event-Select Register (AMD-2017 defines it as Legacy)
AMD64 0xC0010003 PERFEVTSEL3 # AMD64-Vol2 Core Performance Event-Select Register (AMD-2017 defines it as Legacy)
AMD64 0xC0010004 PERFCTR0    # AMD64-Vol2 Performance Counter (AMD-2017 defines it as Legacy)
AMD64 0xC0010005 PERFCTR1    # AMD64-Vol2 Performance Counter (AMD-2017 defines it as Legacy)
AMD64 0xC0010006 PERFCTR2    # AMD64-Vol2 Performance Counter (AMD-2017 defines it as Legacy)
AMD64 0xC0010007 PERFCTR3    # AMD64-Vol2 Performance Counter (AMD-2017 defines it as Legacy)

# https://github.com/fwupd/fwupd/blob/55bd4862d3ad8f0c7bf92dc6d7732afcad6e47a8/plugins/msr/fu-plugin-msr.c#L51
AMD64 0xC0010010 SYSCFG # AMD64-Vol2 System Configuration Register

AMD64 0xC0010015 HWCR   # AMD64-Vol2 Hardware Configuration Register

AMD64 0xC0010016 IORR_BASE_0 # AMD64-Vol2 I/O Range Register
AMD64 0xC0010017 IORR_MASK_0 # AMD64-Vol2 Size of a variable-range I/O region
AMD64 0xC0010018 IORR_BASE_1 # AMD64-Vol2 I/O Range Register
AMD64 0xC0010019 IORR_MASK_1 # AMD64-Vol2 Size of a variable-range I/O region

AMD64 0xC001001A TOP_MEM # AMD64-Vol2 Top of Memory, boundary between system memory and memory-mapped I/O for addresses below 4 Gbytes

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h?h=v6.1
AMD64 0xC001001B CLK_CTL

AMD64 0xC001001D TOP_MEM2 # AMD64-Vol2 Boundary between system memory and memory-mapped I/O for addresses above 4 Gbytes
AMD64 0xC001001E MANID    # AMD-2007 Manufacturing Identification Number
AMD64 0xC001001F NB_CFG   # AMD-2007

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h?h=v6.1
AMD64 0xC0010020 PATCH_LOADER

AMD64 0xC0010022 MC_EXCEP_REDIR # AMD-2017 Machine Check Exception Redirection

AMD64 0xC0010030 PROCESSOR_NAME_STRING_0 # AMD64-Vol2 CPUID Name
AMD64 0xC0010031 PROCESSOR_NAME_STRING_1 # AMD64-Vol2 CPUID Name
AMD64 0xC0010032 PROCESSOR_NAME_STRING_2 # AMD64-Vol2 CPUID Name
AMD64 0xC0010033 PROCESSOR_NAME_STRING_3 # AMD64-Vol2 CPUID Name
AMD64 0xC0010034 PROCESSOR_NAME_STRING_4 # AMD64-Vol2 CPUID Name
AMD64 0xC0010035 PROCESSOR_NAME_STRING_5 # AMD64-Vol2 CPUID Name

AMD64 0xC001003E HTC             # AMD-2007 Hardware Thermal Control
AMD64 0xC001003F THERMAL_CONTROL # AMD-2007

AMD64 0xC0010041 FIDVID_CTL    # AMD-2007 Frequency ID and Voltage ID Control
AMD64 0xC0010042 FIDVID_STATUS # AMD-2007 Frequency ID and Voltage ID Status

AMD64 0xC0010044 MC0_CTL_MASK  # AMD-2007 Machine Check Control Mask Register (AMD-2013 LS)
AMD64 0xC0010045 MC1_CTL_MASK  # AMD-2007 Machine Check Control Mask Register (AMD-2013 IF)
AMD64 0xC0010046 MC2_CTL_MASK  # AMD-2007 Machine Check Control Mask Register (AMD-2013 CU)
AMD64 0xC0010047 MC3_CTL_MASK  # AMD-2007 Machine Check Control Mask Register
AMD64 0xC0010048 MC4_CTL_MASK  # AMD-2007 Machine Check Control Mask Register (AMD-2013 NB)
AMD64 0xC0010049 MC5_CTL_MASK  # AMD-2013 EX Machine Check Control Mask Register
AMD64 0xC001004A MC6_CTL_MASK  # AMD-2013 FP Machine Check Control Mask Register

AMD64 0xC0010050 IOTRAP_ADDR0  # AMD-2007 I/O and Configuration Space Trapping to SMI (AMD-2013 SMI_ON_IO_TRAP_0)
AMD64 0xC0010051 IOTRAP_ADDR1  # AMD-2007 I/O and Configuration Space Trapping to SMI
AMD64 0xC0010052 IOTRAP_ADDR2  # AMD-2007 I/O and Configuration Space Trapping to SMI
AMD64 0xC0010053 IOTRAP_ADDR3  # AMD-2007 I/O and Configuration Space Trapping to SMI
AMD64 0xC0010054 IOTRAP_CTL    # AMD-2007 I/O and Configuration Space Trapping to SMI

AMD64 0xC0010055 INT_PENDING_MSG # AMD-2013 Interrupt Pending

AMD64 0xC0010056 SMI_TRIGGER_IO_CYCLE # AMD64-Vol2 Specifies an IO cycle that may be generated when a local SMI trigger event occurs

AMD64 0xC0010058 MMIO_CFG_BASE_ADDR # AMD-2017 MMIO Configuration Base Address

AMD64 0xC0010060 BIST_RESULTS # AMD-2013 BIST Results

AMD64 0xC0010061 PSTATE_CURRENT_LIMIT # AMD64-Vol2 P-State Current Limit Register
AMD64 0xC0010062 PSTATE_CONTROL       # AMD64-Vol2 P-State Control Register
AMD64 0xC0010063 PSTATE_STATUS        # AMD64-Vol2 P-State Status Register

AMD64 0xC0010064 PSTATE_DEF_0 # AMD-2017 Core P-state
AMD64 0xC0010065 PSTATE_DEF_1 # AMD-2017 Core P-state
AMD64 0xC0010066 PSTATE_DEF_2 # AMD-2017 Core P-state
AMD64 0xC0010067 PSTATE_DEF_3 # AMD-2017 Core P-state
AMD64 0xC0010068 PSTATE_DEF_4 # AMD-2017 Core P-state
AMD64 0xC0010069 PSTATE_DEF_5 # AMD-2017 Core P-state
AMD64 0xC001006A PSTATE_DEF_6 # AMD-2017 Core P-state
AMD64 0xC001006B PSTATE_DEF_7 # AMD-2017 Core P-state

AMD64 0xC0010070 COFVID_CTL       # AMD-2013 COFVID Control
AMD64 0xC0010071 COFVID_STATUS    # AMD-2013 COFVID Control
AMD64 0xC0010072 SBI_PSTATE_LIMIT # AMD-2013 SBI P-state Limit
AMD64 0xC0010073 CSTATE_BASE_ADDR # AMD-2013 C-state Base Address

AMD64 0xC0010074 CPU_WATCHDOG_TIMER # AMD64-Vol2 Machine Check "CPU Watchdog Timer Register"

AMD64 0xC0010075 APML_TDP_LIMIT # AMD-2013 APML (Advanced Platform Management Link) TDP (Thermal Design Power) Limit

AMD64 0xC0010077 TDP_PROCESSOR_POWER          # AMD-2013 Processor Power in TDP
AMD64 0xC0010078 POWER_AVERAGING_PERIOD       # AMD-2013 Power Averaging Period
AMD64 0xC0010079 DRAM_CONTROLLER_CMD_THROTTLE # AMD-2013 DRAM Controller Command Throttle

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h?h=v6.1
AMD64 0xC001007A CU_PWR_ACCUMULATOR     # Linux: "F15H"
AMD64 0xC001007B CU_MAX_PWR_ACCUMULATOR # Linux: "F15H"

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/drivers/cpufreq/amd_freq_sensitivity.c?h=v6.1
AMD64 0xC0010080 FREQ_SENSITIVITY_ACTUAL
AMD64 0xC0010081 FREQ_SENSITIVITY_REFERENCE

# AMD64 0xC0010104 TSC_RATIO # AMD64-Vol2 defines C001_0104h as "TSC Ratio", but it is C000_0104h in fact.

AMD64 0xC0010111 SMBASE           # AMD64-Vol2 SMRAM base address (also known as SMM_BASE)
AMD64 0xC0010112 SMM_ADDR         # AMD64-Vol2 Base address of protected memory for the SMM Handler
AMD64 0xC0010113 SMM_MASK         # AMD64-Vol2 Size of the protected area for the SMM handler
AMD64 0xC0010114 VM_CR            # AMD64-Vol2 Controls certain global aspects of SVM
AMD64 0xC0010115 IGNNE            # AMD64-Vol2 Sets the state of the processor-internal IGNNE signal
AMD64 0xC0010116 SMM_CTL          # AMD64-Vol2 Provides software control over SMM signals
AMD64 0xC0010117 VM_HSAVE_PA      # AMD64-Vol2 Virtual Machine Host Save Physical Address
AMD64 0xC0010118 SVM_KEY          # AMD64-Vol2 Creates a password-protected mechanism to clear VM_CR.LOCK
AMD64 0xC0010119 SMM_KEY          # AMD64-Vol2 Creates a password-protected mechanism to clear SmmLock
AMD64 0xC001011A LOCAL_SMI_STATUS # AMD64-Vol2 Status associated with SMI sources local to the CPU core
AMD64 0xC001011B SVM_AVIC_DOORBELL # AMD64-Vol2 Register Sends a doorbell signal to the specified physical APIC (AMD-2017 AVIC Doorbell)
AMD64 0xC001011E VMPAGE_FLUSH     # AMD64-Vol2 Page Flush

# https://gitlab.com/qemu-project/qemu/-/blob/v7.2.0/target/i386/cpu.h defines MSR_VIRT_SSBD=0xc001011f
AMD64 0xC001011F VIRT_SPEC_CTRL   # AMD64-Vol2 Virtual Speculation Control

# https://github.com/tianocore/edk2/blob/5386c9e6dab2f6a555e679aff9f6a59f60c8e029/MdePkg/Include/Register/Amd/Fam17Msr.h
# https://github.com/AMDESE/AMDSEV/blob/c159b65c0893da6e7e29d5e79740579d2389c60b/README.md
# https://github.com/fwupd/fwupd/blob/55bd4862d3ad8f0c7bf92dc6d7732afcad6e47a8/plugins/msr/fu-plugin-msr.c#L52
AMD64 0xC0010130 SEV_ES_GHCB # Secure Encrypted Virtualization - Encrypted State (SEV-ES) GHCB register
AMD64 0xC0010131 SEV_STATUS # Secure Encrypted Virtualization (SEV) status register

AMD64 0xC0010132 RMP_BASE   # AMD64-Vol2 Base address of RMP (Reverse Map Table)
AMD64 0xC0010133 RMP_END    # AMD64-Vol2 Ending address of RMP

AMD64 0xC0010134 GUEST_TSC_FREQ  # AMD64-Vol2 Guest TSC Frequency
AMD64 0xC0010135 VIRTUAL_TOM     # AMD64-Vol2 SVM Virtual Top-of-Memory

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=8ae3291f773befee8fdeae11b0b1b5d380e4dfb6
AMD64 0xC0010136 RMP_CFG

AMD64 0xC0010137 IDLE_WAKEUP_ICR # AMD64-Vol2 SVM "Side-Channel Protection" (require sibling threads of a SEV-SNP VM to be idle, Interrupt Command Register)

AMD64 0xC0010140 OSVW_ID_LENGTH  # AMD64-Vol2 OS-Visible Workarounds, length of the status vector OSVW_E in bits
AMD64 0xC0010141 OSVW_STATUS     # AMD64-Vol2 OS-Visible Workarounds Status

AMD64 0xC0010200 PERFEVTSEL0 # AMD64-Vol2 Core Performance Event-Select Register
AMD64 0xC0010201 PERFCTR0    # AMD64-Vol2 Performance Counter
AMD64 0xC0010202 PERFEVTSEL1 # AMD64-Vol2 Core Performance Event-Select Register
AMD64 0xC0010203 PERFCTR1    # AMD64-Vol2 Performance Counter
AMD64 0xC0010204 PERFEVTSEL2 # AMD64-Vol2 Core Performance Event-Select Register
AMD64 0xC0010205 PERFCTR2    # AMD64-Vol2 Performance Counter
AMD64 0xC0010206 PERFEVTSEL3 # AMD64-Vol2 Core Performance Event-Select Register
AMD64 0xC0010207 PERFCTR3    # AMD64-Vol2 Performance Counter
AMD64 0xC0010208 PERFEVTSEL4 # AMD64-Vol2 Core Performance Event-Select Register
AMD64 0xC0010209 PERFCTR4    # AMD64-Vol2 Performance Counter
AMD64 0xC001020A PERFEVTSEL5 # AMD64-Vol2 Core Performance Event-Select Register
AMD64 0xC001020B PERFCTR5    # AMD64-Vol2 Performance Counter

# AMD64-Vol2 defines L2I perf event, AMD-2017 defines L3 perf event
AMD64 0xC0010230 L2I_PERFEVTSEL0 # AMD64-Vol2 L2 cache events Performance Event Select
AMD64 0xC0010231 L2I_PERFCTR0    # AMD64-Vol2 L2 cache events Performance Counter
AMD64 0xC0010232 L2I_PERFEVTSEL1
AMD64 0xC0010233 L2I_PERFCTR1
AMD64 0xC0010234 L2I_PERFEVTSEL2
AMD64 0xC0010235 L2I_PERFCTR2
AMD64 0xC0010236 L2I_PERFEVTSEL3
AMD64 0xC0010237 L2I_PERFCTR3

AMD64 0xC0010240 NB_PERFEVTSEL0 # AMD64-Vol2 Northbridge events Performance Event Select
AMD64 0xC0010241 NB_PERFCTR0    # AMD64-Vol2 Northbridge events Performance Counter
AMD64 0xC0010242 NB_PERFEVTSEL1
AMD64 0xC0010243 NB_PERFCTR1
AMD64 0xC0010244 NB_PERFEVTSEL2
AMD64 0xC0010245 NB_PERFCTR2
AMD64 0xC0010246 NB_PERFEVTSEL3
AMD64 0xC0010247 NB_PERFCTR3

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h?h=v6.1
AMD64 0xC0010280 PTSC # Linux: "F15H"

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/tools/power/x86/turbostat/turbostat.c?h=v6.1
AMD64 0xC0010299 RAPL_PWR_UNIT    # AMD-2017 RAPL Power Unit
AMD64 0xC001029A CORE_ENERGY_STAT # AMD-2017 Core Energy Status
AMD64 0xC001029B PKG_ENERGY_STAT  # AMD-2017 Package Energy Status

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h?h=v6.1
AMD64 0xC00102B0 CAP1
AMD64 0xC00102B1 CPPC_ENABLE
AMD64 0xC00102B2 CPPC_CAP2
AMD64 0xC00102B3 CPPC_REQ
AMD64 0xC00102B4 CPPC_STATUS
AMD64 0xC00102F0 PPIN_CTL
AMD64 0xC00102F1 PPIN

AMD64 0xC0010300 LASTBRANCH_STACK_FROM_IP_0 # AMD64-Vol2
AMD64 0xC0010301 LASTBRANCH_STACK_TO_IP_0   # AMD64-Vol2
AMD64 0xC0010302 LASTBRANCH_STACK_FROM_IP_1 # AMD64-Vol2
AMD64 0xC0010303 LASTBRANCH_STACK_TO_IP_1   # AMD64-Vol2
# ...

AMD64 0xC0010400 MCA_CTL_MASK_LS  # AMD-2017 LS Machine Check Control Mask
AMD64 0xC0010401 MCA_CTL_MASK_IF  # AMD-2017 IF Machine Check Control Mask
AMD64 0xC0010402 MCA_CTL_MASK_L2  # AMD-2017 L2 Machine Check Control Mask
AMD64 0xC0010403 MCA_CTL_MASK_DE  # AMD-2017 DE Machine Check Control Mask
AMD64 0xC0010405 MCA_CTL_MASK_EX  # AMD-2017 EX Machine Check Control Mask
AMD64 0xC0010406 MCA_CTL_MASK_FP  # AMD-2017 FP Machine Check Control Mask
AMD64 0xC0010407 MCA_CTL_MASK_L3  # AMD-2017 L3 Machine Check Control Mask
AMD64 0xC001040F MCA_CTL_MASK_UMC # AMD-2017 UMC Machine Check Control Mask
AMD64 0xC0010413 MCA_CTL_MASK_PB  # AMD-2017 PB Machine Check Control Mask
AMD64 0xC0010414 MCA_CTL_MASK_CS  # AMD-2017 CS Machine Check Control Mask
AMD64 0xC0010416 MCA_CTL_MASK_PIE # AMD-2017 PIE Machine Check Control Mask

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=25e56847821f7375bdee7dae1027c7917d07ce4b for Performance Monitoring Version 2 (PerfMonV2) introduced in Zen 4 defines MSR_F19H_UMC_PERF_CTL and MSR_F19H_UMC_PERF_CTR
AMD64ZEN4 0xC0010800 UMC_PERF_CTL
AMD64ZEN4 0xC0010801 UMC_PERF_CTR

AMD64 0xC0011002 CPUID_7_FEATURES   # AMD-2017 CPUID Features for CPUID Fn00000007_E[A,B]X
AMD64 0xC0011003 CPUID_PWR_THERM    # AMD-2017 Thermal and Power Management CPUID Features
AMD64 0xC0011004 CPUID_FEATURES     # AMD-2017 CPUID Features for CPUID Fn00000001_E[C,D]X
AMD64 0xC0011005 CPUID_EXT_FEATURES # AMD-2017 CPUID Features for CPUID Fn80000001_E[C,D]X

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h?h=v6.1
AMD64 0xC001100C NODE_ID

AMD64 0xC0011019 DR1_ADDR_MASK # AMD64-Vol2 Address Mask for DR1 Breakpoint
AMD64 0xC001101A DR2_ADDR_MASK # AMD64-Vol2 Address Mask for DR2 Breakpoint
AMD64 0xC001101B DR3_ADDR_MASK # AMD64-Vol2 Address Mask for DR3 Breakpoint

AMD64 0xC0011020 LS_CFG # AMD-2013 Load-Store Configuration
AMD64 0xC0011021 IC_CFG # AMD-2013 Instruction Cache Configuration
AMD64 0xC0011022 DC_CFG # AMD-2013 Data Cache Configuration
#AMD64 0xC0011023 CU_CFG # AMD-2013 Combined Unit Configuration
# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=2770d4722036d6bd24bcb78e9cd7f6e572077d03
AMD64 0xC0011023 TW_CFG # AMD-2017 Table Walker Configuration

AMD64 0xC0011027 DR0_ADDR_MASK # AMD64-Vol2 Address Mask for DR0 Breakpoint

AMD64 0xC0011028 FP_CFG  # AMD-2013 Floating Point Configuration
AMD64 0xC0011029 DE_CFG  # AMD-2013 Decode Configuration
AMD64 0xC001102A CU_CFG2 # AMD-2013 Combined Unit Configuration 2
AMD64 0xC001102B CU_CFG3 # AMD-2013 Combined Unit Configuration 3
AMD64 0xC001102C EX_CFG  # AMD-2013 Execution Unit Configuration
AMD64 0xC001102D LS_CFG2 # AMD-2013 Load-Store Configuration 2

# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=f454b18e07f518bcd0c05af17a2239138bff52de "x86/cpu: Fix AMD erratum #1485 on Zen4-based CPUs" defines MSR_ZEN4_BP_CFG
AMD64ZEN4 0xC001102E BP_CFG # (bit 5 is shared BTB fix)

AMD64 0xC0011030 IBS_FETCH_CTL      # AMD-2017 IBS Fetch Control (AMD-2013 IC_IBS_CTL)
AMD64 0xC0011031 IBS_FETCH_LINADDR  # AMD-2017 IBS Fetch Linear Address (AMD-2013 IC_IBS_LIN_AD)
AMD64 0xC0011032 IBS_FETCH_PHYSADDR # AMD-2017 IBS Fetch Physical Address (AMD-2013 IC_IBS_PHYS_AD)
AMD64 0xC0011033 IBS_OP_CTL         # AMD-2017 IBS Execution Control (AMD-2013 SC_IBS_CTL)
AMD64 0xC0011034 IBS_OP_RIP         # AMD-2017 IBS Op Logical Address
AMD64 0xC0011035 IBS_OP_DATA        # AMD-2017 IBS Op Data (AMD-2013 SC_IBS_DATA)
AMD64 0xC0011036 IBS_OP_DATA2       # AMD-2017 IBS Op Data 2
AMD64 0xC0011037 IBS_OP_DATA3       # AMD-2017 IBS Op Data 3
AMD64 0xC0011038 IBS_DC_LINADDR     # AMD-2017 IBS DC Linear Address
AMD64 0xC0011039 IBS_DC_PHYSADDR    # AMD-2017 IBS DC Physical Address
AMD64 0xC001103A IBS_CTL            # AMD-2017 IBS Control
AMD64 0xC001103B BP_IBSTGT_RIP      # AMD-2017 IBS Branch Target Address
AMD64 0xC001103C IC_IBS_EXTD_CTL    # AMD-2017 IBS Fetch Control Extended
# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/msr-index.h?h=v6.1
AMD64 0xC001103D IBS_OP_DATA4       # IBS Op Data 3

AMD64 0xC0011095 L3_RANGE_RESERVE_BASE_ADDR # AMD64-Vol2 L3 Range Reserve Base Address Register (
AMD64 0xC0011096 L3_RANGE_RESERVE_MAX_ADDR  # AMD64-Vol2
AMD64 0xC001109A L3_RANGE_RESERVE_WAY_MASK  # AMD64-Vol2

# https://github.com/xen-project/xen/blob/RELEASE-4.17.0/xen/arch/x86/include/asm/msr-index.h
# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=d7caac991feeef1b871ee6988fd2c9725df09039 Linux named this MSR_ZEN2_SPECTRAL_CHICKEN, as it contains a chicken bit which is offered on the altar of Speculation
AMD64ZEN2 0xC00110E3 DE_CFG2 # Decode Configuration 2


# https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=1beb348d5c7fdef502a581bd73f792a2cf1535d6 : return the physical calling area address (CAA) on reads of this MSR
AMD64 0xC001F000 SVSM_CAA # SVSM (Secure VM Service Module) Calling Area Address
